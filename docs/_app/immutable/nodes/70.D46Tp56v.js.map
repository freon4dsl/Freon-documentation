{"version":3,"file":"70.D46Tp56v.js","sources":["../../../../../../src/routes/Examples/External_Components/An_Icon_Component/SectionStore.ts","../../../../../../src/routes/Examples/External_Components/An_Icon_Component/PageContent.svelte","../../../../../../src/routes/Examples/External_Components/An_Icon_Component/+page.svelte"],"sourcesContent":["import { writable, type Writable } from 'svelte/store';\nimport type { Section } from '$lib/section/SectionType';\n\nexport const mySections: Writable<Section[]> = writable<Section[]>([]);\n","<script lang=\"ts\">\n\timport SectionComponent from '$lib/section/SectionComponent.svelte';\n\timport { mySections } from './SectionStore.js';\n\t$mySections = [\n\t\t{ title: 'An Icon Component', visible: false, ref: '#an-icon-component-1' },\n\t\t{ title: 'Step 1: Create the Svelte Component', visible: false, ref: '#step-1-create-the-svelte-component-2' },\n\t\t{ title: 'Step 2: Add to the Global Section', visible: false, ref: '#step-2-add-to-the-global-section-3' },\n\t\t{ title: 'Step3: Include in the Projection', visible: false, ref: '#step3-include-in-the-projection-4' },\n\t\t{ title: 'Step4: Register in the Starter Code', visible: false, ref: '#step4-register-in-the-starter-code-5' },\n\t\t{ title: 'Final Result', visible: false, ref: '#final-result-6' }\n\t];\n\tlet visible: boolean[] = [];\n\t$: $mySections[0].visible = visible[0];\n\t$: $mySections[1].visible = visible[1];\n\t$: $mySections[2].visible = visible[2];\n\t$: $mySections[3].visible = visible[3];\n\t$: $mySections[4].visible = visible[4];\n\t$: $mySections[5].visible = visible[5];\n\timport copy from 'copy-to-clipboard';\n\timport { onMount } from 'svelte';\n\n\t/**\n\t * This function will go through all the 'pre' elements\n\t * on the page and add a copy button to them.\n\t * Thanks to: https://slavbasharov.com/blog/adding-click-to-copy-code-markdown-blog\n\t */\n\tonMount(() => {\n\t\tconst codeBlocks = document.querySelectorAll('pre');\n\t\tcodeBlocks.forEach((block) => {\n\t\t\tconst copyPrompt = document.createElement('div');\n\t\t\tcopyPrompt.className = 'copy-prompt';\n\t\t\tconst copyPromptText = document.createElement('p');\n\t\t\tcopyPromptText.innerHTML = 'ðŸ‘† Click to copy';\n\t\t\tcopyPromptText.className = 'copy-prompt-p';\n\t\t\tconst copyIcon = document.createElement('img');\n\t\t\tcopyIcon.src = '/icons/copy-icon.svg';\n\t\t\tcopyIcon.className = 'copy-prompt-img';\n\t\t\tcopyPrompt.appendChild(copyIcon);\n\t\t\tcopyPrompt.appendChild(copyPromptText);\n\t\t\tblock.appendChild(copyPrompt);\n\t\t\tblock.querySelector('.copy-prompt > p').addEventListener('click', (evt) => {\n\t\t\t\tcopy(block.querySelector('code').textContent);\n\t\t\t\tblock.querySelector('.copy-prompt > p').innerHTML = 'Copied!';\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tblock.querySelector('.copy-prompt > p').innerHTML = 'ðŸ‘† Click to copy';\n\t\t\t\t}, 1000);\n\t\t\t});\n\t\t});\n\t});\n\timport PrevNextSection from '$lib/prevNext/PrevNextSection.svelte';\n\n\tlet prevLink = '/Examples/External_Components/The_CourseSchedule_DSL';\n\tlet nextLink = '/Examples/External_Components/A_Wrapper_with_a_Button';\n\n\timport Figure from '$lib/figures/Figure.svelte';\n</script>\n\n<PrevNextSection {prevLink} {nextLink} />\n\n<SectionComponent tag=\"h1\" id=\"an-icon-component-1\" bind:intersecting={visible[0]}>An Icon Component</SectionComponent>\n<p>\n\tIn this part of the example, we will guide you through the process of enhancing the look of the <code>Staff</code> model by adding an icon\n\tto each person. We will create a custom Svelte component named <code>PersonIcon.svelte</code>, and integrate it into the editor. Letâ€™s get\n\tstarted!\n</p>\n<SectionComponent tag=\"h2\" id=\"step-1-create-the-svelte-component-2\" bind:intersecting={visible[1]}\n\t>Step 1: Create the Svelte Component</SectionComponent\n>\n<p>\n\tTo begin, we need to create a new Svelte component that will represent the icon for each person. Letâ€™s call it <code\n\t\t>PersonIcon.svelte</code\n\t>. This component must be linked to the box model of the Freon editor. In Freon, each external component must be associated with a box,\n\tand the <code>PersonIcon</code> component will be tied to a box type called <code>ExternalSimpleBox</code>. The parameter\n\t<code>editor: FreEditor</code> is also mandatory. When the component is instantiated by the Freon editor both parameters will get a value.\n</p>\n<p>The complete Svelte component should look like this:</p>\n<pre\n\tclass=\"language-ts\">{@html `<code class=\"language-ts\"><span class=\"token comment\">// CourseSchedule/phase2/src/external/PersonIcon.svelte</span>\n\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n    <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>ExternalSimpleBox<span class=\"token punctuation\">,</span> FreEditor<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@freon4dsl/core\"</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\">// Declare the 'box' and 'editor' parameters as required by Freon</span>\n    <span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> box<span class=\"token operator\">:</span> ExternalSimpleBox<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> editor<span class=\"token operator\">:</span> FreEditor<span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> Display the icon <span class=\"token keyword\">with</span> an image <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>img src<span class=\"token operator\">=</span><span class=\"token string\">'./icons8-person-94.png'</span> alt<span class=\"token operator\">=</span><span class=\"token string\">\"Icon showing Person\"</span> height<span class=\"token operator\">=</span><span class=\"token string\">\"30px\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n</code>`}</pre>\n<SectionComponent tag=\"h2\" id=\"step-2-add-to-the-global-section-3\" bind:intersecting={visible[2]}\n\t>Step 2: Add to the Global Section</SectionComponent\n>\n<p>\n\tThe next step is to inform the Freon code generator about the new external component. We can achieve this by modifying the <a\n\t\thref=\"/Documentation/Defining_an_Editor/Global_Projections\"><code>global</code></a\n\t> section of the default editor configuration.\n</p>\n<p>In the <code>main.edit</code> file, add the following code to declare the <code>PersonIcon</code> component:</p>\n<pre class=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// CourseSchedule/phase2/defs/main.edit#L3-L7\n</span>\n<span class=\"token class-name\">global</span> &#123;\n    <span class=\"token class-name\">external</span> &#123;\n        PersonIcon\n    &#125;\n&#125;</code>`}</pre>\n<p>\n\tThis tells the editor that <code>PersonIcon</code> is an external component. You can name it anything you like, but for simplicity, we\n\twill use <code>PersonIcon</code>.\n</p>\n<SectionComponent tag=\"h2\" id=\"step3-include-in-the-projection-4\" bind:intersecting={visible[3]}\n\t>Step3: Include in the Projection</SectionComponent\n>\n<p>\n\tTo include the new component, we need to reference it in the editorâ€™s projection for the <code>Person</code> concept. The way to do this\n\tis by adding <code>[external=PersonIcon]</code> to the projection. To be able to see the differences in the browser between the native\n\teditor and the one with external components we have decided to add the adjusted projection to a new editor (projection set). The icon is\n\tincluded in the fragment that shows the name and phone number details. Every fragment for the same concept must have a unique name.\n\tTherefore, we name this fragment <code>nameAndIcon</code>.\n</p>\n<pre class=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// CourseSchedule/phase2/defs/externals.edit\n</span>\n<span class=\"token keyword\">editor</span> externals\n\n<span class=\"token class-name\">Person</span> &#123;<span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token keyword\">fragment</span> nameAndIcon<span class=\"token punctuation\">]</span>\n        Availability: $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.availability <span class=\"token keyword\">checkbox</span></span>&#125; Competence: $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.competence</span>&#125;\n<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">fragment</span> nameAndIcon <span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span><span class=\"token keyword\">external</span>=PersonIcon<span class=\"token punctuation\">]</span> Nickname: $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.name</span>&#125;\nFull Name: $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.fullName</span>&#125;\nPhone <span class=\"token builtin\">number</span>: $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.phone</span>&#125;\n<span class=\"token punctuation\">]</span>\n&#125;\n</code>`}</pre>\n<SectionComponent tag=\"h2\" id=\"step4-register-in-the-starter-code-5\" bind:intersecting={visible[4]}\n\t>Step4: Register in the Starter Code</SectionComponent\n>\n<p>\n\tNow, we need to ensure the Freon editor knows how to instantiate our custom component. This is done by calling the <code\n\t\t>setCustomComponents</code\n\t> function in the applicationâ€™s startup code.\n</p>\n<p>\n\tIn your <code>externals.ts</code> file, import the <code>PersonIcon</code> component and add it to the <code>setCustomComponents</code> function\n\tlike this:\n</p>\n<pre\n\tclass=\"language-ts\">{@html `<code class=\"language-ts\"><span class=\"token comment\">// CourseSchedule/phase2/src/external/externals.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>setCustomComponents<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@freon4dsl/core-svelte\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> PersonIcon <span class=\"token keyword\">from</span> <span class=\"token string\">\"./PersonIcon.svelte\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Configure the external components used, so Freon can find them.\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">configureExternals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">setCustomComponents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">&#123;</span> component<span class=\"token operator\">:</span> PersonIcon<span class=\"token punctuation\">,</span> knownAs<span class=\"token operator\">:</span> <span class=\"token string\">\"PersonIcon\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n</code>`}</pre>\n<SectionComponent tag=\"h2\" id=\"final-result-6\" bind:intersecting={visible[5]}>Final Result</SectionComponent>\n<p>\n\tOnce all the steps are completed, your editor will look like this, with each person displaying their details alongside the newly added\n\ticon:\n</p>\n<Figure imageName={'examples/CourseSchedule/Screenshot-step2.png'} caption={'Editor with added Icon'} figureNumber={1} />\n<h3 id=\"conclusion-1\">Conclusion:</h3>\n<p>\n\tYouâ€™ve successfully added an icon to the <code>Staff</code> model in the Freon editor! By following these steps, youâ€™ve created a custom Svelte\n\tcomponent, integrated it into the Freon editor, and made it available in your projections.\n</p>\n<p>Next, you are going to learn how to get the information from the AST model, and use it in your external components.</p>\n\n<PrevNextSection {prevLink} {nextLink} />\n","<script lang=\"ts\">\n\timport { mySections } from './SectionStore.js';\n\timport type { Section } from '$lib/section/SectionType.js';\n\timport PageContent from './PageContent.svelte';\n\timport Breadcrumb from '$lib/breadcrumbs/Breadcrumb.svelte';\n\n\tlet showDetails: boolean = false;\n\t$: current = getCurrent($mySections);\n\n\tfunction getCurrent(internalSections: Section[]): number {\n\t\tlet previous = current;\n\t\tfor (let i = 0; i < internalSections.length; i++) {\n\t\t\tif (internalSections[i].visible) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn previous;\n\t}\n\tfunction toggleTocDetails() {\n\t\tshowDetails = !showDetails;\n\t}\n</script>\n\n<div class=\"page-main\">\n\t<div class=\"page-toc-small\">\n\t\t<p class=\"page-toc-small-title\">On this page ...</p>\n\t\t<button\n\t\t\tclass=\"page-toc-small-expand-button\"\n\t\t\ton:click={() => {\n\t\t\t\ttoggleTocDetails();\n\t\t\t}}\n\t\t>\n\t\t\t{#if showDetails}\n\t\t\t\t<img class=\"page-toc-small-img\" src=\"/icons/upload.png\" alt=\"arrow up\" />\n\t\t\t{:else}\n\t\t\t\t<img class=\"page-toc-small-img\" src=\"/icons/down-arrow.png\" alt=\"arrow down\" />\n\t\t\t{/if}\n\t\t</button>\n\t</div>\n\t{#if showDetails}\n\t\t<div class=\"toc-details\">\n\t\t\t<ul class=\"page-ul\">\n\t\t\t\t{#each $mySections as sec, index}\n\t\t\t\t\t<li class=\"page-toc-text\">\n\t\t\t\t\t\t<a class:page-visible={index === current} class:page-nonvisible={index !== current} href={sec.ref}>\n\t\t\t\t\t\t\t{sec.title}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t{/each}\n\t\t\t</ul>\n\t\t</div>\n\t{/if}\n\n\t<Breadcrumb />\n\t<PageContent />\n</div>\n\n<nav class=\"page-toc\">\n\t<h3 class=\"page-toc-title\">On this page</h3>\n\t<ul class=\"page-ul\">\n\t\t{#each $mySections as sec, index}\n\t\t\t<li class=\"page-toc-text\">\n\t\t\t\t<a class:page-visible={index === current} class:page-nonvisible={index !== current} href={sec.ref}>\n\t\t\t\t\t{sec.title}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t{/each}\n\t</ul>\n</nav>\n"],"names":["mySections","writable","ctx","sectioncomponent0_props","sectioncomponent1_props","sectioncomponent2_props","sectioncomponent3_props","sectioncomponent4_props","sectioncomponent5_props","insert_hydration","target","p0","anchor","p1","p2","pre0","p3","p4","pre1","p5","p6","pre2","p7","p8","pre3","p9","h3","p10","p11","sectioncomponent0_changes","sectioncomponent1_changes","sectioncomponent2_changes","sectioncomponent3_changes","sectioncomponent4_changes","sectioncomponent5_changes","prevLink","nextLink","$mySections","visible","onMount","block","copyPrompt","copyPromptText","copyIcon","evt","copy","$$self","value","set_store_value","img","i","div","append_hydration","ul","t0_value","attr","a","a_href_value","toggle_class","li","dirty","set_data","t0","create_if_block_1","create_if_block","div1","div0","p","button","nav","showDetails","getCurrent","internalSections","previous","current","toggleTocDetails","$$invalidate"],"mappings":"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"}