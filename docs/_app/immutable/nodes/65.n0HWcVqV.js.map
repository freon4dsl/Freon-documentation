{"version":3,"file":"65.n0HWcVqV.js","sources":["../../../../../../src/routes/Examples/Building_an_Interpreter/Finishing_the_Test/SectionStore.ts","../../../../../../src/routes/Examples/Building_an_Interpreter/Finishing_the_Test/PageContent.svelte","../../../../../../src/routes/Examples/Building_an_Interpreter/Finishing_the_Test/+page.svelte"],"sourcesContent":["import { writable, type Writable } from 'svelte/store';\nimport type { Section } from '$lib/section/SectionType';\n\nexport const mySections: Writable<Section[]> = writable<Section[]>([]);\n","<script lang=\"ts\">\n\timport SectionComponent from '$lib/section/SectionComponent.svelte';\n\timport { mySections } from './SectionStore.js';\n\t$mySections = [\n\t\t{ title: 'Finishing the Test', visible: false, ref: '#finishing-the-test-1' },\n\t\t{ title: 'Evaluation of TestFlow', visible: false, ref: '#evaluation-of-testflow-2' },\n\t\t{ title: 'Evaluation of Scenario and Test', visible: false, ref: '#evaluation-of-scenario-and-test-3' },\n\t\t{ title: 'The Result', visible: false, ref: '#the-result-4' }\n\t];\n\tlet visible: boolean[] = [];\n\t$: $mySections[0].visible = visible[0];\n\t$: $mySections[1].visible = visible[1];\n\t$: $mySections[2].visible = visible[2];\n\t$: $mySections[3].visible = visible[3];\n\timport copy from 'copy-to-clipboard';\n\timport { onMount } from 'svelte';\n\n\t/**\n\t * This function will go through all the 'pre' elements\n\t * on the page and add a copy button to them.\n\t * Thanks to: https://slavbasharov.com/blog/adding-click-to-copy-code-markdown-blog\n\t */\n\tonMount(() => {\n\t\tconst codeBlocks = document.querySelectorAll('pre');\n\t\tcodeBlocks.forEach((block) => {\n\t\t\tconst copyPrompt = document.createElement('div');\n\t\t\tcopyPrompt.className = 'copy-prompt';\n\t\t\tconst copyPromptText = document.createElement('p');\n\t\t\tcopyPromptText.innerHTML = '👆 Click to copy';\n\t\t\tcopyPromptText.className = 'copy-prompt-p';\n\t\t\tconst copyIcon = document.createElement('img');\n\t\t\tcopyIcon.src = '/icons/copy-icon.svg';\n\t\t\tcopyIcon.className = 'copy-prompt-img';\n\t\t\tcopyPrompt.appendChild(copyIcon);\n\t\t\tcopyPrompt.appendChild(copyPromptText);\n\t\t\tblock.appendChild(copyPrompt);\n\t\t\tblock.querySelector('.copy-prompt > p').addEventListener('click', (evt) => {\n\t\t\t\tcopy(block.querySelector('code').textContent);\n\t\t\t\tblock.querySelector('.copy-prompt > p').innerHTML = 'Copied!';\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tblock.querySelector('.copy-prompt > p').innerHTML = '👆 Click to copy';\n\t\t\t\t}, 1000);\n\t\t\t});\n\t\t});\n\t});\n\timport PrevNextSection from '$lib/prevNext/PrevNextSection.svelte';\n\n\tlet prevLink = '/Examples/Building_an_Interpreter/Using_the_Context';\n\tlet nextLink = '/Examples/Generic_Types';\n\n\timport Figure from '$lib/figures/Figure.svelte';\n</script>\n\n<PrevNextSection {prevLink} {nextLink} />\n\n<SectionComponent tag=\"h1\" id=\"finishing-the-test-1\" bind:intersecting={visible[0]}>Finishing the Test</SectionComponent>\n<p>\n\tAll basic building blocks for the interpreter have been implemented. What is left to do is to combine the information and present it to\n\tthe user.\n</p>\n<SectionComponent tag=\"h2\" id=\"evaluation-of-testflow-2\" bind:intersecting={visible[1]}>Evaluation of TestFlow</SectionComponent>\n<p>\n\tEvery TestFlow consists of a series of steps, where the page that is a result of a previous step should be equal to the <code\n\t\t>fromPage</code\n\t>\n\tof the next. In the following code we loop over the steps, remember the evaluation result from the previous step, and compare that to the\n\t<code>fromPage</code> of the current step. If there is an error, we create a reasonably readable error message that will be shown to the user.\n</p>\n<pre\n\tclass=\"language-ts\">{@html `<code class=\"language-ts\"><span class=\"token comment\">// EducationInterpreter/src/custom/interpreter/EducationInterpreter.ts#L84-L107</span>\n\noverride <span class=\"token function\">evalTestFlow</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> TestFlow<span class=\"token punctuation\">,</span> ctx<span class=\"token operator\">:</span> InterpreterContext<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> RtObject <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Evaluating Test Flow \"</span> <span class=\"token operator\">+</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">freId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"  steps \"</span> <span class=\"token operator\">+</span> node<span class=\"token punctuation\">.</span>steps<span class=\"token operator\">?.</span>length<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">let</span> previousPage<span class=\"token operator\">:</span> RtPage <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span>\n    <span class=\"token keyword\">let</span> previousStep<span class=\"token operator\">:</span> Step\n    <span class=\"token keyword\">let</span> first<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>      <span class=\"token comment\">// indicates whether there is a calculated value for 'previous'</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> step <span class=\"token keyword\">of</span> node<span class=\"token punctuation\">.</span>steps<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// Compare the fromPage with the previous stepResult</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>first <span class=\"token operator\">&amp;&amp;</span> previousPage<span class=\"token punctuation\">.</span>page <span class=\"token operator\">!==</span> step<span class=\"token punctuation\">.</span>$fromPage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// There was an error. Based on the given answers, we should not be on 'fromPage'.</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RtError</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">&#96;</span><span class=\"token string\">Next page of step </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>EducationEnvironment<span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>writer<span class=\"token punctuation\">.</span><span class=\"token function\">writeToLines</span><span class=\"token punctuation\">(</span>previousStep<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\"> should be </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>previousPage<span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">, not </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>step<span class=\"token punctuation\">.</span>$fromPage<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">.</span><span class=\"token template-punctuation string\">&#96;</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">const</span> stepResult <span class=\"token operator\">=</span> main<span class=\"token punctuation\">.</span><span class=\"token function\">evaluate</span><span class=\"token punctuation\">(</span>step<span class=\"token punctuation\">,</span> ctx<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isRtPage</span><span class=\"token punctuation\">(</span>stepResult<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// Remember the previous stepResult</span>\n            previousPage <span class=\"token operator\">=</span> stepResult\n            previousStep <span class=\"token operator\">=</span> step\n            first <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isRtError</span><span class=\"token punctuation\">(</span>stepResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> stepResult\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> RtBoolean<span class=\"token punctuation\">.</span><span class=\"token constant\">TRUE</span>\n<span class=\"token punctuation\">&#125;</span></code>`}</pre>\n<SectionComponent tag=\"h2\" id=\"evaluation-of-scenario-and-test-3\" bind:intersecting={visible[2]}\n\t>Evaluation of Scenario and Test</SectionComponent\n>\n<p>\n\tThe implementation of the evaluation function for <code>Scenario</code> is reasonably simple. It loops over all test flows, if any of them\n\thas an error than the result is false.\n</p>\n<pre\n\tclass=\"language-ts\">{@html `<code class=\"language-ts\"><span class=\"token comment\">// EducationInterpreter/src/custom/interpreter/EducationInterpreter.ts#L70-L82</span>\n\noverride <span class=\"token function\">evalScenario</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> Scenario<span class=\"token punctuation\">,</span> ctx<span class=\"token operator\">:</span> InterpreterContext<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> RtObject <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Evaluating Scenario \"</span> <span class=\"token operator\">+</span> node<span class=\"token punctuation\">.</span>description <span class=\"token operator\">+</span> <span class=\"token string\">\"  testFlow \"</span> <span class=\"token operator\">+</span> node<span class=\"token punctuation\">.</span>testFlow<span class=\"token operator\">?.</span>length<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> testFlow <span class=\"token keyword\">of</span> node<span class=\"token punctuation\">.</span>testFlow<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">const</span> stepFlowResult <span class=\"token operator\">=</span> main<span class=\"token punctuation\">.</span><span class=\"token function\">evaluate</span><span class=\"token punctuation\">(</span>testFlow<span class=\"token punctuation\">,</span> ctx<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isRtBoolean</span><span class=\"token punctuation\">(</span>stepFlowResult<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> stepFlowResult<span class=\"token punctuation\">.</span><span class=\"token function\">asBoolean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> RtBoolean<span class=\"token punctuation\">.</span><span class=\"token constant\">FALSE</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isRtError</span><span class=\"token punctuation\">(</span>stepFlowResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> stepFlowResult\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> RtBoolean<span class=\"token punctuation\">.</span><span class=\"token constant\">TRUE</span>\n<span class=\"token punctuation\">&#125;</span></code>`}</pre>\n<p>\n\tIn the final evaluation function, the one for <code>Test</code> we need to include adding the flow to the context. The rest is simple\n\tadmin as in the <code>evalScenario</code> function.\n</p>\n<pre\n\tclass=\"language-ts\">{@html `<code class=\"language-ts\"><span class=\"token comment\">// EducationInterpreter/src/custom/interpreter/EducationInterpreter.ts#L52-L68</span>\n\noverride <span class=\"token function\">evalTest</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> Test<span class=\"token punctuation\">,</span> ctx<span class=\"token operator\">:</span> InterpreterContext<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> RtObject <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Evaluating Scenario \"</span> <span class=\"token operator\">+</span> node<span class=\"token punctuation\">.</span><span class=\"token function\">freId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"  flow \"</span> <span class=\"token operator\">+</span> node<span class=\"token punctuation\">.</span>flow<span class=\"token punctuation\">.</span>referred<span class=\"token operator\">?.</span>name<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// Puts the current flow in the context</span>\n    <span class=\"token keyword\">const</span> newCtx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InterpreterContext</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> flow <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RtFlow</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>flow<span class=\"token punctuation\">.</span>referred<span class=\"token punctuation\">)</span>\n    newCtx<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CURRENT_FLOW\"</span><span class=\"token punctuation\">,</span> flow<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> s <span class=\"token keyword\">of</span> node<span class=\"token punctuation\">.</span>scenarios<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">const</span> scenarioResult <span class=\"token operator\">=</span> main<span class=\"token punctuation\">.</span><span class=\"token function\">evaluate</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> newCtx<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isRtBoolean</span><span class=\"token punctuation\">(</span>scenarioResult<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> scenarioResult<span class=\"token punctuation\">.</span><span class=\"token function\">asBoolean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> RtBoolean<span class=\"token punctuation\">.</span><span class=\"token constant\">FALSE</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isRtError</span><span class=\"token punctuation\">(</span>scenarioResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> scenarioResult\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> RtBoolean<span class=\"token punctuation\">.</span><span class=\"token constant\">TRUE</span>\n<span class=\"token punctuation\">&#125;</span></code>`}</pre>\n<SectionComponent tag=\"h2\" id=\"the-result-4\" bind:intersecting={visible[3]}>The Result</SectionComponent>\n<p>\n\tRunning the interpreter on the complete <code>TestB</code> model unit from our model (named “Model4Interpreter”), results in this error.\n</p>\n<Figure\n\timageName={'examples/Interpreter/Interpreter-result.png'}\n\tcaption={'The result of the interpreter showing an error'}\n\tfigureNumber={1}\n/>\n\n<PrevNextSection {prevLink} {nextLink} />\n","<script lang=\"ts\">\n\timport { mySections } from './SectionStore.js';\n\timport type { Section } from '$lib/section/SectionType.js';\n\timport PageContent from './PageContent.svelte';\n\timport Breadcrumb from '$lib/breadcrumbs/Breadcrumb.svelte';\n\n\tlet showDetails: boolean = false;\n\t$: current = getCurrent($mySections);\n\n\tfunction getCurrent(internalSections: Section[]): number {\n\t\tlet previous = current;\n\t\tfor (let i = 0; i < internalSections.length; i++) {\n\t\t\tif (internalSections[i].visible) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn previous;\n\t}\n\tfunction toggleTocDetails() {\n\t\tshowDetails = !showDetails;\n\t}\n</script>\n\n<div class=\"page-main\">\n\t<div class=\"page-toc-small\">\n\t\t<p class=\"page-toc-small-title\">On this page ...</p>\n\t\t<button\n\t\t\tclass=\"page-toc-small-expand-button\"\n\t\t\ton:click={() => {\n\t\t\t\ttoggleTocDetails();\n\t\t\t}}\n\t\t>\n\t\t\t{#if showDetails}\n\t\t\t\t<img class=\"page-toc-small-img\" src=\"/icons/upload.png\" alt=\"arrow up\" />\n\t\t\t{:else}\n\t\t\t\t<img class=\"page-toc-small-img\" src=\"/icons/down-arrow.png\" alt=\"arrow down\" />\n\t\t\t{/if}\n\t\t</button>\n\t</div>\n\t{#if showDetails}\n\t\t<div class=\"toc-details\">\n\t\t\t<ul class=\"page-ul\">\n\t\t\t\t{#each $mySections as sec, index}\n\t\t\t\t\t<li class=\"page-toc-text\">\n\t\t\t\t\t\t<a class:page-visible={index === current} class:page-nonvisible={index !== current} href={sec.ref}>\n\t\t\t\t\t\t\t{sec.title}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t{/each}\n\t\t\t</ul>\n\t\t</div>\n\t{/if}\n\n\t<Breadcrumb />\n\t<PageContent />\n</div>\n\n<nav class=\"page-toc\">\n\t<h3 class=\"page-toc-title\">On this page</h3>\n\t<ul class=\"page-ul\">\n\t\t{#each $mySections as sec, index}\n\t\t\t<li class=\"page-toc-text\">\n\t\t\t\t<a class:page-visible={index === current} class:page-nonvisible={index !== current} href={sec.ref}>\n\t\t\t\t\t{sec.title}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t{/each}\n\t</ul>\n</nav>\n"],"names":["mySections","writable","ctx","sectioncomponent0_props","sectioncomponent1_props","sectioncomponent2_props","sectioncomponent3_props","insert_hydration","target","p0","anchor","p1","pre0","p2","pre1","p3","pre2","p4","sectioncomponent0_changes","sectioncomponent1_changes","sectioncomponent2_changes","sectioncomponent3_changes","prevLink","nextLink","$mySections","visible","onMount","block","copyPrompt","copyPromptText","copyIcon","evt","copy","$$self","value","set_store_value","img","div","append_hydration","ul","i","t0_value","attr","a","a_href_value","toggle_class","li","dirty","set_data","t0","create_if_block_1","create_if_block","div1","div0","p","button","nav","h3","showDetails","getCurrent","internalSections","previous","current","toggleTocDetails","$$invalidate"],"mappings":"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"}