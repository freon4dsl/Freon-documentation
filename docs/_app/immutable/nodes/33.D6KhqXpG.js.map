{"version":3,"file":"33.D6KhqXpG.js","sources":["../../../../../../src/routes/Documentation/Defining_an_Editor/Boolean_Projections/SectionStore.ts","../../../../../../src/routes/Documentation/Defining_an_Editor/Boolean_Projections/PageContent.svelte","../../../../../../src/routes/Documentation/Defining_an_Editor/Boolean_Projections/+page.svelte"],"sourcesContent":["import { writable, type Writable } from 'svelte/store';\nimport type { Section } from '$lib/section/SectionType';\n\nexport const mySections: Writable<Section[]> = writable<Section[]>([]);\n","<script lang=\"ts\">\n\timport SectionComponent from '$lib/section/SectionComponent.svelte';\n\timport { mySections } from './SectionStore.js';\n\t$mySections = [\n\t\t{ title: 'Boolean Projections', visible: false, ref: '#boolean-projections-1' },\n\t\t{ title: 'Textual - Two Keywords', visible: false, ref: '#textual---two-keywords-2' },\n\t\t{ title: 'Textual - One Keyword', visible: false, ref: '#textual---one-keyword-3' },\n\t\t{ title: 'Switch, Checkbox, Radio Control', visible: false, ref: '#switch-checkbox-radio-control-4' }\n\t];\n\tlet visible: boolean[] = [];\n\t$: $mySections[0].visible = visible[0];\n\t$: $mySections[1].visible = visible[1];\n\t$: $mySections[2].visible = visible[2];\n\t$: $mySections[3].visible = visible[3];\n\timport copy from 'copy-to-clipboard';\n\timport { onMount } from 'svelte';\n\n\t/**\n\t * This function will go through all the 'pre' elements\n\t * on the page and add a copy button to them.\n\t * Thanks to: https://slavbasharov.com/blog/adding-click-to-copy-code-markdown-blog\n\t */\n\tonMount(() => {\n\t\tconst codeBlocks = document.querySelectorAll('pre');\n\t\tcodeBlocks.forEach((block) => {\n\t\t\tconst copyPrompt = document.createElement('div');\n\t\t\tcopyPrompt.className = 'copy-prompt';\n\t\t\tconst copyPromptText = document.createElement('p');\n\t\t\tcopyPromptText.innerHTML = 'ðŸ‘† Click to copy';\n\t\t\tcopyPromptText.className = 'copy-prompt-p';\n\t\t\tconst copyIcon = document.createElement('img');\n\t\t\tcopyIcon.src = '/icons/copy-icon.svg';\n\t\t\tcopyIcon.className = 'copy-prompt-img';\n\t\t\tcopyPrompt.appendChild(copyIcon);\n\t\t\tcopyPrompt.appendChild(copyPromptText);\n\t\t\tblock.appendChild(copyPrompt);\n\t\t\tblock.querySelector('.copy-prompt > p').addEventListener('click', (evt) => {\n\t\t\t\tcopy(block.querySelector('code').textContent);\n\t\t\t\tblock.querySelector('.copy-prompt > p').innerHTML = 'Copied!';\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tblock.querySelector('.copy-prompt > p').innerHTML = 'ðŸ‘† Click to copy';\n\t\t\t\t}, 1000);\n\t\t\t});\n\t\t});\n\t});\n\timport PrevNextSection from '$lib/prevNext/PrevNextSection.svelte';\n\n\tlet prevLink = '/Documentation/Defining_an_Editor/Ease_of_Editing';\n\tlet nextLink = '/Documentation/Defining_an_Editor/Number_Projections';\n\n\timport Note from '$lib/notes/Note.svelte';\n\timport Figure from '$lib/figures/Figure.svelte';\n</script>\n\n<PrevNextSection {prevLink} {nextLink} />\n\n<SectionComponent tag=\"h1\" id=\"boolean-projections-1\" bind:intersecting={visible[0]}>Boolean Projections</SectionComponent>\n<p>\n\tFreon offers a number of different manners to display a boolean value, ranging from textual to visual controls, like a switch. Each option\n\tis described in the following.\n</p>\n<p>\n\tNote that you can set a default for the display of a boolean value in the <code>global</code> section of the default editor. See\n\t<a href=\"/Documentation/Defining_an_Editor/Global_Projections\">Global Projections</a>.\n</p>\n<SectionComponent tag=\"h2\" id=\"textual---two-keywords-2\" bind:intersecting={visible[1]}>Textual - Two Keywords</SectionComponent>\n<p>\n\tThe strings that are displayed when a boolean property has a certain value, which normally would be either <code>true</code> or\n\t<code>false</code>, can be manipulated. In the projection two strings are added, the first is the text that represents the true-value, the\n\tsecond represents the false-value.\n</p>\n<p>\n\tIn the next example, the concept <code>InsurancePart</code> has a simple property of type boolean called <code>isApproved</code>. In the\n\tprojection for <code>isApproved</code> the strings <code>JA</code> and <code>NEE</code> will be shown for, respectively, true and false.\n</p>\n<pre class=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Insurance/src/defs/language-main.ast#L41-L49\n</span>\n<span class=\"token comment\">// An InsurancePart defines a single aspect of an InsuranceProduct together\n</span><span class=\"token comment\">// with the statistical risk of the event happening, and the maximum payout\n</span><span class=\"token comment\">// in case the insured event happens.\n</span><span class=\"token keyword\">concept</span> <span class=\"token class-name\">InsurancePart</span> &#123;\n    name: <span class=\"token builtin\">identifier</span>;                       <span class=\"token comment\">// internal name\n</span>    isApproved: <span class=\"token builtin\">boolean</span> = false;            <span class=\"token comment\">// indication of approval status\n</span>    statisticalRisk: <span class=\"token class-name\">PercentageLiteral</span>;     <span class=\"token comment\">// the statistical risk known for this event\n</span>    maximumPayOut: <span class=\"token class-name\">EuroLiteral</span>;             <span class=\"token comment\">// maximum payout in case the insured event happens\n</span>&#125;</code>`}</pre>\n<pre\n\tclass=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Insurance/src/defs/editor-main-default.edit#L28-L35\n</span>\n\n<span class=\"token class-name\">InsurancePart</span>&#123;\n<span class=\"token punctuation\">[</span>\n    Insurance Part $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.name</span>&#125;\n        risk assessment: $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.statisticalRisk</span>&#125;\n        maximum payout: $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.maximumPayOut</span>&#125;\n        is approved: $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.isApproved [JA | NEE]</span>&#125;\n<span class=\"token punctuation\">]</span></code>`}</pre>\n<Figure\n\timageName={'documentation/Documentation-Boolean-Projections-screenshot1.png'}\n\tcaption={'Displaying different strings for boolean values'}\n\tfigureNumber={1}\n/>\n<SectionComponent tag=\"h2\" id=\"textual---one-keyword-3\" bind:intersecting={visible[2]}>Textual - One Keyword</SectionComponent>\n<p>\n\tIt is not necessary to always provide two textual representations for a boolean value. If only one string is added to the projection, its\n\tvalue is taken to represent <code>true</code>. The absence of the string is representing <code>false</code>.\n</p>\n<p>\n\tIn the next example, the property <code>isCompany</code> will be shown as the keyword <code>COMPANY</code>. When the value of the property\n\tis <code>true</code>, the keyword is shown. When the value is <code>false</code>, the keyword is not shown.\n</p>\n<pre\n\tclass=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Insurance/src/defs/editor-main-default.edit#L67-L69\n</span>\n\n<span class=\"token class-name\">Entity</span> &#123;<span class=\"token punctuation\">[</span>\n    $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.isCompany [COMPANY]</span>&#125; $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.name</span>&#125;</code>`}</pre>\n<p>This example would be displayed as one of â€¦</p>\n<pre class=\"language-txt\">{@html `<code class=\"language-txt\">COMPANY entity PhilipsEnterPrises &#123; // the value of isCompany is true\n  ...\n&#125;\nentity FritsPhilips &#123; // the value of isCompany is false\n  ...\n&#125;</code>`}</pre>\n<Note>\n\t<svelte:fragment slot=\"header\">Keywords defined within a projection overwrite the global boolean projection</svelte:fragment>\n\t<svelte:fragment slot=\"content\">\n\t\tIn the default editor you can define global boolean projection. These will not be used when a more specific projection is present.\n\t</svelte:fragment>\n</Note>\n<SectionComponent tag=\"h2\" id=\"switch-checkbox-radio-control-4\" bind:intersecting={visible[3]}\n\t>Switch, Checkbox, Radio Control</SectionComponent\n>\n<p>\n\tFreon provides four native boolean controls: two types of switches, a checkbox, and a radio group. Each is indicated by adding a keyword\n\tto the property projection. The possible keywords are:\n</p>\n<ul>\n\t<li><code>switch</code>, which shows a simple switch control,</li>\n\t<li><code>inner-switch</code>, which shows a switch that holds text for the true and false values,</li>\n\t<li><code>checkbox</code>, which shows an ordinary checkbox,</li>\n\t<li><code>radio</code>, which show a radio group with text for the true and false values,</li>\n\t<li><code>text</code>, which indicates that the boolean value should be shown as text.</li>\n</ul>\n<p>\n\tThe latter is used to overwrite the global boolean projection, in case it demands one of the other options. When ever text is shown, the\n\tstrings to be used as true and false values can be indicated between square brackets, in the same way as the values for textual\n\trepresentations are given. When they are not present, the global definition is taken. If that is also not present then the default is <code\n\t\t>true</code\n\t>\n\tand <code>false</code>.\n</p>\n<p>For the sake of the example, we have added a number of boolean properties to the concept <code>BaseProduct</code>.</p>\n<pre class=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Insurance/src/defs/language-main.ast#L24-L39\n</span>\n<span class=\"token keyword\">concept</span> <span class=\"token class-name\">BaseProduct</span> &#123;\n    name: <span class=\"token builtin\">identifier</span>;               <span class=\"token comment\">// internal name\n</span>    isUnderConstruction: <span class=\"token builtin\">boolean</span>;   <span class=\"token comment\">// defines whether this base product is still 'raw'\n</span>    theme: <span class=\"token class-name\">InsuranceTheme</span>;          <span class=\"token comment\">// the 'kind' of insurance\n</span>    parts: <span class=\"token class-name\">InsurancePart</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>;         <span class=\"token comment\">// all parts of this product\n</span>    <span class=\"token comment\">// The following properties are present to show the different options for displaying booleans.\n</span>    isApprovedLevel1: <span class=\"token builtin\">boolean</span>;\n    isApprovedLevel2: <span class=\"token builtin\">boolean</span>;\n    isApprovedLevel3: <span class=\"token builtin\">boolean</span>;\n    yieldsProfit: <span class=\"token builtin\">boolean</span>;\n    range: <span class=\"token builtin\">number</span>;\n    nrOfUse: <span class=\"token builtin\">number</span>;\n    <span class=\"token comment\">// The previoud two properties are present to show the different options for displaying numbers.\n</span>    <span class=\"token comment\">// The following property is present to show the use of an external DatePicker component.\n</span>    date: <span class=\"token builtin\">string</span>;\n&#125;</code>`}</pre>\n<p>Each of the boolean properties is displayed differently.</p>\n<pre\n\tclass=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Insurance/src/defs/editor-main-controls.edit#L7-L11\n</span>\nis still under construction: $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.isUnderConstruction <span class=\"token keyword\">switch</span></span>&#125;\nis approved level1: $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.isApprovedLevel1 <span class=\"token keyword\">radio</span> [Sure | NoWay]</span>&#125;\nis approved level2: $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.isApprovedLevel2 <span class=\"token keyword\">inner-switch</span></span>&#125;\nis approved level3: $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.isApprovedLevel3 <span class=\"token keyword\">checkbox</span></span>&#125;\nyields profit: $&#123;<span class=\"token variable\">self</span>.yieldsProfit <span class=\"token keyword\">text</span> <span class=\"token punctuation\">[</span>Plenty | Little<span class=\"token punctuation\">]</span>&#125;</code>`}</pre>\n<p>\n\tThe result of this projection is shown in the screenshot below. Note that the text used for property <code>self.isApprovedLevel2</code> is\n\tdefined by the global boolean projection. See <a href=\"/Documentation/Defining_an_Editor/Global_Projections\">Global Projections</a>.\n</p>\n<Figure\n\timageName={'documentation/Documentation-Boolean-Projections-screenshot2.png'}\n\tcaption={'Different boolean controls'}\n\tfigureNumber={2}\n/>\n\n<PrevNextSection {prevLink} {nextLink} />\n","<script lang=\"ts\">\n\timport { mySections } from './SectionStore.js';\n\timport type { Section } from '$lib/section/SectionType.js';\n\timport PageContent from './PageContent.svelte';\n\timport Breadcrumb from '$lib/breadcrumbs/Breadcrumb.svelte';\n\n\tlet showDetails: boolean = false;\n\t$: current = getCurrent($mySections);\n\n\tfunction getCurrent(internalSections: Section[]): number {\n\t\tlet previous = current;\n\t\tfor (let i = 0; i < internalSections.length; i++) {\n\t\t\tif (internalSections[i].visible) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn previous;\n\t}\n\tfunction toggleTocDetails() {\n\t\tshowDetails = !showDetails;\n\t}\n</script>\n\n<div class=\"page-main\">\n\t<div class=\"page-toc-small\">\n\t\t<p class=\"page-toc-small-title\">On this page ...</p>\n\t\t<button\n\t\t\tclass=\"page-toc-small-expand-button\"\n\t\t\ton:click={() => {\n\t\t\t\ttoggleTocDetails();\n\t\t\t}}\n\t\t>\n\t\t\t{#if showDetails}\n\t\t\t\t<img class=\"page-toc-small-img\" src=\"/icons/upload.png\" alt=\"arrow up\" />\n\t\t\t{:else}\n\t\t\t\t<img class=\"page-toc-small-img\" src=\"/icons/down-arrow.png\" alt=\"arrow down\" />\n\t\t\t{/if}\n\t\t</button>\n\t</div>\n\t{#if showDetails}\n\t\t<div class=\"toc-details\">\n\t\t\t<ul class=\"page-ul\">\n\t\t\t\t{#each $mySections as sec, index}\n\t\t\t\t\t<li class=\"page-toc-text\">\n\t\t\t\t\t\t<a class:page-visible={index === current} class:page-nonvisible={index !== current} href={sec.ref}>\n\t\t\t\t\t\t\t{sec.title}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t{/each}\n\t\t\t</ul>\n\t\t</div>\n\t{/if}\n\n\t<Breadcrumb />\n\t<PageContent />\n</div>\n\n<nav class=\"page-toc\">\n\t<h3 class=\"page-toc-title\">On this page</h3>\n\t<ul class=\"page-ul\">\n\t\t{#each $mySections as sec, index}\n\t\t\t<li class=\"page-toc-text\">\n\t\t\t\t<a class:page-visible={index === current} class:page-nonvisible={index !== current} href={sec.ref}>\n\t\t\t\t\t{sec.title}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t{/each}\n\t</ul>\n</nav>\n"],"names":["mySections","writable","ctx","sectioncomponent0_props","sectioncomponent1_props","sectioncomponent2_props","sectioncomponent3_props","insert_hydration","target","p0","anchor","p1","p2","p3","pre0","pre1","p4","p5","pre2","p6","pre3","p7","ul","p8","p9","pre4","p10","pre5","p11","sectioncomponent0_changes","sectioncomponent1_changes","sectioncomponent2_changes","sectioncomponent3_changes","prevLink","nextLink","$mySections","visible","onMount","block","copyPrompt","copyPromptText","copyIcon","evt","copy","$$self","value","set_store_value","img","i","div","append_hydration","t0_value","attr","a","a_href_value","toggle_class","li","dirty","set_data","t0","create_if_block_1","create_if_block","div1","div0","p","button","nav","h3","showDetails","getCurrent","internalSections","previous","current","toggleTocDetails","$$invalidate"],"mappings":"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"}