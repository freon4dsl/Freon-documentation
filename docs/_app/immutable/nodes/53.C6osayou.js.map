{"version":3,"file":"53.C6osayou.js","sources":["../../../../../../src/routes/Documentation/Scoping,_Typing,_and_Validating/Validator/SectionStore.ts","../../../../../../src/routes/Documentation/Scoping,_Typing,_and_Validating/Validator/PageContent.svelte","../../../../../../src/routes/Documentation/Scoping,_Typing,_and_Validating/Validator/+page.svelte"],"sourcesContent":["import { writable, type Writable } from 'svelte/store';\nimport type { Section } from '$lib/section/SectionType';\n\nexport const mySections: Writable<Section[]> = writable<Section[]>([]);\n","<script lang=\"ts\">\n\timport SectionComponent from '$lib/section/SectionComponent.svelte';\n\timport { mySections } from './SectionStore.js';\n\t$mySections = [\n\t\t{ title: 'Validator', visible: false, ref: '#validator-1' },\n\t\t{ title: 'Simple Value Rules', visible: false, ref: '#simple-value-rules-2' },\n\t\t{ title: 'List Rules', visible: false, ref: '#list-rules-3' },\n\t\t{ title: 'Valid Identifier Rules', visible: false, ref: '#valid-identifier-rules-4' },\n\t\t{ title: 'Type Check Rules', visible: false, ref: '#type-check-rules-5' },\n\t\t{ title: 'Custom Messages', visible: false, ref: '#custom-messages-6' },\n\t\t{ title: 'The Default Validation Rules', visible: false, ref: '#the-default-validation-rules-7' }\n\t];\n\tlet visible: boolean[] = [];\n\t$: $mySections[0].visible = visible[0];\n\t$: $mySections[1].visible = visible[1];\n\t$: $mySections[2].visible = visible[2];\n\t$: $mySections[3].visible = visible[3];\n\t$: $mySections[4].visible = visible[4];\n\t$: $mySections[5].visible = visible[5];\n\t$: $mySections[6].visible = visible[6];\n\timport copy from 'copy-to-clipboard';\n\timport { onMount } from 'svelte';\n\n\t/**\n\t * This function will go through all the 'pre' elements\n\t * on the page and add a copy button to them.\n\t * Thanks to: https://slavbasharov.com/blog/adding-click-to-copy-code-markdown-blog\n\t */\n\tonMount(() => {\n\t\tconst codeBlocks = document.querySelectorAll('pre');\n\t\tcodeBlocks.forEach((block) => {\n\t\t\tconst copyPrompt = document.createElement('div');\n\t\t\tcopyPrompt.className = 'copy-prompt';\n\t\t\tconst copyPromptText = document.createElement('p');\n\t\t\tcopyPromptText.innerHTML = 'üëÜ Click to copy';\n\t\t\tcopyPromptText.className = 'copy-prompt-p';\n\t\t\tconst copyIcon = document.createElement('img');\n\t\t\tcopyIcon.src = '/icons/copy-icon.svg';\n\t\t\tcopyIcon.className = 'copy-prompt-img';\n\t\t\tcopyPrompt.appendChild(copyIcon);\n\t\t\tcopyPrompt.appendChild(copyPromptText);\n\t\t\tblock.appendChild(copyPrompt);\n\t\t\tblock.querySelector('.copy-prompt > p').addEventListener('click', (evt) => {\n\t\t\t\tcopy(block.querySelector('code').textContent);\n\t\t\t\tblock.querySelector('.copy-prompt > p').innerHTML = 'Copied!';\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tblock.querySelector('.copy-prompt > p').innerHTML = 'üëÜ Click to copy';\n\t\t\t\t}, 1000);\n\t\t\t});\n\t\t});\n\t});\n\timport PrevNextSection from '$lib/prevNext/PrevNextSection.svelte';\n\n\tlet prevLink = '/Documentation/Scoping,_Typing,_and_Validating/Type_Provider';\n\tlet nextLink = '/Documentation/Interpreter_Framework';\n</script>\n\n<PrevNextSection {prevLink} {nextLink} />\n<SectionComponent tag=\"h1\" id=\"validator-1\" bind:intersecting={visible[0]}>Validator</SectionComponent>\n<p>\n\tValidation is all about the rules that hold in your language. These rules are not the rules of the concrete syntax, but instead they\n\tprovide an extra check of the model/AST.\n</p>\n<p>\n\tThe <strong>validator</strong> definition provides the constraints or rules that should be true in the models build by your users. Any\n\tpart of the validator definition must be included in a file with the extension <code>.valid</code>. All files with this extension in the\n\t<a href=\"/Documentation/Overview/Getting_Started#template-project-startup-3\"><em>defs</em> folder</a>\n\t(i.e. the folder were you keep your definition files) are combined into one validator definition.\n</p>\n<p>Currently, there are four types of validation rules.</p>\n<SectionComponent tag=\"h2\" id=\"simple-value-rules-2\" bind:intersecting={visible[1]}>Simple Value Rules</SectionComponent>\n<p>\n\tGiven a <a href=\"/Documentation/Creating_the_Metamodel/Defining_Properties#simple-properties-2\">simple property</a>, its value can be\n\tlimited to certain values.\n</p>\n<pre\n\tclass=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Insurance/src/defs/validator-extras.valid#L3-L6\n</span>\n<span class=\"token class-name\">EntityAttribute</span> &#123;\n    <span class=\"token variable\">self</span>.numVal >= <span class=\"token number\">12</span>;       <span class=\"token comment\">// in .ast file: \"numVal: number;\"\n</span>    <span class=\"token variable\">self</span>.numVal &lt;= <span class=\"token number\">30</span>;\n&#125;</code>`}</pre>\n<SectionComponent tag=\"h2\" id=\"list-rules-3\" bind:intersecting={visible[2]}>List Rules</SectionComponent>\n<p>Given a list property, a <strong>not-empty rule</strong> can be stated. The list complies with the rule if it is not empty.</p>\n<p>\n\tAn <strong>is-unique rule</strong> is another rule that can be stated for a list property. The list complies when the value of the property\n\tis unique within the list.\n</p>\n<pre\n\tclass=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Insurance/src/defs/validator-docu.valid#L3-L7\n</span>\n<span class=\"token class-name\">InsuranceProduct</span> &#123;\n    <span class=\"token keyword\">notEmpty</span> <span class=\"token variable\">self</span>.parts;\n    <span class=\"token keyword\">isunique</span> name <span class=\"token keyword\">in</span> <span class=\"token variable\">self</span>.parts;\n    <span class=\"token keyword\">isunique</span> name <span class=\"token keyword\">in</span> <span class=\"token variable\">self</span>.helpers;\n&#125;</code>`}</pre>\n<SectionComponent tag=\"h2\" id=\"valid-identifier-rules-4\" bind:intersecting={visible[3]}>Valid Identifier Rules</SectionComponent>\n<p>\n\tGiven a simple property of type <em>identifier</em>, a <strong>valid-identifier-rule</strong> can be given. The property complies with the\n\trule if it is a valid identifier according to the TypeScript definition.\n</p>\n<p>\n\tFor a <em>valid-identifier-rule</em> the <code>validIdentifier</code> keyword is used followed by an optional simple property. When the\n\tproperty is present, this property is checked. When the property is not present, Freon assumes that the concept has a simple property\n\tnamed ‚Äò<code>name</code>‚Äô of type ‚Äò<code>identifier</code>‚Äô, and it will check this property.\n</p>\n<pre\n\tclass=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Insurance/src/defs/validator-docu.valid#L27-L32\n</span>\n&#125;\n<span class=\"token class-name\">CalcFunction</span> &#123;\n    <span class=\"token comment\">// typecheck conformsTo (self.body, self.declaredType);\n</span>    <span class=\"token keyword\">isunique</span> name <span class=\"token keyword\">in</span> <span class=\"token variable\">self</span>.parameters;\n    <span class=\"token class-name\">validIdentifier</span>\n    &#123;</code>`}</pre>\n<SectionComponent tag=\"h2\" id=\"type-check-rules-5\" bind:intersecting={visible[4]}>Type Check Rules</SectionComponent>\n<p>\n\tGiven the rules in the typer definition, rules can be stated to ensure type compliance. To indicate a <strong>type checking rule</strong>\n\tthe keyword <code>typecheck</code> is used, followed by either <code>equalsType</code> or <code>conformsTo</code>. The first demands that\n\tthe types of the two properties given are equal. The second demands that the type of the first conforms to the type of the second.\n</p>\n<p>In type checking rules it is possible to use predefined instances of a limited concept.</p>\n<pre\n\tclass=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Insurance/src/defs/validator-docu.valid#L10-L12\n</span>\n<span class=\"token class-name\">MinusExpression</span>  &#123;\n    <span class=\"token keyword\">typecheck</span> <span class=\"token variable\">equalsType</span>( <span class=\"token variable\">self</span>.left, <span class=\"token variable\">self</span>.right );\n&#125;</code>`}</pre>\n<SectionComponent tag=\"h2\" id=\"custom-messages-6\" bind:intersecting={visible[5]}>Custom Messages</SectionComponent>\n<p>\n\tThe generated error messages can be changed into custom ones. Similar to the editor definition, properties can be used in the error\n\tmessage using the syntax <code>$&#123;propName&#125;</code>. The severity of the error may or may not be indicated. The possible values\n\tare ‚Äúerror‚Äù, ‚Äúwarning‚Äù, ‚Äúhint‚Äù, ‚Äúimprovement‚Äù, ‚Äútodo‚Äù, and ‚Äúinfo‚Äù. It defaults to ‚Äútodo‚Äù.\n</p>\n<pre\n\tclass=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Insurance/src/defs/validator-docu.valid#L28-L36\n</span>\n<span class=\"token class-name\">CalcFunction</span> &#123;\n    <span class=\"token comment\">// typecheck conformsTo (self.body, self.declaredType);\n</span>    <span class=\"token keyword\">isunique</span> name <span class=\"token keyword\">in</span> <span class=\"token variable\">self</span>.parameters;\n    <span class=\"token class-name\">validIdentifier</span>\n    &#123;\n        <span class=\"token keyword\">message</span>: <span class=\"token string\">\"El nombre '$&#123;self.name&#125;' no es un identificador correcto.\"</span>,\n        <span class=\"token keyword\">severity</span>: <span class=\"token builtin\">error</span>\n    &#125;;\n&#125;</code>`}</pre>\n<SectionComponent tag=\"h1\" id=\"the-default-validation-rules-7\" bind:intersecting={visible[6]}>The Default Validation Rules</SectionComponent\n>\n<p>There are just a few default validation rules:</p>\n<ul>\n\t<li>Non-optional properties must be set.</li>\n\t<li>Non-optional lists must include one element.</li>\n\t<li>Names of model units should be valid identifiers.</li>\n\t<li>Any reference must be present.</li>\n</ul>\n\n<PrevNextSection {prevLink} {nextLink} />\n","<script lang=\"ts\">\n\timport { mySections } from './SectionStore.js';\n\timport type { Section } from '$lib/section/SectionType.js';\n\timport PageContent from './PageContent.svelte';\n\timport Breadcrumb from '$lib/breadcrumbs/Breadcrumb.svelte';\n\n\tlet showDetails: boolean = false;\n\t$: current = getCurrent($mySections);\n\n\tfunction getCurrent(internalSections: Section[]): number {\n\t\tlet previous = current;\n\t\tfor (let i = 0; i < internalSections.length; i++) {\n\t\t\tif (internalSections[i].visible) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn previous;\n\t}\n\tfunction toggleTocDetails() {\n\t\tshowDetails = !showDetails;\n\t}\n</script>\n\n<div class=\"page-main\">\n\t<div class=\"page-toc-small\">\n\t\t<p class=\"page-toc-small-title\">On this page ...</p>\n\t\t<button\n\t\t\tclass=\"page-toc-small-expand-button\"\n\t\t\ton:click={() => {\n\t\t\t\ttoggleTocDetails();\n\t\t\t}}\n\t\t>\n\t\t\t{#if showDetails}\n\t\t\t\t<img class=\"page-toc-small-img\" src=\"/icons/upload.png\" alt=\"arrow up\" />\n\t\t\t{:else}\n\t\t\t\t<img class=\"page-toc-small-img\" src=\"/icons/down-arrow.png\" alt=\"arrow down\" />\n\t\t\t{/if}\n\t\t</button>\n\t</div>\n\t{#if showDetails}\n\t\t<div class=\"toc-details\">\n\t\t\t<ul class=\"page-ul\">\n\t\t\t\t{#each $mySections as sec, index}\n\t\t\t\t\t<li class=\"page-toc-text\">\n\t\t\t\t\t\t<a class:page-visible={index === current} class:page-nonvisible={index !== current} href={sec.ref}>\n\t\t\t\t\t\t\t{sec.title}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t{/each}\n\t\t\t</ul>\n\t\t</div>\n\t{/if}\n\n\t<Breadcrumb />\n\t<PageContent />\n</div>\n\n<nav class=\"page-toc\">\n\t<h3 class=\"page-toc-title\">On this page</h3>\n\t<ul class=\"page-ul\">\n\t\t{#each $mySections as sec, index}\n\t\t\t<li class=\"page-toc-text\">\n\t\t\t\t<a class:page-visible={index === current} class:page-nonvisible={index !== current} href={sec.ref}>\n\t\t\t\t\t{sec.title}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t{/each}\n\t</ul>\n</nav>\n"],"names":["mySections","writable","ctx","sectioncomponent0_props","sectioncomponent1_props","sectioncomponent2_props","sectioncomponent3_props","sectioncomponent4_props","sectioncomponent5_props","sectioncomponent6_props","insert_hydration","target","p0","anchor","p1","p2","p3","pre0","p4","p5","pre1","p6","p7","pre2","p8","p9","pre3","p10","pre4","p11","ul","sectioncomponent0_changes","sectioncomponent1_changes","sectioncomponent2_changes","sectioncomponent3_changes","sectioncomponent4_changes","sectioncomponent5_changes","sectioncomponent6_changes","prevLink","nextLink","$mySections","visible","onMount","block","copyPrompt","copyPromptText","copyIcon","evt","copy","$$self","value","set_store_value","img","i","div","append_hydration","t0_value","attr","a","a_href_value","toggle_class","li","dirty","set_data","t0","create_if_block_1","create_if_block","div1","div0","p","button","nav","h3","showDetails","getCurrent","internalSections","previous","current","toggleTocDetails","$$invalidate"],"mappings":"+fAGa,MAAAA,EAAkCC,GAAoB,EAAE,sCCuDM,WAAS,eAAT,WAAS,uEAYA,oBAAkB,eAAlB,oBAAkB,uEAY1B,YAAU,eAAV,YAAU,uEAcE,wBAAsB,eAAtB,wBAAsB,uEAmB5B,kBAAgB,eAAhB,kBAAgB,uEAajB,iBAAe,eAAf,iBAAe,uEAkBF,8BAA4B,eAA5B,8BAA4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ybAxF3DC,KAAQ,CAAC,IAAA,SAATC,GAAA,aAAAD,KAAQ,CAAC,uKAYAA,KAAQ,CAAC,IAAA,SAATE,GAAA,aAAAF,KAAQ,CAAC,+JAYjBA,KAAQ,CAAC,IAAA,SAATG,GAAA,aAAAH,KAAQ,CAAC,2KAcGA,KAAQ,CAAC,IAAA,SAATI,GAAA,aAAAJ,KAAQ,CAAC,qKAmBfA,KAAQ,CAAC,IAAA,SAATK,GAAA,aAAAL,KAAQ,CAAC,oKAaVA,KAAQ,CAAC,IAAA,SAATM,GAAA,aAAAN,KAAQ,CAAC,iLAkBI,OAAAA,KAAQ,CAAC,IAAA,SAATO,GAAA,aAAAP,KAAQ,CAAC,yxFAvF3FQ,EAGGC,EAAAC,EAAAC,CAAA,WACHH,EAKGC,EAAAG,EAAAD,CAAA,WACHH,EAA0DC,EAAAI,EAAAF,CAAA,6BAE1DH,EAGGC,EAAAK,EAAAH,CAAA,YACHH,EAMoBC,EAAAM,EAAAJ,CAAA,sCAEpBH,EAAiIC,EAAAO,EAAAL,CAAA,WACjIH,EAGGC,EAAAQ,EAAAN,CAAA,YACHH,EAOoBC,EAAAS,GAAAP,CAAA,2CAEpBH,EAGGC,EAAAU,GAAAR,CAAA,YACHH,EAIGC,EAAAW,GAAAT,CAAA,YACHH,EAQwBC,EAAAY,GAAAV,CAAA,2CAExBH,EAIGC,EAAAa,GAAAX,CAAA,YACHH,EAA6FC,EAAAc,GAAAZ,CAAA,YAC7FH,EAKoBC,EAAAe,GAAAb,CAAA,2CAEpBH,EAIGC,EAAAgB,GAAAd,CAAA,YACHH,EAWoBC,EAAAiB,GAAAf,CAAA,2CAGpBH,EAAoDC,EAAAkB,GAAAhB,CAAA,YACpDH,EAKIC,EAAAmB,GAAAjB,CAAA,qGAhG2DkB,GAAA,aAAA7B,KAAQ,CAAC,0FAYA8B,GAAA,aAAA9B,KAAQ,CAAC,0FAYjB+B,GAAA,aAAA/B,KAAQ,CAAC,4FAcGgC,GAAA,aAAAhC,KAAQ,CAAC,6FAmBfiC,GAAA,aAAAjC,KAAQ,CAAC,6FAaVkC,GAAA,aAAAlC,KAAQ,CAAC,6FAkBImC,GAAA,aAAAnC,KAAQ,CAAC,2tBA7FtFoC,GAAW,+DACXC,GAAW,yFAnDfC,EAAA,EACG,MAAO,YAAa,QAAS,GAAO,IAAK,iBACzC,MAAO,qBAAsB,QAAS,GAAO,IAAK,0BAClD,MAAO,aAAc,QAAS,GAAO,IAAK,kBAC1C,MAAO,yBAA0B,QAAS,GAAO,IAAK,8BACtD,MAAO,mBAAoB,QAAS,GAAO,IAAK,wBAChD,MAAO,kBAAmB,QAAS,GAAO,IAAK,uBAC/C,MAAO,+BAAgC,QAAS,GAAO,IAAK,uCAE3D,IAAAC,EAAA,CAAA,EAgBJC,GAAA,IAAA,CACoB,SAAS,iBAAiB,KAAK,EACvC,QAASC,GAAA,OACbC,EAAa,SAAS,cAAc,KAAK,EAC/CA,EAAW,UAAY,oBACjBC,EAAiB,SAAS,cAAc,GAAG,EACjDA,EAAe,UAAY,mBAC3BA,EAAe,UAAY,sBACrBC,EAAW,SAAS,cAAc,KAAK,EAC7CA,EAAS,IAAM,uBACfA,EAAS,UAAY,kBACrBF,EAAW,YAAYE,CAAQ,EAC/BF,EAAW,YAAYC,CAAc,EACrCF,EAAM,YAAYC,CAAU,EAC5BD,EAAM,cAAc,kBAAkB,EAAE,iBAAiB,QAAUI,GAAA,CAClEC,GAAKL,EAAM,cAAc,MAAM,EAAE,WAAW,EAC5CA,EAAM,cAAc,kBAAkB,EAAE,UAAY,UACpD,gBACCA,EAAM,cAAc,kBAAkB,EAAE,UAAY,oBAClD,yBAWwDM,EAAA,GAAA,UAAAR,EAAQ,CAAC,EAAAS,CAAA,IAATT,EAAQ,CAAC,EAAAS,wBAYAD,EAAA,GAAA,UAAAR,EAAQ,CAAC,EAAAS,CAAA,IAATT,EAAQ,CAAC,EAAAS,wBAYjBD,EAAA,GAAA,UAAAR,EAAQ,CAAC,EAAAS,CAAA,IAATT,EAAQ,CAAC,EAAAS,wBAcGD,EAAA,GAAA,UAAAR,EAAQ,CAAC,EAAAS,CAAA,IAATT,EAAQ,CAAC,EAAAS,wBAmBfD,EAAA,GAAA,UAAAR,EAAQ,CAAC,EAAAS,CAAA,IAATT,EAAQ,CAAC,EAAAS,wBAaVD,EAAA,GAAA,UAAAR,EAAQ,CAAC,EAAAS,CAAA,IAATT,EAAQ,CAAC,EAAAS,wBAkBID,EAAA,GAAA,UAAAR,EAAQ,CAAC,EAAAS,CAAA,IAATT,EAAQ,CAAC,EAAAS,gDArI1FC,GAAAnD,EAAGwC,EAAY,CAAC,EAAE,QAAUC,EAAQ,CAAC,EAAAD,CAAA,gBACrCW,GAAAnD,EAAGwC,EAAY,CAAC,EAAE,QAAUC,EAAQ,CAAC,EAAAD,CAAA,gBACrCW,GAAAnD,EAAGwC,EAAY,CAAC,EAAE,QAAUC,EAAQ,CAAC,EAAAD,CAAA,gBACrCW,GAAAnD,EAAGwC,EAAY,CAAC,EAAE,QAAUC,EAAQ,CAAC,EAAAD,CAAA,gBACrCW,GAAAnD,EAAGwC,EAAY,CAAC,EAAE,QAAUC,EAAQ,CAAC,EAAAD,CAAA,gBACrCW,GAAAnD,EAAGwC,EAAY,CAAC,EAAE,QAAUC,EAAQ,CAAC,EAAAD,CAAA,gBACrCW,GAAAnD,EAAGwC,EAAY,CAAC,EAAE,QAAUC,EAAQ,CAAC,EAAAD,CAAA,0bCgBlC9B,EAA8EC,EAAAyC,EAAAvC,CAAA,gPAF9EH,EAAwEC,EAAAyC,EAAAvC,CAAA,8CASjEX,EAAW,CAAA,CAAA,uBAAhB,OAAImD,GAAA,sTAFR3C,EAUKC,EAAA2C,EAAAzC,CAAA,EATJ0C,EAQID,EAAAxB,CAAA,wEAPI5B,EAAW,CAAA,CAAA,oBAAhB,OAAImD,GAAA,EAAA,mHAAJ,uDAGEG,EAAAtD,KAAI,MAAK,8LAD+EuD,EAAAC,EAAA,OAAAC,EAAAzD,KAAI,GAAG,EAA1E0D,GAAAF,EAAA,eAAAxD,OAAUA,EAAO,CAAA,CAAA,EAAyB0D,GAAAF,EAAA,kBAAAxD,OAAUA,EAAO,CAAA,CAAA,uCADnFQ,EAIIC,EAAAkD,EAAAhD,CAAA,EAHH0C,EAEGM,EAAAH,CAAA,wBADDI,EAAA,GAAAN,KAAAA,EAAAtD,KAAI,MAAK,KAAA6D,GAAAC,EAAAR,CAAA,EAD+EM,EAAA,GAAAH,KAAAA,EAAAzD,KAAI,yBAAvE0D,GAAAF,EAAA,eAAAxD,OAAUA,EAAO,CAAA,CAAA,OAAyB0D,GAAAF,EAAA,kBAAAxD,OAAUA,EAAO,CAAA,CAAA,yCAmBlFsD,EAAAtD,KAAI,MAAK,8LAD+EuD,EAAAC,EAAA,OAAAC,EAAAzD,KAAI,GAAG,EAA1E0D,GAAAF,EAAA,eAAAxD,OAAUA,EAAO,CAAA,CAAA,EAAyB0D,GAAAF,EAAA,kBAAAxD,OAAUA,EAAO,CAAA,CAAA,uCADnFQ,EAIIC,EAAAkD,EAAAhD,CAAA,EAHH0C,EAEGM,EAAAH,CAAA,wBADDI,EAAA,GAAAN,KAAAA,EAAAtD,KAAI,MAAK,KAAA6D,GAAAC,EAAAR,CAAA,EAD+EM,EAAA,GAAAH,KAAAA,EAAAzD,KAAI,yBAAvE0D,GAAAF,EAAA,eAAAxD,OAAUA,EAAO,CAAA,CAAA,OAAyB0D,GAAAF,EAAA,kBAAAxD,OAAUA,EAAO,CAAA,CAAA,wIA9B9EA,EAAW,CAAA,EAAA+D,0BAOb/D,EAAW,CAAA,GAAAgE,GAAAhE,CAAA,qCAqBRA,EAAW,CAAA,CAAA,uBAAhB,OAAImD,GAAA,wiCArCR3C,EAgCKC,EAAAwD,EAAAtD,CAAA,EA/BJ0C,EAcKY,EAAAC,CAAA,EAbJb,EAAmDa,EAAAC,CAAA,SACnDd,EAWQa,EAAAE,CAAA,mFAoBV5D,EAWKC,EAAA4D,EAAA1D,CAAA,EAVJ0C,EAA2CgB,EAAAC,CAAA,SAC3CjB,EAQIgB,EAAAzC,CAAA,4JA5BC5B,EAAW,CAAA,mEAqBRA,EAAW,CAAA,CAAA,oBAAhB,OAAImD,GAAA,EAAA,mHAAJ,0OAtDCoB,EAAuB,YAGlBC,EAAWC,EAAA,KACfC,EAAWC,UACNxB,EAAI,EAAGA,EAAIsB,EAAiB,OAAQtB,IACxC,GAAAsB,EAAiBtB,CAAC,EAAE,QAChB,OAAAA,EAGF,OAAAuB,EAEC,SAAAE,GAAA,KACRL,EAAe,CAAAA,CAAA,eAUbK,EAAgB,yCAtBhBC,EAAA,EAAAF,EAAUH,EAAWlC,CAAW,CAAA"}