{"version":3,"file":"30.DRxakyIY.js","sources":["../../../../../../src/routes/Documentation/Customizations/Validator_Customization/SectionStore.ts","../../../../../../src/routes/Documentation/Customizations/Validator_Customization/PageContent.svelte","../../../../../../src/routes/Documentation/Customizations/Validator_Customization/+page.svelte"],"sourcesContent":["import { writable, type Writable } from 'svelte/store';\nimport type { Section } from '$lib/section/SectionType';\n\nexport const mySections: Writable<Section[]> = writable<Section[]>([]);\n","<script lang=\"ts\">\n\timport SectionComponent from '$lib/section/SectionComponent.svelte';\n\timport { mySections } from './SectionStore.js';\n\t$mySections = [\n\t\t{ title: 'Customization of the Validator', visible: false, ref: '#customization-of-the-validator-1' },\n\t\t{ title: 'The Checker Interface', visible: false, ref: '#the-checker-interface-2' },\n\t\t{ title: 'The Validation Class', visible: false, ref: '#the-validation-class-3' }\n\t];\n\tlet visible: boolean[] = [];\n\t$: $mySections[0].visible = visible[0];\n\t$: $mySections[1].visible = visible[1];\n\t$: $mySections[2].visible = visible[2];\n\timport copy from 'copy-to-clipboard';\n\timport { onMount } from 'svelte';\n\n\t/**\n\t * This function will go through all the 'pre' elements\n\t * on the page and add a copy button to them.\n\t * Thanks to: https://slavbasharov.com/blog/adding-click-to-copy-code-markdown-blog\n\t */\n\tonMount(() => {\n\t\tconst codeBlocks = document.querySelectorAll('pre');\n\t\tcodeBlocks.forEach((block) => {\n\t\t\tconst copyPrompt = document.createElement('div');\n\t\t\tcopyPrompt.className = 'copy-prompt';\n\t\t\tconst copyPromptText = document.createElement('p');\n\t\t\tcopyPromptText.innerHTML = 'ðŸ‘† Click to copy';\n\t\t\tcopyPromptText.className = 'copy-prompt-p';\n\t\t\tconst copyIcon = document.createElement('img');\n\t\t\tcopyIcon.src = '/icons/copy-icon.svg';\n\t\t\tcopyIcon.className = 'copy-prompt-img';\n\t\t\tcopyPrompt.appendChild(copyIcon);\n\t\t\tcopyPrompt.appendChild(copyPromptText);\n\t\t\tblock.appendChild(copyPrompt);\n\t\t\tblock.querySelector('.copy-prompt > p').addEventListener('click', (evt) => {\n\t\t\t\tcopy(block.querySelector('code').textContent);\n\t\t\t\tblock.querySelector('.copy-prompt > p').innerHTML = 'Copied!';\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tblock.querySelector('.copy-prompt > p').innerHTML = 'ðŸ‘† Click to copy';\n\t\t\t\t}, 1000);\n\t\t\t});\n\t\t});\n\t});\n\timport PrevNextSection from '$lib/prevNext/PrevNextSection.svelte';\n\n\tlet prevLink = '/Documentation/Customizations/Typer_Customization';\n\tlet nextLink = '/Documentation/Customizations/Other_Customizations';\n</script>\n\n<PrevNextSection {prevLink} {nextLink} />\n<SectionComponent tag=\"h1\" id=\"customization-of-the-validator-1\" bind:intersecting={visible[0]}\n\t>Customization of the Validator</SectionComponent\n>\n<p>\n\tThe validator can be adjusted by adding a single Typescript class. This class should implement the generated <a\n\t\thref=\"/Documentation/Under_the_Hood/FreTool_Interfaces#frevalidator-4\">checker interface</a\n\t> of the validator, adding checks per node of the AST that is visited.\n</p>\n<SectionComponent tag=\"h2\" id=\"the-checker-interface-2\" bind:intersecting={visible[1]}>The Checker Interface</SectionComponent>\n<p>\n\tFor each language a checker interface is generated. This interface is an extension of the worker part of the visitor pattern, adding an\n\terror list.\n</p>\n<pre\n\tclass=\"language-ts\">{@html `<code class=\"language-ts\"><span class=\"token comment\">// CustomizationsProject/src/freon/validator/gen/EntityModelValidator.ts#L15-L17</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">EntityModelCheckerInterface</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">EntityModelWorker</span> <span class=\"token punctuation\">&#123;</span>\n    errorList<span class=\"token operator\">:</span> FreError<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code>`}</pre>\n<p>The worker defines two methods for each concept in the language, as shown in the next example.</p>\n<pre\n\tclass=\"language-ts\">{@html `<code class=\"language-ts\"><span class=\"token comment\">// CustomizationsProject/src/freon/utils/gen/EntityModelWorker.ts#L56-L57</span>\n\n<span class=\"token function\">execBeforeEntity</span><span class=\"token punctuation\">(</span>modelelement<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">execAfterEntity</span><span class=\"token punctuation\">(</span>modelelement<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span></code>`}</pre>\n<SectionComponent tag=\"h2\" id=\"the-validation-class-3\" bind:intersecting={visible[2]}>The Validation Class</SectionComponent>\n<p>\n\tAs a convenience, Freon generates a file <code>~/freon/validator/CustomYourLanguageNameValidator.ts</code>, which will not be overwritten\n\tupon regeneration. This validator should implement the checker interface.\n</p>\n<p>\n\tYou can give a custom implementation for any of the methods of the default worker. This method will override the (empty) default\n\timplementation. Any validation errors should be pushed onto the <code>errorList</code> attribute. Note that each error must implement the\n\t<a href=\"/Documentation/Under_the_Hood/FreTool_Interfaces#frevalidator-4\">FreError</a> interface.\n</p>\n<p>\n\tThe result of the above could look something like the following. In this example only nodes of type <code>EntityFunction</code> are\n\tchecked. If the name of the node equals <code>determine</code> than an error is pushed on the <code>errorList</code>. If you want the\n\twalker to stop when an erroneous node is found you should return <code>true</code>, else return <code>false</code>.\n</p>\n<pre\n\tclass=\"language-ts\">{@html `<code class=\"language-ts\"><span class=\"token comment\">// CustomizationsProject/src/custom/validator/CustomEntityModelValidator.ts</span>\n\n<span class=\"token comment\">// Generated by the Freon Language Generator.</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> FreError<span class=\"token punctuation\">,</span> FreErrorSeverity <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@freon4dsl/core\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> EntityModelDefaultWorker <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../utils/gen/EntityModelDefaultWorker.js\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> EntityModelCheckerInterface <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./gen/EntityModelValidator.js\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>EntityFunction<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../language/gen/index.js\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomEntityModelValidator</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">EntityModelDefaultWorker</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">EntityModelCheckerInterface</span> <span class=\"token punctuation\">&#123;</span>\n    errorList<span class=\"token operator\">:</span> FreError<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * Example of a custom validation. Every EntityFunction with name 'determine' is considered incorrect.\n     * @param modelelement\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token function\">execBeforeEntityFunction</span><span class=\"token punctuation\">(</span>modelelement<span class=\"token operator\">:</span> EntityFunction<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>modelelement<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">\"determine\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>errorList<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>\n                <span class=\"token keyword\">new</span> <span class=\"token class-name\">FreError</span><span class=\"token punctuation\">(</span>\n                    <span class=\"token template-string\"><span class=\"token template-punctuation string\">&#96;</span><span class=\"token string\">\"determine\" is a terrible name for a Function</span><span class=\"token template-punctuation string\">&#96;</span></span><span class=\"token punctuation\">,</span>\n                    modelelement<span class=\"token punctuation\">,</span>\n                    modelelement<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n                    FreErrorSeverity<span class=\"token punctuation\">.</span>Error\n                <span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</code>`}</pre>\n\n<PrevNextSection {prevLink} {nextLink} />\n","<script lang=\"ts\">\n\timport { mySections } from './SectionStore.js';\n\timport type { Section } from '$lib/section/SectionType.js';\n\timport PageContent from './PageContent.svelte';\n\timport Breadcrumb from '$lib/breadcrumbs/Breadcrumb.svelte';\n\n\tlet showDetails: boolean = false;\n\t$: current = getCurrent($mySections);\n\n\tfunction getCurrent(internalSections: Section[]): number {\n\t\tlet previous = current;\n\t\tfor (let i = 0; i < internalSections.length; i++) {\n\t\t\tif (internalSections[i].visible) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn previous;\n\t}\n\tfunction toggleTocDetails() {\n\t\tshowDetails = !showDetails;\n\t}\n</script>\n\n<div class=\"page-main\">\n\t<div class=\"page-toc-small\">\n\t\t<p class=\"page-toc-small-title\">On this page ...</p>\n\t\t<button\n\t\t\tclass=\"page-toc-small-expand-button\"\n\t\t\ton:click={() => {\n\t\t\t\ttoggleTocDetails();\n\t\t\t}}\n\t\t>\n\t\t\t{#if showDetails}\n\t\t\t\t<img class=\"page-toc-small-img\" src=\"/icons/upload.png\" alt=\"arrow up\" />\n\t\t\t{:else}\n\t\t\t\t<img class=\"page-toc-small-img\" src=\"/icons/down-arrow.png\" alt=\"arrow down\" />\n\t\t\t{/if}\n\t\t</button>\n\t</div>\n\t{#if showDetails}\n\t\t<div class=\"toc-details\">\n\t\t\t<ul class=\"page-ul\">\n\t\t\t\t{#each $mySections as sec, index}\n\t\t\t\t\t<li class=\"page-toc-text\">\n\t\t\t\t\t\t<a class:page-visible={index === current} class:page-nonvisible={index !== current} href={sec.ref}>\n\t\t\t\t\t\t\t{sec.title}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t{/each}\n\t\t\t</ul>\n\t\t</div>\n\t{/if}\n\n\t<Breadcrumb />\n\t<PageContent />\n</div>\n\n<nav class=\"page-toc\">\n\t<h3 class=\"page-toc-title\">On this page</h3>\n\t<ul class=\"page-ul\">\n\t\t{#each $mySections as sec, index}\n\t\t\t<li class=\"page-toc-text\">\n\t\t\t\t<a class:page-visible={index === current} class:page-nonvisible={index !== current} href={sec.ref}>\n\t\t\t\t\t{sec.title}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t{/each}\n\t</ul>\n</nav>\n"],"names":["mySections","writable","ctx","sectioncomponent0_props","sectioncomponent1_props","sectioncomponent2_props","insert_hydration","target","p0","anchor","p1","pre0","p2","pre1","p3","p4","p5","pre2","sectioncomponent0_changes","sectioncomponent1_changes","sectioncomponent2_changes","prevLink","nextLink","$mySections","visible","onMount","block","copyPrompt","copyPromptText","copyIcon","evt","copy","$$self","value","set_store_value","img","i","div","append_hydration","ul","t0_value","attr","a","a_href_value","toggle_class","li","dirty","set_data","t0","create_if_block_1","create_if_block","div1","div0","p","button","nav","h3","showDetails","getCurrent","internalSections","previous","current","toggleTocDetails","$$invalidate"],"mappings":"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"}