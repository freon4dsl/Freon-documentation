{"version":3,"file":"31.ji-bHO9o.js","sources":["../../../../../../src/routes/Documentation/Defining_an_Editor/SectionStore.ts","../../../../../../src/routes/Documentation/Defining_an_Editor/PageContent.svelte","../../../../../../src/routes/Documentation/Defining_an_Editor/+page.svelte"],"sourcesContent":["import { writable, type Writable } from 'svelte/store';\nimport type { Section } from '$lib/section/SectionType';\n\nexport const mySections: Writable<Section[]> = writable<Section[]>([]);\n","<script lang=\"ts\">\n\timport SectionComponent from '$lib/section/SectionComponent.svelte';\n\timport { mySections } from './SectionStore.js';\n\t$mySections = [\n\t\t{ title: 'Defining an Editor', visible: false, ref: '#defining-an-editor-1' },\n\t\t{ title: 'Named Editors or Projection Sets', visible: false, ref: '#named-editors-or-projection-sets-2' },\n\t\t{ title: 'The Default Editor', visible: false, ref: '#the-default-editor-3' },\n\t\t{ title: 'Editor Precedence', visible: false, ref: '#editor-precedence-4' },\n\t\t{ title: 'Example .edit File', visible: false, ref: '#example-edit-file-5' }\n\t];\n\tlet visible: boolean[] = [];\n\t$: $mySections[0].visible = visible[0];\n\t$: $mySections[1].visible = visible[1];\n\t$: $mySections[2].visible = visible[2];\n\t$: $mySections[3].visible = visible[3];\n\t$: $mySections[4].visible = visible[4];\n\timport copy from 'copy-to-clipboard';\n\timport { onMount } from 'svelte';\n\n\t/**\n\t * This function will go through all the 'pre' elements\n\t * on the page and add a copy button to them.\n\t * Thanks to: https://slavbasharov.com/blog/adding-click-to-copy-code-markdown-blog\n\t */\n\tonMount(() => {\n\t\tconst codeBlocks = document.querySelectorAll('pre');\n\t\tcodeBlocks.forEach((block) => {\n\t\t\tconst copyPrompt = document.createElement('div');\n\t\t\tcopyPrompt.className = 'copy-prompt';\n\t\t\tconst copyPromptText = document.createElement('p');\n\t\t\tcopyPromptText.innerHTML = 'ðŸ‘† Click to copy';\n\t\t\tcopyPromptText.className = 'copy-prompt-p';\n\t\t\tconst copyIcon = document.createElement('img');\n\t\t\tcopyIcon.src = '/icons/copy-icon.svg';\n\t\t\tcopyIcon.className = 'copy-prompt-img';\n\t\t\tcopyPrompt.appendChild(copyIcon);\n\t\t\tcopyPrompt.appendChild(copyPromptText);\n\t\t\tblock.appendChild(copyPrompt);\n\t\t\tblock.querySelector('.copy-prompt > p').addEventListener('click', (evt) => {\n\t\t\t\tcopy(block.querySelector('code').textContent);\n\t\t\t\tblock.querySelector('.copy-prompt > p').innerHTML = 'Copied!';\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tblock.querySelector('.copy-prompt > p').innerHTML = 'ðŸ‘† Click to copy';\n\t\t\t\t}, 1000);\n\t\t\t});\n\t\t});\n\t});\n\timport PrevNextSection from '$lib/prevNext/PrevNextSection.svelte';\n\n\tlet prevLink = '/Documentation/Creating_the_Metamodel/Defining_Properties';\n\tlet nextLink = '/Documentation/Defining_an_Editor/Projections';\n\n\timport Note from '$lib/notes/Note.svelte';\n\timport Figure from '$lib/figures/Figure.svelte';\n</script>\n\n<PrevNextSection {prevLink} {nextLink} />\n\n<SectionComponent tag=\"h1\" id=\"defining-an-editor-1\" bind:intersecting={visible[0]}>Defining an Editor</SectionComponent>\n<p>\n\tAn editorâ€™s behavior is specified through an editor definition file (a <code>.edit</code> file). You can define the following three\n\taspects for each <em>concept</em> or <em>interface</em>:\n</p>\n<ul>\n\t<li>\n\t\t<strong>Projection</strong>: Defines how the <em>concept</em> is visually represented in the editor. This is also called the\n\t\t<a href=\"/Documentation/Terminology\">concrete syntax</a>.\n\t</li>\n\t<li>\n\t\t<strong>Trigger</strong> (optional): Specifies the key or keys that a user must type to create a new instance of the <em>concept</em> and\n\t\tthat the user will see in a dropdown menu.\n\t</li>\n\t<li>\n\t\t<strong>Symbol</strong> (optional): Used exclusively for binary expressions, it is the character or string that represents the\n\t\t<em>operator</em>. If a <em>symbol</em> is not provided, the <em>trigger</em> will serve this purpose.\n\t</li>\n</ul>\n<p>\n\tNote that projections cannot be specified for <em>binary expression concepts</em> or <em>limited concepts</em>. The editor offers\n\tspecialized support for binary expressions, which cannot function properly if a user-defined projection is applied. Limited concepts are\n\talso restricted from having projections because they are intended for use as references only within the editor.\n</p>\n<Note>\n\t<svelte:fragment slot=\"header\">The projection is always the first</svelte:fragment>\n\t<svelte:fragment slot=\"content\">\n\t\tFor every concept or interface you have to define the projection before the trigger and/or symbol.\n\t</svelte:fragment>\n</Note>\n<SectionComponent tag=\"h2\" id=\"named-editors-or-projection-sets-2\" bind:intersecting={visible[1]}\n\t>Named Editors or Projection Sets</SectionComponent\n>\n<p>\n\tYou can define multiple projections for the same concept and switch between these different projections in the editor. This allows you to\n\tadapt the editor to a specific task or point of view.\n</p>\n<p>Editors are <strong>named</strong>, allowing you to define multiple editors with coordinated sets of projections.</p>\n<p>\n\tFor example, if you group all <a href=\"/Documentation/Defining_an_Editor/Projections#tables\">table projections</a> under a specific named editor,\n\tusers can switch between viewing objects as lists or as tables. Similarly, you could create one editor (or projection set) that displays only\n\ta subset of properties for certain concepts, while another editor shows all properties. This flexibility allows you to accommodate different\n\tuser needs.\n</p>\n<p>\n\tProjections can also explicitly specify that a property must be displayed using a projection from a specific named editor. For more\n\tdetails, refer to <a href=\"/Documentation/Defining_an_Editor/Projections#using-named-projections-3\">Using Named Projections</a>.\n</p>\n<SectionComponent tag=\"h2\" id=\"the-default-editor-3\" bind:intersecting={visible[2]}>The Default Editor</SectionComponent>\n<p>\n\tSince an editor is required as a fallback when all other editors are disabled, a default editor is automatically generated if one is not\n\tprovided. If a default editor is supplied but is incomplete â€” meaning it does not define projections for all concepts â€” projections for\n\tthe missing concepts are automatically generated. As a result, the default editor is always complete during generation.\n</p>\n<p>\n\tThe generated default will show the conceptâ€™s name and all of its properties in the order given in the .ast file. Any list property will\n\tbe displayed as a vertical list.\n</p>\n<p>\n\tFor example, if no projection is specified for the concepts <code>InsurancePart</code>, <code>PercentageLiteral</code>, and\n\t<code>EuroLiteral</code>\n\tinstances of <code>InsurancePart</code> will be shown as follows.\n</p>\n<pre class=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Insurance/src/defs/language-main.ast#L44-L49\n</span>\n<span class=\"token keyword\">concept</span> <span class=\"token class-name\">InsurancePart</span> &#123;\n    name: <span class=\"token builtin\">identifier</span>;                       <span class=\"token comment\">// internal name\n</span>    isApproved: <span class=\"token builtin\">boolean</span> = false;            <span class=\"token comment\">// indication of approval status\n</span>    statisticalRisk: <span class=\"token class-name\">PercentageLiteral</span>;     <span class=\"token comment\">// the statistical risk known for this event\n</span>    maximumPayOut: <span class=\"token class-name\">EuroLiteral</span>;             <span class=\"token comment\">// maximum payout in case the insured event happens\n</span>&#125;</code>`}</pre>\n<Figure imageName={'documentation/Defining-an-Editor-Screenshot.png'} caption={'Generated Default Projection'} figureNumber={1} />\n<SectionComponent tag=\"h2\" id=\"editor-precedence-4\" bind:intersecting={visible[3]}>Editor Precedence</SectionComponent>\n<p>\n\tNamed editors are arranged in a specific order, which can be specified by assigning a precedence value to each editor. Projections are\n\tresolved following this order. The default editor always has the lowest precedence (0) and is evaluated last.\n</p>\n<p>\n\tIf a projection for a concept is not found in the editor with the highest precedence, the system searches the next editor in the sequence,\n\tcontinuing until it reaches the default editor.\n</p>\n<p>\n\tIf you do not specify a precedence, Freon assigns one based on the order in which the files are read â€” typically alphabetically. However,\n\tthis order is not guaranteed and may vary.\n</p>\n<Note>\n\t<svelte:fragment slot=\"header\">Each editor can be defined in multiple files</svelte:fragment>\n\t<svelte:fragment slot=\"content\">\n\t\t<p>\n\t\t\tEvery <code>.edit</code> file in the folder containing your definitions is read during the generation process. If multiple files define\n\t\t\teditors with the same name, their information is merged into a single editor.\n\t\t</p>\n\t\t<p>The precedence value only needs to be specified once. However, if it is defined multiple times, the values must be consistent.</p>\n\t</svelte:fragment>\n</Note>\n<pre class=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Insurance/src/defs/editor-tables.edit#L1-L11\n</span>\n/* This file contains the <span class=\"token keyword\">table</span> definition <span class=\"token keyword\">in</span> a separate <span class=\"token keyword\">editor</span> / projection group.\nThis enables the user to switch tables on and off. */\n\n<span class=\"token keyword\">editor</span> tables precedence <span class=\"token number\">4</span>\n\n<span class=\"token class-name\">InsurancePart</span>&#123;\n<span class=\"token keyword\">table</span> <span class=\"token punctuation\">[</span>\n    Name    | risk               | pay out          | is approved\n    $&#123;<span class=\"token function\">name</span>&#125; | $&#123;<span class=\"token function\">statisticalRisk</span>&#125; | $&#123;<span class=\"token function\">maximumPayOut</span>&#125; | $&#123;<span class=\"token function\">isApproved</span>&#125;\n<span class=\"token punctuation\">]</span>\n&#125;</code>`}</pre>\n<SectionComponent tag=\"h2\" id=\"example-edit-file-5\" bind:intersecting={visible[4]}>Example <code>.edit</code> File</SectionComponent>\n<p>A complete .edit file could look like this.</p>\n<pre\n\tclass=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Insurance/src/defs/editor-main-default.edit#L1-L80\n</span>\n<span class=\"token comment\">/* This file contains the default editor definition. */</span>\n\n<span class=\"token keyword\">editor</span> <span class=\"token keyword\">default</span>\n\n<span class=\"token class-name\">global</span> &#123;\n    <span class=\"token builtin\">boolean</span> inner-switch <span class=\"token punctuation\">[</span>YES | NO<span class=\"token punctuation\">]</span> <span class=\"token comment\">// the strings used to display a boolean value, all booleans will default be displayed as an inner switch control\n</span><span class=\"token comment\">//    limited radio\n</span><span class=\"token comment\">//    limited[] checkbox\n</span>    <span class=\"token comment\">// number slider  // you can use the slider control as default projection for numbers, but this will not often be the preferred option\n</span>    <span class=\"token keyword2\">referenceSeparator</span> <span class=\"token punctuation\">[</span>:<span class=\"token punctuation\">]</span> <span class=\"token comment\">// the string that separates the names in a path name, e.g. pack1:cls3:part\n</span>    <span class=\"token class-name\">external</span> &#123;\n        AnimatedGif,\n        SMUI_Card,\n        SMUI_Accordion,\n        SMUI_Dialog,\n        DatePicker\n    &#125;\n&#125;\n\n<span class=\"token comment\">// both modelunits show a single concept\n</span><span class=\"token class-name\">Part</span> &#123;<span class=\"token punctuation\">[</span> $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.part</span>&#125; <span class=\"token punctuation\">]</span>&#125;\n<span class=\"token class-name\">Product</span> &#123;<span class=\"token punctuation\">[</span> $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.product</span>&#125; <span class=\"token punctuation\">]</span>&#125;\n\n<span class=\"token class-name\">BaseProduct</span> &#123;<span class=\"token punctuation\">[</span>\n    Base Products $&#123;<span class=\"token function\">name</span>&#125; for $&#123;<span class=\"token function\">theme</span>&#125;\n        $&#123;<span class=\"token function\">parts</span>&#125;\n<span class=\"token punctuation\">]</span>&#125;\n\n<span class=\"token class-name\">InsurancePart</span>&#123;\n<span class=\"token punctuation\">[</span>\n    Insurance Part $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.name</span>&#125;\n        risk assessment: $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.statisticalRisk</span>&#125;\n        maximum payout: $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.maximumPayOut</span>&#125;\n        is approved: $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.isApproved [JA | NEE]</span>&#125;\n<span class=\"token punctuation\">]</span>\n&#125;\n\n<span class=\"token class-name\">InsuranceProduct</span> &#123;<span class=\"token punctuation\">[</span>\n    Insurance Product $&#123;<span class=\"token function\">name</span>&#125; ( public name: $&#123;<span class=\"token function\">productName</span>&#125; ) USES $&#123;<span class=\"token function\">basedOn <span class=\"token keyword\">horizontal</span> <span class=\"token keyword\">separator</span>[, ]</span>&#125;\n        Themes: $&#123;<span class=\"token function\">themes <span class=\"token keyword\">horizontal</span> <span class=\"token keyword\">separator</span>[, ]</span>&#125;\n        Premium: $&#123;<span class=\"token function\">advertisedPremium</span>&#125; per $&#123;<span class=\"token function\">nrPremiumDays</span>&#125;\n        Insured risks:\n            $&#123;<span class=\"token function\">parts <span class=\"token keyword\">vertical</span> <span class=\"token keyword\">terminator</span> [;]</span>&#125;\n        Calculation\n            <span class=\"token punctuation\">[</span>? Risk adjusted by = $&#123;<span class=\"token function\">riskAdjustment</span>&#125; <span class=\"token punctuation\">]</span>\n            calculated premium: $&#123;<span class=\"token function\">calculation</span>&#125;\n        <span class=\"token punctuation\">[</span>?Helper functions:\n            $&#123;<span class=\"token function\">helpers <span class=\"token keyword\">vertical</span></span>&#125;<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span>&#125;\n\n<span class=\"token class-name\">CalcFunction</span> &#123;\n    <span class=\"token punctuation\">[</span>\n        $&#123;<span class=\"token function\">name</span>&#125; ( $&#123;<span class=\"token function\">parameters <span class=\"token keyword\">horizontal</span> <span class=\"token keyword\">separator</span>[,]</span>&#125; ): $&#123;<span class=\"token function\">declaredType</span>&#125; &#123;\n            $&#123;<span class=\"token function\">body</span>&#125;\n        &#125;\n    <span class=\"token punctuation\">]</span>\n&#125;\n<span class=\"token class-name\">Description</span> &#123;\n    <span class=\"token punctuation\">[</span>$&#123;<span class=\"token function\">content</span>&#125;<span class=\"token punctuation\">]</span>\n&#125;\n<span class=\"token class-name\">Parameter</span> &#123;\n     <span class=\"token punctuation\">[</span>$&#123;<span class=\"token function\">name</span>&#125; : $&#123;<span class=\"token function\">declaredType</span>&#125;<span class=\"token punctuation\">]</span>\n&#125;\n\n<span class=\"token comment\">// No need for projections for DocuType and its implementors, they\n</span><span class=\"token comment\">// are only used as references, so their names suffice.\n</span>\n<span class=\"token class-name\">Entity</span> &#123;<span class=\"token punctuation\">[</span>\n    $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.isCompany [COMPANY]</span>&#125; $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.name</span>&#125;\n<span class=\"token punctuation\">]</span>&#125;\n</code>`}</pre>\n\n<PrevNextSection {prevLink} {nextLink} />\n","<script lang=\"ts\">\n\timport { mySections } from './SectionStore.js';\n\timport type { Section } from '$lib/section/SectionType.js';\n\timport PageContent from './PageContent.svelte';\n\timport Breadcrumb from '$lib/breadcrumbs/Breadcrumb.svelte';\n\n\tlet showDetails: boolean = false;\n\t$: current = getCurrent($mySections);\n\n\tfunction getCurrent(internalSections: Section[]): number {\n\t\tlet previous = current;\n\t\tfor (let i = 0; i < internalSections.length; i++) {\n\t\t\tif (internalSections[i].visible) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn previous;\n\t}\n\tfunction toggleTocDetails() {\n\t\tshowDetails = !showDetails;\n\t}\n</script>\n\n<div class=\"page-main\">\n\t<div class=\"page-toc-small\">\n\t\t<p class=\"page-toc-small-title\">On this page ...</p>\n\t\t<button\n\t\t\tclass=\"page-toc-small-expand-button\"\n\t\t\ton:click={() => {\n\t\t\t\ttoggleTocDetails();\n\t\t\t}}\n\t\t>\n\t\t\t{#if showDetails}\n\t\t\t\t<img class=\"page-toc-small-img\" src=\"/icons/upload.png\" alt=\"arrow up\" />\n\t\t\t{:else}\n\t\t\t\t<img class=\"page-toc-small-img\" src=\"/icons/down-arrow.png\" alt=\"arrow down\" />\n\t\t\t{/if}\n\t\t</button>\n\t</div>\n\t{#if showDetails}\n\t\t<div class=\"toc-details\">\n\t\t\t<ul class=\"page-ul\">\n\t\t\t\t{#each $mySections as sec, index}\n\t\t\t\t\t<li class=\"page-toc-text\">\n\t\t\t\t\t\t<a class:page-visible={index === current} class:page-nonvisible={index !== current} href={sec.ref}>\n\t\t\t\t\t\t\t{sec.title}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t{/each}\n\t\t\t</ul>\n\t\t</div>\n\t{/if}\n\n\t<Breadcrumb />\n\t<PageContent />\n</div>\n\n<nav class=\"page-toc\">\n\t<h3 class=\"page-toc-title\">On this page</h3>\n\t<ul class=\"page-ul\">\n\t\t{#each $mySections as sec, index}\n\t\t\t<li class=\"page-toc-text\">\n\t\t\t\t<a class:page-visible={index === current} class:page-nonvisible={index !== current} href={sec.ref}>\n\t\t\t\t\t{sec.title}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t{/each}\n\t</ul>\n</nav>\n"],"names":["mySections","writable","insert_hydration","target","p0","anchor","p1","code","ctx","sectioncomponent0_props","sectioncomponent1_props","sectioncomponent2_props","sectioncomponent3_props","sectioncomponent4_props","ul","p2","p3","p4","p5","p6","p7","p8","pre0","p9","p10","p11","pre1","p12","pre2","sectioncomponent0_changes","sectioncomponent1_changes","sectioncomponent2_changes","sectioncomponent3_changes","sectioncomponent4_changes","prevLink","nextLink","$mySections","visible","onMount","block","copyPrompt","copyPromptText","copyIcon","evt","copy","$$self","value","set_store_value","img","i","div","append_hydration","t0_value","attr","a","a_href_value","toggle_class","li","dirty","set_data","t0","create_if_block_1","create_if_block","div1","div0","p","button","nav","h3","showDetails","getCurrent","internalSections","previous","current","toggleTocDetails","$$invalidate"],"mappings":"0mBAGa,MAAAA,GAAkCC,GAAoB,EAAE,sCCuDe,oBAAkB,cAAlB,oBAAkB,uEAyBtE,oCAAkC,cAAlC,oCAAkC,uEAClC,oGAE/B,cAF+B,oGAE/B,uEAGC,kCAAgC,cAAhC,kCAAgC,uEAiBkD,oBAAkB,cAAlB,oBAAkB,uEAwBnB,mBAAiB,cAAjB,mBAAiB,uEAcpE,8CAA4C,cAA5C,8CAA4C;icAE1EC,EAGGC,EAAAC,EAAAC,CAAA,WACHH,EAAoIC,EAAAG,EAAAD,CAAA,qFAgBnD,UAAQ,kCAAkB,OAAK,cAA/B,UAAQ,sFAAkB,OAAK,mBAAvBH,EAAkBC,EAAAI,EAAAF,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wKA5GrCG,KAAQ,CAAC,IAAA,SAATC,GAAA,aAAAD,KAAQ,CAAC,4PA8BKA,KAAQ,CAAC,IAAA,SAATE,GAAA,aAAAF,KAAQ,CAAC,uKAkBvBA,KAAQ,CAAC,IAAA,SAATG,GAAA,aAAAH,KAAQ,CAAC,yFAuB9D,0DAA4D,4CAA8C,8GACtDA,KAAQ,CAAC,IAAA,SAATI,GAAA,aAAAJ,KAAQ,CAAC,8OAoCT,OAAAA,KAAQ,CAAC,IAAA,SAATK,GAAA,aAAAL,KAAQ,CAAC,sqFA3GhFN,EAGGC,EAAAC,EAAAC,CAAA,WACHH,EAaIC,EAAAW,EAAAT,CAAA,WACJH,EAIGC,EAAAG,EAAAD,CAAA,+CAUHH,EAGGC,EAAAY,EAAAV,CAAA,WACHH,EAAuHC,EAAAa,EAAAX,CAAA,WACvHH,EAKGC,EAAAc,EAAAZ,CAAA,WACHH,EAGGC,EAAAe,EAAAb,CAAA,8BAEHH,EAIGC,EAAAgB,GAAAd,CAAA,YACHH,EAGGC,EAAAiB,GAAAf,CAAA,YACHH,EAIGC,EAAAkB,GAAAhB,CAAA,YACHH,EAO2BC,EAAAmB,GAAAjB,CAAA,+DAG3BH,EAGGC,EAAAoB,GAAAlB,CAAA,YACHH,EAGGC,EAAAqB,GAAAnB,CAAA,YACHH,EAGGC,EAAAsB,GAAApB,CAAA,gCAWHH,EAYoBC,EAAAuB,GAAArB,CAAA,2CAEpBH,EAAiDC,EAAAwB,GAAAtB,CAAA,YACjDH,EAyEcC,EAAAyB,GAAAvB,CAAA,iHAvL0DwB,GAAA,aAAArB,KAAQ,CAAC,qJA8BKsB,GAAA,aAAAtB,KAAQ,CAAC,4FAkBvBuB,GAAA,aAAAvB,KAAQ,CAAC,6FAwBVwB,GAAA,aAAAxB,KAAQ,CAAC,yJAoCTyB,GAAA,aAAAzB,KAAQ,CAAC,swBArH3E0B,GAAW,4DACXC,GAAW,oGA/CfC,EAAA,EACG,MAAO,qBAAsB,QAAS,GAAO,IAAK,0BAClD,MAAO,mCAAoC,QAAS,GAAO,IAAK,wCAChE,MAAO,qBAAsB,QAAS,GAAO,IAAK,0BAClD,MAAO,oBAAqB,QAAS,GAAO,IAAK,yBACjD,MAAO,qBAAsB,QAAS,GAAO,IAAK,4BAEjD,IAAAC,EAAA,CAAA,EAcJC,GAAA,IAAA,CACoB,SAAS,iBAAiB,KAAK,EACvC,QAASC,GAAA,OACbC,EAAa,SAAS,cAAc,KAAK,EAC/CA,EAAW,UAAY,oBACjBC,EAAiB,SAAS,cAAc,GAAG,EACjDA,EAAe,UAAY,mBAC3BA,EAAe,UAAY,sBACrBC,EAAW,SAAS,cAAc,KAAK,EAC7CA,EAAS,IAAM,uBACfA,EAAS,UAAY,kBACrBF,EAAW,YAAYE,CAAQ,EAC/BF,EAAW,YAAYC,CAAc,EACrCF,EAAM,YAAYC,CAAU,EAC5BD,EAAM,cAAc,kBAAkB,EAAE,iBAAiB,QAAUI,GAAA,CAClEC,GAAKL,EAAM,cAAc,MAAM,EAAE,WAAW,EAC5CA,EAAM,cAAc,kBAAkB,EAAE,UAAY,UACpD,gBACCA,EAAM,cAAc,kBAAkB,EAAE,UAAY,oBAClD,yBAeiEM,EAAA,GAAA,UAAAR,EAAQ,CAAC,EAAAS,CAAA,IAATT,EAAQ,CAAC,EAAAS,wBA8BKD,EAAA,GAAA,UAAAR,EAAQ,CAAC,EAAAS,CAAA,IAATT,EAAQ,CAAC,EAAAS,wBAkBvBD,EAAA,GAAA,UAAAR,EAAQ,CAAC,EAAAS,CAAA,IAATT,EAAQ,CAAC,EAAAS,wBAwBVD,EAAA,GAAA,UAAAR,EAAQ,CAAC,EAAAS,CAAA,IAATT,EAAQ,CAAC,EAAAS,wBAoCTD,EAAA,GAAA,UAAAR,EAAQ,CAAC,EAAAS,CAAA,IAATT,EAAQ,CAAC,EAAAS,gDA3J/EC,GAAA/C,GAAGoC,EAAY,CAAC,EAAE,QAAUC,EAAQ,CAAC,EAAAD,CAAA,gBACrCW,GAAA/C,GAAGoC,EAAY,CAAC,EAAE,QAAUC,EAAQ,CAAC,EAAAD,CAAA,gBACrCW,GAAA/C,GAAGoC,EAAY,CAAC,EAAE,QAAUC,EAAQ,CAAC,EAAAD,CAAA,gBACrCW,GAAA/C,GAAGoC,EAAY,CAAC,EAAE,QAAUC,EAAQ,CAAC,EAAAD,CAAA,gBACrCW,GAAA/C,GAAGoC,EAAY,CAAC,EAAE,QAAUC,EAAQ,CAAC,EAAAD,CAAA,sbCoBlClC,EAA8EC,EAAA6C,EAAA3C,CAAA,gPAF9EH,EAAwEC,EAAA6C,EAAA3C,CAAA,8CASjEG,EAAW,CAAA,CAAA,uBAAhB,OAAIyC,GAAA,sTAFR/C,EAUKC,EAAA+C,EAAA7C,CAAA,EATJ8C,EAQID,EAAApC,CAAA,wEAPIN,EAAW,CAAA,CAAA,oBAAhB,OAAIyC,GAAA,EAAA,mHAAJ,uDAGEG,EAAA5C,KAAI,MAAK,6LAD+E6C,EAAAC,EAAA,OAAAC,EAAA/C,KAAI,GAAG,EAA1EgD,GAAAF,EAAA,eAAA9C,OAAUA,EAAO,CAAA,CAAA,EAAyBgD,GAAAF,EAAA,kBAAA9C,OAAUA,EAAO,CAAA,CAAA,uCADnFN,EAIIC,EAAAsD,EAAApD,CAAA,EAHH8C,EAEGM,EAAAH,CAAA,wBADDI,EAAA,GAAAN,KAAAA,EAAA5C,KAAI,MAAK,KAAAmD,GAAAC,EAAAR,CAAA,EAD+EM,EAAA,GAAAH,KAAAA,EAAA/C,KAAI,yBAAvEgD,GAAAF,EAAA,eAAA9C,OAAUA,EAAO,CAAA,CAAA,OAAyBgD,GAAAF,EAAA,kBAAA9C,OAAUA,EAAO,CAAA,CAAA,yCAmBlF4C,EAAA5C,KAAI,MAAK,6LAD+E6C,EAAAC,EAAA,OAAAC,EAAA/C,KAAI,GAAG,EAA1EgD,GAAAF,EAAA,eAAA9C,OAAUA,EAAO,CAAA,CAAA,EAAyBgD,GAAAF,EAAA,kBAAA9C,OAAUA,EAAO,CAAA,CAAA,uCADnFN,EAIIC,EAAAsD,EAAApD,CAAA,EAHH8C,EAEGM,EAAAH,CAAA,wBADDI,EAAA,GAAAN,KAAAA,EAAA5C,KAAI,MAAK,KAAAmD,GAAAC,EAAAR,CAAA,EAD+EM,EAAA,GAAAH,KAAAA,EAAA/C,KAAI,yBAAvEgD,GAAAF,EAAA,eAAA9C,OAAUA,EAAO,CAAA,CAAA,OAAyBgD,GAAAF,EAAA,kBAAA9C,OAAUA,EAAO,CAAA,CAAA,uIA9B9EA,EAAW,CAAA,EAAAqD,2BAObrD,EAAW,CAAA,GAAAsD,GAAAtD,CAAA,qCAqBRA,EAAW,CAAA,CAAA,uBAAhB,OAAIyC,GAAA,qiCArCR/C,EAgCKC,EAAA4D,EAAA1D,CAAA,EA/BJ8C,EAcKY,EAAAC,CAAA,EAbJb,EAAmDa,EAAAC,CAAA,SACnDd,EAWQa,EAAAE,CAAA,mFAoBVhE,EAWKC,EAAAgE,EAAA9D,CAAA,EAVJ8C,EAA2CgB,EAAAC,CAAA,SAC3CjB,EAQIgB,EAAArD,CAAA,0JA5BCN,EAAW,CAAA,mEAqBRA,EAAW,CAAA,CAAA,oBAAhB,OAAIyC,GAAA,EAAA,mHAAJ,yOAtDCoB,EAAuB,YAGlBC,EAAWC,EAAA,KACfC,EAAWC,UACNxB,EAAI,EAAGA,EAAIsB,EAAiB,OAAQtB,IACxC,GAAAsB,EAAiBtB,CAAC,EAAE,QAChB,OAAAA,EAGF,OAAAuB,EAEC,SAAAE,GAAA,KACRL,EAAe,CAAAA,CAAA,eAUbK,EAAgB,yCAtBhBC,EAAA,EAAAF,EAAUH,EAAWlC,CAAW,CAAA"}