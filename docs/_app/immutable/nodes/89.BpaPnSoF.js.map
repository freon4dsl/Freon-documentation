{"version":3,"file":"89.BpaPnSoF.js","sources":["../../../../../../src/routes/Tutorial/Projections_for_Expressions/SectionStore.ts","../../../../../../src/routes/Tutorial/Projections_for_Expressions/PageContent.svelte","../../../../../../src/routes/Tutorial/Projections_for_Expressions/+page.svelte"],"sourcesContent":["import { writable, type Writable } from 'svelte/store';\nimport type { Section } from '$lib/section/SectionType';\n\nexport const mySections: Writable<Section[]> = writable<Section[]>([]);\n","<script lang=\"ts\">\n\timport SectionComponent from '$lib/section/SectionComponent.svelte';\n\timport { mySections } from './SectionStore.js';\n\t$mySections = [\n\t\t{ title: 'Projections for Expressions', visible: false, ref: '#projections-for-expressions-1' },\n\t\t{ title: 'Cleaning up the GradeScore Concept', visible: false, ref: '#cleaning-up-the-gradescore-concept-2' },\n\t\t{ title: 'Reference Shortcut', visible: false, ref: '#reference-shortcut-3' },\n\t\t{ title: 'Binary Expressions', visible: false, ref: '#binary-expressions-4' }\n\t];\n\tlet visible: boolean[] = [];\n\t$: $mySections[0].visible = visible[0];\n\t$: $mySections[1].visible = visible[1];\n\t$: $mySections[2].visible = visible[2];\n\t$: $mySections[3].visible = visible[3];\n\timport copy from 'copy-to-clipboard';\n\timport { onMount } from 'svelte';\n\n\t/**\n\t * This function will go through all the 'pre' elements\n\t * on the page and add a copy button to them.\n\t * Thanks to: https://slavbasharov.com/blog/adding-click-to-copy-code-markdown-blog\n\t */\n\tonMount(() => {\n\t\tconst codeBlocks = document.querySelectorAll('pre');\n\t\tcodeBlocks.forEach((block) => {\n\t\t\tconst copyPrompt = document.createElement('div');\n\t\t\tcopyPrompt.className = 'copy-prompt';\n\t\t\tconst copyPromptText = document.createElement('p');\n\t\t\tcopyPromptText.innerHTML = 'ðŸ‘† Click to copy';\n\t\t\tcopyPromptText.className = 'copy-prompt-p';\n\t\t\tconst copyIcon = document.createElement('img');\n\t\t\tcopyIcon.src = '/icons/copy-icon.svg';\n\t\t\tcopyIcon.className = 'copy-prompt-img';\n\t\t\tcopyPrompt.appendChild(copyIcon);\n\t\t\tcopyPrompt.appendChild(copyPromptText);\n\t\t\tblock.appendChild(copyPrompt);\n\t\t\tblock.querySelector('.copy-prompt > p').addEventListener('click', (evt) => {\n\t\t\t\tcopy(block.querySelector('code').textContent);\n\t\t\t\tblock.querySelector('.copy-prompt > p').innerHTML = 'Copied!';\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tblock.querySelector('.copy-prompt > p').innerHTML = 'ðŸ‘† Click to copy';\n\t\t\t\t}, 1000);\n\t\t\t});\n\t\t});\n\t});\n\timport PrevNextSection from '$lib/prevNext/PrevNextSection.svelte';\n\n\tlet prevLink = '/Tutorial/Expressions_in_Freon';\n\tlet nextLink = '/Tutorial/In_Need_of_Scoping';\n\n\timport Figure from '$lib/figures/Figure.svelte';\n</script>\n\n<PrevNextSection {prevLink} {nextLink} />\n\n<SectionComponent tag=\"h1\" id=\"projections-for-expressions-1\" bind:intersecting={visible[0]}>Projections for Expressions</SectionComponent>\n<p>\n\tIn this lesson you will learn how to define projections for expressions such that you get the full benefit of Freonâ€™s built-in expression\n\tpower.\n</p>\n<SectionComponent tag=\"h2\" id=\"cleaning-up-the-gradescore-concept-2\" bind:intersecting={visible[1]}\n\t>Cleaning up the <i>GradeScore</i> Concept</SectionComponent\n>\n<p>\n\tRemember from the previous lesson that we defined a new concept <code>GradeScore</code>. We will start by making its projection look a bit\n\tbetter. We want it to look like the requirements.\n</p>\n<pre class=\"language-txt\">{@html `<code class=\"language-txt\">GradeC: Answer to questionX is correct AND the Number of Correct Answers = 3\n\nGradeD: Answer to questionY is correct OR Answer to questionZ is correct AND the Number of Correct Answers > 2</code>`}</pre>\n<p>Thus, the projection needs to be defined like this.</p>\n<pre\n\tclass=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Education/lesson5-defs/edu-scoring.edit#L1-L6\n</span>\n<span class=\"token keyword\">editor</span> <span class=\"token keyword\">default</span>\n\n<span class=\"token class-name\">GradeScore</span> &#123;<span class=\"token punctuation\">[</span>\n    $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.grade</span>&#125; : $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.expr</span>&#125;\n<span class=\"token punctuation\">]</span>&#125;\n</code>`}</pre>\n<SectionComponent tag=\"h2\" id=\"reference-shortcut-3\" bind:intersecting={visible[2]}>Reference Shortcut</SectionComponent>\n<p>\n\tThe next thing to tackle is the <code>Answer to questionY is correct</code>-part. We represented this in the metamodel by the concept\n\t<code>QuestionReference</code>, so the projection needs to be like this.\n</p>\n<pre\n\tclass=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Education/lesson5-defs/edu-scoring.edit#L11-L14\n</span>\n<span class=\"token class-name\">QuestionReference</span> &#123;\n    <span class=\"token punctuation\">[</span> Answer to $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.question</span>&#125; is correct <span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">trigger</span> = <span class=\"token string\">\"question\"</span>\n    <span class=\"token keyword\">referenceShortcut</span> = $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.question</span>&#125;</code>`}</pre>\n<p>\n\tIn lesson 2 <a href=\"/Tutorial/Making_an_Editor\">Making an Editor</a> we already encountered the <strong>trigger</strong>, a means to make\n\tediting easier for your user. Here we do something even more sophisticated. We use a <strong>reference shortcut</strong>.\n</p>\n<p>\n\tTo understand what it does, you need know that when a question reference is added, not one, but two nodes must be added to the AST. The\n\tfirst is an instance of <code>QuestionReference</code>, the second (the child of this instance) is an instance of the core type\n\t<code>FreNodeReference</code>. Normally, the user must select the type of the node to add it to the tree. So in this case, the user should\n\tfirst select <code>QuestionReference</code>, and then <code>FreNodeReference</code>.\n</p>\n<p>\n\tThe reference shortcut is there to avoid the double selection. The instance of <code>QuestionReference</code> is automatically created\n\twhen a reference is selected that fits as content of the property <code>question</code>.\n</p>\n<p>\n\tWe also add the next lines. These should not hold any surprises for you. You have already learned a lot from the previous lessons! Note\n\tthat we suffice with a constant text string for the <code>NrOfCorrectAnswers</code> concept.\n</p>\n<pre\n\tclass=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Education/lesson5-defs/edu-scoring.edit#L16-L22\n</span>\n\n<span class=\"token class-name\">NrOfCorrectAnswers</span> &#123;\n    <span class=\"token punctuation\">[</span>Number Of Correct Answers<span class=\"token punctuation\">]</span>\n&#125;\n\n<span class=\"token class-name\">NumberLiteralExpression</span> &#123;\n    <span class=\"token punctuation\">[</span>$&#123;<span class=\"token function\">value</span>&#125;<span class=\"token punctuation\">]</span></code>`}</pre>\n<SectionComponent tag=\"h1\" id=\"binary-expressions-4\" bind:intersecting={visible[3]}>Binary Expressions</SectionComponent>\n<p>Creating projections for binary expressions is no rocket science. All you have to do is tell Freon which symbol to use as operand.</p>\n<pre\n\tclass=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Education/lesson5-defs/edu-scoring.edit#L24-L53\n</span>\n\n<span class=\"token comment\">///////////////////////////////////\n</span><span class=\"token comment\">/// Boolean AND and OR\n</span><span class=\"token comment\">//////////////////////////////////\n</span>\n<span class=\"token class-name\">OrExpression</span> &#123;\n    <span class=\"token keyword\">symbol</span> = <span class=\"token string\">\"or\"</span>\n&#125;\n<span class=\"token class-name\">AndExpression</span> &#123;\n    <span class=\"token keyword\">symbol</span> = <span class=\"token string\">\"and\"</span>\n&#125;\n\n<span class=\"token comment\">///////////////////////////////////\n</span><span class=\"token comment\">/// Comparisons: &lt;=, >=, >, &lt;, ===\n</span><span class=\"token comment\">//////////////////////////////////\n</span>\n<span class=\"token class-name\">LessOrEqualsExpression</span> &#123;\n    <span class=\"token keyword\">symbol</span> = <span class=\"token string\">\"&lt;=\"</span>\n&#125;\n<span class=\"token class-name\">GreaterOrEqualsExpression</span> &#123;\n    <span class=\"token keyword\">symbol</span> = <span class=\"token string\">\">=\"</span>\n&#125;\n<span class=\"token class-name\">LessThenExpression</span> &#123;\n    <span class=\"token keyword\">symbol</span> = <span class=\"token string\">\"&lt;\"</span>\n&#125;\n<span class=\"token class-name\">GreaterThenExpression</span> &#123;\n    <span class=\"token keyword\">symbol</span> = <span class=\"token string\">\">\"</span>\n&#125;\n<span class=\"token class-name\">EqualsExpression</span> &#123;\n    <span class=\"token keyword\">symbol</span> = <span class=\"token string\">\"==\"</span></code>`}</pre>\n<p>Upon generation, you will see the following. Expressions that really look like expressions.</p>\n<Figure imageName={'tutorial/Tutorial-lesson5-screenshot1.png'} caption={'Editor after projections for expressions'} figureNumber={1} />\n<p>\n\tNote that the binary expressions have brackets around them to indicate the priorities that where defined in the <code\n\t\t>edu-scoring.ast</code\n\t>\n\tfile. If you do not want to see them, go to the <code>View</code> menu and deselect â€˜Bracketsâ€™.\n</p>\n<p>\n\tGo ahead and play around with what we have created so far. Maybe you notice that in the Score for page â€˜Theory101â€™ we can select\n\treferences to questions from the other pages. That is not exactly what we are hoping for. Our teachers should only be able to give grades\n\tbased on the questions of the current page. This means that we are in need of scoping, which is the topic to be addressed in the next\n\tlesson.\n</p>\n\n<PrevNextSection {prevLink} {nextLink} />\n","<script lang=\"ts\">\n\timport { mySections } from './SectionStore.js';\n\timport type { Section } from '$lib/section/SectionType.js';\n\timport PageContent from './PageContent.svelte';\n\timport Breadcrumb from '$lib/breadcrumbs/Breadcrumb.svelte';\n\n\tlet showDetails: boolean = false;\n\t$: current = getCurrent($mySections);\n\n\tfunction getCurrent(internalSections: Section[]): number {\n\t\tlet previous = current;\n\t\tfor (let i = 0; i < internalSections.length; i++) {\n\t\t\tif (internalSections[i].visible) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn previous;\n\t}\n\tfunction toggleTocDetails() {\n\t\tshowDetails = !showDetails;\n\t}\n</script>\n\n<div class=\"page-main\">\n\t<div class=\"page-toc-small\">\n\t\t<p class=\"page-toc-small-title\">On this page ...</p>\n\t\t<button\n\t\t\tclass=\"page-toc-small-expand-button\"\n\t\t\ton:click={() => {\n\t\t\t\ttoggleTocDetails();\n\t\t\t}}\n\t\t>\n\t\t\t{#if showDetails}\n\t\t\t\t<img class=\"page-toc-small-img\" src=\"/icons/upload.png\" alt=\"arrow up\" />\n\t\t\t{:else}\n\t\t\t\t<img class=\"page-toc-small-img\" src=\"/icons/down-arrow.png\" alt=\"arrow down\" />\n\t\t\t{/if}\n\t\t</button>\n\t</div>\n\t{#if showDetails}\n\t\t<div class=\"toc-details\">\n\t\t\t<ul class=\"page-ul\">\n\t\t\t\t{#each $mySections as sec, index}\n\t\t\t\t\t<li class=\"page-toc-text\">\n\t\t\t\t\t\t<a class:page-visible={index === current} class:page-nonvisible={index !== current} href={sec.ref}>\n\t\t\t\t\t\t\t{sec.title}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t{/each}\n\t\t\t</ul>\n\t\t</div>\n\t{/if}\n\n\t<Breadcrumb />\n\t<PageContent />\n</div>\n\n<nav class=\"page-toc\">\n\t<h3 class=\"page-toc-title\">On this page</h3>\n\t<ul class=\"page-ul\">\n\t\t{#each $mySections as sec, index}\n\t\t\t<li class=\"page-toc-text\">\n\t\t\t\t<a class:page-visible={index === current} class:page-nonvisible={index !== current} href={sec.ref}>\n\t\t\t\t\t{sec.title}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t{/each}\n\t</ul>\n</nav>\n"],"names":["mySections","writable","insert_hydration","target","i","anchor","ctx","sectioncomponent0_props","sectioncomponent1_props","sectioncomponent2_props","sectioncomponent3_props","p0","p1","pre0","p2","pre1","p3","pre2","p4","p5","p6","p7","pre3","p8","pre4","p9","p10","p11","sectioncomponent0_changes","sectioncomponent1_changes","sectioncomponent2_changes","sectioncomponent3_changes","prevLink","nextLink","$mySections","visible","onMount","block","copyPrompt","copyPromptText","copyIcon","evt","copy","$$self","value","set_store_value","img","div","append_hydration","ul","t0_value","attr","a","a_href_value","toggle_class","li","dirty","set_data","t0","create_if_block_1","create_if_block","div1","div0","p","button","nav","h3","showDetails","getCurrent","internalSections","previous","current","toggleTocDetails","$$invalidate"],"mappings":"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"}