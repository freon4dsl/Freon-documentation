import{s as Tt,A as $e,a as m,e as d,H as Ze,f as k,b as g,m as B,d as E,F as et,g as i,h as $,i as l,B as xe,r as Bt,w as we,v as Nt,t as ke,o as de,j as C,C as Ot,D as Lt,E as Q,q as Ct,p as St}from"../chunks/scheduler.Cra-n4xf.js";import{S as Mt,i as Ht,e as ye,c as I,a as N,m as O,t as z,b as U,d as R}from"../chunks/index.Bm95Nbrf.js";import{e as Ge}from"../chunks/stores.Bq7jfj-I.js";import{w as zt}from"../chunks/index.B9cI0ado.js";import{P as dt,S as Te,c as Ut,B as Rt}from"../chunks/index.DunYcI8q.js";import{F as gt}from"../chunks/Figure.DKZMymJr.js";const J=zt([]);function Kt(o){let t;return{c(){t=ke("The Projectional Editor Framework")},l(n){t=de(n,"The Projectional Editor Framework")},m(n,s){l(n,t,s)},d(n){n&&i(t)}}}function Vt(o){let t;return{c(){t=ke("The AST, the Box Tree, and the DOM")},l(n){t=de(n,"The AST, the Box Tree, and the DOM")},m(n,s){l(n,t,s)},d(n){n&&i(t)}}}function Gt(o){let t;return{c(){t=ke("Projection Layout Based on Boxes")},l(n){t=de(n,"Projection Layout Based on Boxes")},m(n,s){l(n,t,s)},d(n){n&&i(t)}}}function Wt(o){let t;return{c(){t=ke("Coupling Behavior to Boxes")},l(n){t=de(n,"Coupling Behavior to Boxes")},m(n,s){l(n,t,s)},d(n){n&&i(t)}}}function Jt(o){let t;return{c(){t=ke("Behavior is Defined by Actions")},l(n){t=de(n,"Behavior is Defined by Actions")},m(n,s){l(n,t,s)},d(n){n&&i(t)}}}function Qt(o){let t,n,s,p,c,h,r=`The Projectional Editor Framework is written in <a href="https://www.typescriptlang.org/">TypeScript</a>
	and <a href="https://svelte.dev/" target="_blank">Svelte</a>. This page provides an overview of the Framework. If you want to know how to
	use it, see <a href="/Documentation/Customizations/Editor_Customization">Editor Customization</a>.`,f,b,_,x,L,S=`The internal representation of any model written in a DSL is a tree of instances of TypeScript classes, the Abstract Syntax Tree (AST).
	All AST classes implement the core interface <a href="/Documentation/Under_the_Hood/Core_Interfaces"><code>FreNode</code></a>. Because the
	visual representation in the editor can differ from the AST, every visual element is represented by another TypeScript class called
	<strong>Box</strong>. All boxes that are used to show a certain projection set or editor view, form another tree, called the
	<strong>Box Tree</strong>. In fact, any box tree is the internal representation of the concrete syntax, and can therefore also be called
	the <strong>Concrete Syntax Tree</strong> (CST). Note, that there can be multiple box trees for one AST, because there can be multiple projection
	sets (or editors, or views, whatever name you want to give them). Thus, at any moment there are two internal TypeScript representations of
	the model, one that is the Abstract Syntax Tree (AST), and one that is the Concrete Syntax Tree (or Box Tree).`,M,D,ge=`Because Freon produces a web based editor, there is yet another representation of the content, the Document Object Model (DOM). According
	to <a href="https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction">MDN Web Docs</a> the DOM is the data
	representation of the objects that comprise the structure and content of a document on the web. In other words, the DOM, which is also a
	tree, represents the HTML elements in memory. In Freon, HTML elements are implemented using
	<a href="https://svelte.dev/" target="_blank">Svelte</a> components.`,P,A,be=`At any moment that the Freon editor is being used, Freon keeps these three different representations of the user’s model in sync. This
	section of the documentation explains the <strong>Box Tree</strong>.`,X,j,W,H,w,K=`The layout of every visible element in the editor is based on <em>boxes</em>. A box is a rectangular area in the editor. Every AST node is
	projected in a box. A box can contain any number of child boxes.`,y,u,T=`The framework provides many types of predefined boxes. See
	<a href="/Documentation/Under_the_Hood/Editor_Framework/Predefined_Boxes">Predefined Boxes</a> for an overview. These boxes can be used to
	build a projection.`,v,F,Y=`Let’s look at a small example to start with. Figure 1 shows the projection of the concept <code>StringLiteral</code>. This is mapped to a
	horizontal list of a quote (”), an editable text with the value of the StringLiteral, and a closing quote (”). Note that the quotes are
	not part of the AST. They are part of the concrete syntax used in this projection of the AST.`,Z,q,Be,ee,tt=`In TypeScript, using the <a href="/Documentation/Under_the_Hood/Editor_Framework/Predefined_Boxes">predefined boxes</a>, this projection
	might look something like:`,Le,te,Ce,Et=`<code class="language-ts"><span class="token keyword">new</span> <span class="token class-name">HorizontalListBox</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">LabelBox</span><span class="token punctuation">(</span><span class="token string">'"'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TextBox</span><span class="token punctuation">(</span>stringLiteral<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">LabelBox</span><span class="token punctuation">(</span><span class="token string">'"'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,Se,V,We,Me,ne,nt=`User actions on boxes need to be translated into interactions with the projected AST. To know which part of the projection represents the
	AST node, we give each <code>Box</code> in the projection a <em>role</em>, which is unique within its parent box. This way we can identify
	every box by its model element plus its role.`,He,se,st="In the following figure the roles are shown above the boxes in green.",Ee,ae,Fe,oe,at="We can now show the full typescript code for this projection. Given that <code>literal</code> is the <code>StringLiteral</code> object:",Pe,ie,Ae,Ft=`<code class="language-ts"><span class="token comment">//</span>
<span class="token keyword">new</span> <span class="token class-name">HorizontalListBox</span><span class="token punctuation">(</span>literal<span class="token punctuation">,</span> <span class="token string">"full-string"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>      <span class="token comment">// &lt;1></span>
    <span class="token keyword">new</span> <span class="token class-name">LabelBox</span><span class="token punctuation">(</span>literal<span class="token punctuation">,</span> <span class="token string">"start-quote"</span><span class="token punctuation">,</span> <span class="token string">'"'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token comment">// &lt;2></span>
    <span class="token keyword">new</span> <span class="token class-name">TextBox</span><span class="token punctuation">(</span>                                        <span class="token comment">// &lt;3></span>
        literal<span class="token punctuation">,</span>
        <span class="token string">"value"</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> literal<span class="token punctuation">.</span>value<span class="token punctuation">,</span>
        <span class="token punctuation">(</span>v<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>literal<span class="token punctuation">.</span>value # v<span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token class-name">LabelBox</span><span class="token punctuation">(</span>literal<span class="token punctuation">,</span> <span class="token string">"end-quote"</span><span class="token punctuation">,</span> <span class="token string">'"'</span><span class="token punctuation">)</span>             <span class="token comment">// &lt;4></span>
<span class="token punctuation">]</span><span class="token punctuation">)</span></code>`,je,pe,ot=`<li>The overall horizontal list box to group everything. Its parameters are the model element that is shown, the role of the box, and a list
		of child boxes.</li> <li>The first label box for the start quote. Its parameters are, like the horizontal box, the model element, the role of the box, and its
		content, which is the quote character.</li> <li>The text box for the value of the string literal. Its parameters are, like the horizontal box, the model element, the role of the box,
		the getter function for the content, and the setter function, used when the content changes.</li> <li>The second label box for the end quote. Except for its role, this is identical to the first label box.</li>`,De,G,Je,qe,le,it=`The behavior coupled to a <em>Box</em> is defined by an <code>Action</code>. To identify which action should be executed, each behavior is
	specified by:`,Ie,re,pt="<li>a <em>trigger</em>, describing the key(s) that will trigger the behavior, and</li> <li>one or more <em>roles</em>, specifying that the behavior is only active in boxes with that specific role,</li> <li>an <em>action</em>, which is a typescript/javascript function that will be executed when the behavior is being triggered.</li> <li>a <em>caretPosition</em>, which is the box where the cursor should be placed after the execution of the action (optional).</li>",Ne,ce,lt="There are four different types of action, each of which extend the <code>FreBehavior</code> interface.",Oe,ue,rt="<li><code>FreCustomBehavior</code>, used for most types of behavior, but specifically the creation of non expression concepts.</li> <li><code>FreExpressionCreator</code>, used to create an expression.</li> <li><code>FreBinaryExpressionCreator</code>, used to create a binary expression.</li> <li><code>KeyboardShortcutBehavior</code>, behaviour initiated through a keystroke.</li>",ze,fe,Ue,Pt=`<code class="language-ts"><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">FreBehavior</span> <span class="token punctuation">&#123;</span>
	<span class="token comment">/**
	 * The trigger to activate this behavior
	 */</span>
	trigger<span class="token operator">:</span> FreTriggerType<span class="token punctuation">;</span>
	<span class="token comment">/**
	 * The box roles in which this trigger is active
	 */</span>
	activeInBoxRoles<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token comment">/**
	 * Optional callback function that returns whether the trigger is applicable for the specific box.
	 */</span>
	isApplicable<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>box<span class="token operator">:</span> Box<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
	boxRoleToSelect<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
	caretPosition<span class="token operator">?</span><span class="token operator">:</span> FreCaret<span class="token punctuation">;</span>
	referenceShortcut<span class="token operator">?</span><span class="token operator">:</span> ReferenceShortcut<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">/**
 * Behavior with custom action, intended to be used to create non expression elements.
 */</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">FreCustomBehavior</span> <span class="token keyword">extends</span> <span class="token class-name">FreBehavior</span> <span class="token punctuation">&#123;</span>
	<span class="token function-variable function">action</span><span class="token operator">:</span> <span class="token punctuation">(</span>box<span class="token operator">:</span> Box<span class="token punctuation">,</span> trigger<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> editor<span class="token operator">:</span> FreEditor<span class="token punctuation">,</span> propertyName<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=></span> FreElement <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	undo<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>box<span class="token operator">:</span> Box<span class="token punctuation">,</span> ed<span class="token operator">:</span> FreEditor<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">/**
 * Special behavior for creating an expression.
 */</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">FreExpressionCreator</span> <span class="token keyword">extends</span> <span class="token class-name">FreBehavior</span> <span class="token punctuation">&#123;</span>
	<span class="token function-variable function">expressionBuilder</span><span class="token operator">:</span> <span class="token punctuation">(</span>box<span class="token operator">:</span> Box<span class="token punctuation">,</span> trigger<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> editor<span class="token operator">:</span> FreEditor<span class="token punctuation">,</span> propertyName<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=></span> FreExpression<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">/**
 * Special behavior for creating a binary expression.
 */</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">FreBinaryExpressionCreator</span> <span class="token keyword">extends</span> <span class="token class-name">FreBehavior</span> <span class="token punctuation">&#123;</span>
	<span class="token function-variable function">expressionBuilder</span><span class="token operator">:</span> <span class="token punctuation">(</span>box<span class="token operator">:</span> Box<span class="token punctuation">,</span> trigger<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> editor<span class="token operator">:</span> FreEditor<span class="token punctuation">,</span> propertyName<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=></span> FreBinaryExpression<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">/**
 * Special behavior initialized by keyboard strokes.
 */</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">KeyboardShortcutBehavior</span> <span class="token keyword">extends</span> <span class="token class-name">FreBehavior</span> <span class="token punctuation">&#123;</span>
	<span class="token function-variable function">action</span><span class="token operator">:</span> <span class="token punctuation">(</span>box<span class="token operator">:</span> Box<span class="token punctuation">,</span> trigger<span class="token operator">:</span> FreKey<span class="token punctuation">,</span> editor<span class="token operator">:</span> FreEditor<span class="token punctuation">,</span> propertyName<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>FreElement<span class="token operator">></span><span class="token punctuation">;</span>
	trigger<span class="token operator">:</span> FreKey<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,Re,he,ct=`To attach the behavior to one or more boxes, these box roles are added to the <code>activeInBoxRoles</code>
	property of an action.`,Ke,me,Ve;t=new dt({props:{prevLink:bt,nextLink:_t}});function At(e){o[1](e)}let ut={tag:"h1",id:"the-projectional-editor-framework-1",$$slots:{default:[Kt]},$$scope:{ctx:o}};o[0][0]!==void 0&&(ut.intersecting=o[0][0]),s=new Te({props:ut}),$e.push(()=>ye(s,"intersecting",At));function jt(e){o[2](e)}let ft={tag:"h2",id:"the-ast-the-box-tree-and-the-dom-2",$$slots:{default:[Vt]},$$scope:{ctx:o}};o[0][1]!==void 0&&(ft.intersecting=o[0][1]),b=new Te({props:ft}),$e.push(()=>ye(b,"intersecting",jt));function Dt(e){o[3](e)}let ht={tag:"h2",id:"projection-layout-based-on-boxes-3",$$slots:{default:[Gt]},$$scope:{ctx:o}};o[0][2]!==void 0&&(ht.intersecting=o[0][2]),j=new Te({props:ht}),$e.push(()=>ye(j,"intersecting",Dt)),q=new gt({props:{imageName:"documentation/mapping-example-stringliteral.svg",caption:"Mapping a StringLiteral",figureNumber:1}});function qt(e){o[4](e)}let mt={tag:"h2",id:"coupling-behavior-to-boxes-4",$$slots:{default:[Wt]},$$scope:{ctx:o}};o[0][3]!==void 0&&(mt.intersecting=o[0][3]),V=new Te({props:mt}),$e.push(()=>ye(V,"intersecting",qt)),ae=new gt({props:{caption:"Mapping a StringLiteral with Roles",imageName:"documentation/mapping-example-stringliteral-with-roles.svg",figureNumber:2}});function It(e){o[5](e)}let kt={tag:"h2",id:"behavior-is-defined-by-actions-5",$$slots:{default:[Jt]},$$scope:{ctx:o}};return o[0][4]!==void 0&&(kt.intersecting=o[0][4]),G=new Te({props:kt}),$e.push(()=>ye(G,"intersecting",It)),me=new dt({props:{prevLink:bt,nextLink:_t}}),{c(){I(t.$$.fragment),n=m(),I(s.$$.fragment),c=m(),h=d("p"),h.innerHTML=r,f=m(),I(b.$$.fragment),x=m(),L=d("p"),L.innerHTML=S,M=m(),D=d("p"),D.innerHTML=ge,P=m(),A=d("p"),A.innerHTML=be,X=m(),I(j.$$.fragment),H=m(),w=d("p"),w.innerHTML=K,y=m(),u=d("p"),u.innerHTML=T,v=m(),F=d("p"),F.innerHTML=Y,Z=m(),I(q.$$.fragment),Be=m(),ee=d("p"),ee.innerHTML=tt,Le=m(),te=d("pre"),Ce=new Ze(!1),Se=m(),I(V.$$.fragment),Me=m(),ne=d("p"),ne.innerHTML=nt,He=m(),se=d("p"),se.textContent=st,Ee=m(),I(ae.$$.fragment),Fe=m(),oe=d("p"),oe.innerHTML=at,Pe=m(),ie=d("pre"),Ae=new Ze(!1),je=m(),pe=d("ol"),pe.innerHTML=ot,De=m(),I(G.$$.fragment),qe=m(),le=d("p"),le.innerHTML=it,Ie=m(),re=d("ul"),re.innerHTML=pt,Ne=m(),ce=d("p"),ce.innerHTML=lt,Oe=m(),ue=d("ol"),ue.innerHTML=rt,ze=m(),fe=d("pre"),Ue=new Ze(!1),Re=m(),he=d("p"),he.innerHTML=ct,Ke=m(),I(me.$$.fragment),this.h()},l(e){N(t.$$.fragment,e),n=k(e),N(s.$$.fragment,e),c=k(e),h=g(e,"P",{"data-svelte-h":!0}),B(h)!=="svelte-p9sf9d"&&(h.innerHTML=r),f=k(e),N(b.$$.fragment,e),x=k(e),L=g(e,"P",{"data-svelte-h":!0}),B(L)!=="svelte-102m0dt"&&(L.innerHTML=S),M=k(e),D=g(e,"P",{"data-svelte-h":!0}),B(D)!=="svelte-1kjn8w7"&&(D.innerHTML=ge),P=k(e),A=g(e,"P",{"data-svelte-h":!0}),B(A)!=="svelte-q5dbbs"&&(A.innerHTML=be),X=k(e),N(j.$$.fragment,e),H=k(e),w=g(e,"P",{"data-svelte-h":!0}),B(w)!=="svelte-1myxtl8"&&(w.innerHTML=K),y=k(e),u=g(e,"P",{"data-svelte-h":!0}),B(u)!=="svelte-ntkh4y"&&(u.innerHTML=T),v=k(e),F=g(e,"P",{"data-svelte-h":!0}),B(F)!=="svelte-11bhw9u"&&(F.innerHTML=Y),Z=k(e),N(q.$$.fragment,e),Be=k(e),ee=g(e,"P",{"data-svelte-h":!0}),B(ee)!=="svelte-x1b26a"&&(ee.innerHTML=tt),Le=k(e),te=g(e,"PRE",{class:!0});var a=E(te);Ce=et(a,!1),a.forEach(i),Se=k(e),N(V.$$.fragment,e),Me=k(e),ne=g(e,"P",{"data-svelte-h":!0}),B(ne)!=="svelte-1l6dpui"&&(ne.innerHTML=nt),He=k(e),se=g(e,"P",{"data-svelte-h":!0}),B(se)!=="svelte-18hfc7l"&&(se.textContent=st),Ee=k(e),N(ae.$$.fragment,e),Fe=k(e),oe=g(e,"P",{"data-svelte-h":!0}),B(oe)!=="svelte-kdq8pz"&&(oe.innerHTML=at),Pe=k(e),ie=g(e,"PRE",{class:!0});var _e=E(ie);Ae=et(_e,!1),_e.forEach(i),je=k(e),pe=g(e,"OL",{"data-svelte-h":!0}),B(pe)!=="svelte-eh1dc3"&&(pe.innerHTML=ot),De=k(e),N(G.$$.fragment,e),qe=k(e),le=g(e,"P",{"data-svelte-h":!0}),B(le)!=="svelte-15c60o8"&&(le.innerHTML=it),Ie=k(e),re=g(e,"UL",{"data-svelte-h":!0}),B(re)!=="svelte-dmvod8"&&(re.innerHTML=pt),Ne=k(e),ce=g(e,"P",{"data-svelte-h":!0}),B(ce)!=="svelte-1hgh6c8"&&(ce.innerHTML=lt),Oe=k(e),ue=g(e,"OL",{"data-svelte-h":!0}),B(ue)!=="svelte-10fqf7n"&&(ue.innerHTML=rt),ze=k(e),fe=g(e,"PRE",{class:!0});var ve=E(fe);Ue=et(ve,!1),ve.forEach(i),Re=k(e),he=g(e,"P",{"data-svelte-h":!0}),B(he)!=="svelte-12crmy7"&&(he.innerHTML=ct),Ke=k(e),N(me.$$.fragment,e),this.h()},h(){Ce.a=null,$(te,"class","language-ts"),Ae.a=null,$(ie,"class","language-ts"),Ue.a=null,$(fe,"class","language-ts")},m(e,a){O(t,e,a),l(e,n,a),O(s,e,a),l(e,c,a),l(e,h,a),l(e,f,a),O(b,e,a),l(e,x,a),l(e,L,a),l(e,M,a),l(e,D,a),l(e,P,a),l(e,A,a),l(e,X,a),O(j,e,a),l(e,H,a),l(e,w,a),l(e,y,a),l(e,u,a),l(e,v,a),l(e,F,a),l(e,Z,a),O(q,e,a),l(e,Be,a),l(e,ee,a),l(e,Le,a),l(e,te,a),Ce.m(Et,te),l(e,Se,a),O(V,e,a),l(e,Me,a),l(e,ne,a),l(e,He,a),l(e,se,a),l(e,Ee,a),O(ae,e,a),l(e,Fe,a),l(e,oe,a),l(e,Pe,a),l(e,ie,a),Ae.m(Ft,ie),l(e,je,a),l(e,pe,a),l(e,De,a),O(G,e,a),l(e,qe,a),l(e,le,a),l(e,Ie,a),l(e,re,a),l(e,Ne,a),l(e,ce,a),l(e,Oe,a),l(e,ue,a),l(e,ze,a),l(e,fe,a),Ue.m(Pt,fe),l(e,Re,a),l(e,he,a),l(e,Ke,a),O(me,e,a),Ve=!0},p(e,[a]){const _e={};a&128&&(_e.$$scope={dirty:a,ctx:e}),!p&&a&1&&(p=!0,_e.intersecting=e[0][0],xe(()=>p=!1)),s.$set(_e);const ve={};a&128&&(ve.$$scope={dirty:a,ctx:e}),!_&&a&1&&(_=!0,ve.intersecting=e[0][1],xe(()=>_=!1)),b.$set(ve);const Qe={};a&128&&(Qe.$$scope={dirty:a,ctx:e}),!W&&a&1&&(W=!0,Qe.intersecting=e[0][2],xe(()=>W=!1)),j.$set(Qe);const Xe={};a&128&&(Xe.$$scope={dirty:a,ctx:e}),!We&&a&1&&(We=!0,Xe.intersecting=e[0][3],xe(()=>We=!1)),V.$set(Xe);const Ye={};a&128&&(Ye.$$scope={dirty:a,ctx:e}),!Je&&a&1&&(Je=!0,Ye.intersecting=e[0][4],xe(()=>Je=!1)),G.$set(Ye)},i(e){Ve||(z(t.$$.fragment,e),z(s.$$.fragment,e),z(b.$$.fragment,e),z(j.$$.fragment,e),z(q.$$.fragment,e),z(V.$$.fragment,e),z(ae.$$.fragment,e),z(G.$$.fragment,e),z(me.$$.fragment,e),Ve=!0)},o(e){U(t.$$.fragment,e),U(s.$$.fragment,e),U(b.$$.fragment,e),U(j.$$.fragment,e),U(q.$$.fragment,e),U(V.$$.fragment,e),U(ae.$$.fragment,e),U(G.$$.fragment,e),U(me.$$.fragment,e),Ve=!1},d(e){e&&(i(n),i(c),i(h),i(f),i(x),i(L),i(M),i(D),i(P),i(A),i(X),i(H),i(w),i(y),i(u),i(v),i(F),i(Z),i(Be),i(ee),i(Le),i(te),i(Se),i(Me),i(ne),i(He),i(se),i(Ee),i(Fe),i(oe),i(Pe),i(ie),i(je),i(pe),i(De),i(qe),i(le),i(Ie),i(re),i(Ne),i(ce),i(Oe),i(ue),i(ze),i(fe),i(Re),i(he),i(Ke)),R(t,e),R(s,e),R(b,e),R(j,e),R(q,e),R(V,e),R(ae,e),R(G,e),R(me,e)}}}let bt="/Documentation/Under_the_Hood",_t="/Documentation/Under_the_Hood/Editor_Framework/Predefined_Boxes";function Xt(o,t,n){let s;Bt(o,J,_=>n(6,s=_)),we(J,s=[{title:"The Projectional Editor Framework",visible:!1,ref:"#the-projectional-editor-framework-1"},{title:"The AST, the Box Tree, and the DOM",visible:!1,ref:"#the-ast-the-box-tree-and-the-dom-2"},{title:"Projection Layout Based on Boxes",visible:!1,ref:"#projection-layout-based-on-boxes-3"},{title:"Coupling Behavior to Boxes",visible:!1,ref:"#coupling-behavior-to-boxes-4"},{title:"Behavior is Defined by Actions",visible:!1,ref:"#behavior-is-defined-by-actions-5"}],s);let p=[];Nt(()=>{document.querySelectorAll("pre").forEach(x=>{const L=document.createElement("div");L.className="copy-prompt";const S=document.createElement("p");S.innerHTML="👆 Click to copy",S.className="copy-prompt-p";const M=document.createElement("img");M.src="/icons/copy-icon.svg",M.className="copy-prompt-img",L.appendChild(M),L.appendChild(S),x.appendChild(L),x.querySelector(".copy-prompt > p").addEventListener("click",D=>{Ut(x.querySelector("code").textContent),x.querySelector(".copy-prompt > p").innerHTML="Copied!",setTimeout(()=>{x.querySelector(".copy-prompt > p").innerHTML="👆 Click to copy"},1e3)})})});function c(_){o.$$.not_equal(p[0],_)&&(p[0]=_,n(0,p))}function h(_){o.$$.not_equal(p[1],_)&&(p[1]=_,n(0,p))}function r(_){o.$$.not_equal(p[2],_)&&(p[2]=_,n(0,p))}function f(_){o.$$.not_equal(p[3],_)&&(p[3]=_,n(0,p))}function b(_){o.$$.not_equal(p[4],_)&&(p[4]=_,n(0,p))}return o.$$.update=()=>{o.$$.dirty&1&&we(J,s[0].visible=p[0],s),o.$$.dirty&1&&we(J,s[1].visible=p[1],s),o.$$.dirty&1&&we(J,s[2].visible=p[2],s),o.$$.dirty&1&&we(J,s[3].visible=p[3],s),o.$$.dirty&1&&we(J,s[4].visible=p[4],s)},[p,c,h,r,f,b]}class Yt extends Mt{constructor(t){super(),Ht(this,t,Xt,Qt,Tt,{})}}function vt(o,t,n){const s=o.slice();return s[6]=t[n],s[8]=n,s}function wt(o,t,n){const s=o.slice();return s[6]=t[n],s[8]=n,s}function Zt(o){let t,n;return{c(){t=d("img"),this.h()},l(s){t=g(s,"IMG",{class:!0,src:!0,alt:!0}),this.h()},h(){$(t,"class","page-toc-small-img"),St(t.src,n="/icons/down-arrow.png")||$(t,"src",n),$(t,"alt","arrow down")},m(s,p){l(s,t,p)},d(s){s&&i(t)}}}function en(o){let t,n;return{c(){t=d("img"),this.h()},l(s){t=g(s,"IMG",{class:!0,src:!0,alt:!0}),this.h()},h(){$(t,"class","page-toc-small-img"),St(t.src,n="/icons/upload.png")||$(t,"src",n),$(t,"alt","arrow up")},m(s,p){l(s,t,p)},d(s){s&&i(t)}}}function $t(o){let t,n,s=Ge(o[0]),p=[];for(let c=0;c<s.length;c+=1)p[c]=xt(wt(o,s,c));return{c(){t=d("div"),n=d("ul");for(let c=0;c<p.length;c+=1)p[c].c();this.h()},l(c){t=g(c,"DIV",{class:!0});var h=E(t);n=g(h,"UL",{class:!0});var r=E(n);for(let f=0;f<p.length;f+=1)p[f].l(r);r.forEach(i),h.forEach(i),this.h()},h(){$(n,"class","page-ul"),$(t,"class","toc-details")},m(c,h){l(c,t,h),C(t,n);for(let r=0;r<p.length;r+=1)p[r]&&p[r].m(n,null)},p(c,h){if(h&5){s=Ge(c[0]);let r;for(r=0;r<s.length;r+=1){const f=wt(c,s,r);p[r]?p[r].p(f,h):(p[r]=xt(f),p[r].c(),p[r].m(n,null))}for(;r<p.length;r+=1)p[r].d(1);p.length=s.length}},d(c){c&&i(t),Lt(p,c)}}}function xt(o){let t,n,s=o[6].title+"",p,c,h;return{c(){t=d("li"),n=d("a"),p=ke(s),h=m(),this.h()},l(r){t=g(r,"LI",{class:!0});var f=E(t);n=g(f,"A",{href:!0});var b=E(n);p=de(b,s),b.forEach(i),h=k(f),f.forEach(i),this.h()},h(){$(n,"href",c=o[6].ref),Q(n,"page-visible",o[8]===o[2]),Q(n,"page-nonvisible",o[8]!==o[2]),$(t,"class","page-toc-text")},m(r,f){l(r,t,f),C(t,n),C(n,p),C(t,h)},p(r,f){f&1&&s!==(s=r[6].title+"")&&Ct(p,s),f&1&&c!==(c=r[6].ref)&&$(n,"href",c),f&4&&Q(n,"page-visible",r[8]===r[2]),f&4&&Q(n,"page-nonvisible",r[8]!==r[2])},d(r){r&&i(t)}}}function yt(o){let t,n,s=o[6].title+"",p,c,h;return{c(){t=d("li"),n=d("a"),p=ke(s),h=m(),this.h()},l(r){t=g(r,"LI",{class:!0});var f=E(t);n=g(f,"A",{href:!0});var b=E(n);p=de(b,s),b.forEach(i),h=k(f),f.forEach(i),this.h()},h(){$(n,"href",c=o[6].ref),Q(n,"page-visible",o[8]===o[2]),Q(n,"page-nonvisible",o[8]!==o[2]),$(t,"class","page-toc-text")},m(r,f){l(r,t,f),C(t,n),C(n,p),C(t,h)},p(r,f){f&1&&s!==(s=r[6].title+"")&&Ct(p,s),f&1&&c!==(c=r[6].ref)&&$(n,"href",c),f&4&&Q(n,"page-visible",r[8]===r[2]),f&4&&Q(n,"page-nonvisible",r[8]!==r[2])},d(r){r&&i(t)}}}function tn(o){let t,n,s,p="On this page ...",c,h,r,f,b,_,x,L,S,M,D="On this page",ge,P,A,be,X;function j(u,T){return u[1]?en:Zt}let W=j(o),H=W(o),w=o[1]&&$t(o);b=new Rt({}),x=new Yt({});let K=Ge(o[0]),y=[];for(let u=0;u<K.length;u+=1)y[u]=yt(vt(o,K,u));return{c(){t=d("div"),n=d("div"),s=d("p"),s.textContent=p,c=m(),h=d("button"),H.c(),r=m(),w&&w.c(),f=m(),I(b.$$.fragment),_=m(),I(x.$$.fragment),L=m(),S=d("nav"),M=d("h3"),M.textContent=D,ge=m(),P=d("ul");for(let u=0;u<y.length;u+=1)y[u].c();this.h()},l(u){t=g(u,"DIV",{class:!0});var T=E(t);n=g(T,"DIV",{class:!0});var v=E(n);s=g(v,"P",{class:!0,"data-svelte-h":!0}),B(s)!=="svelte-1929lhs"&&(s.textContent=p),c=k(v),h=g(v,"BUTTON",{class:!0});var F=E(h);H.l(F),F.forEach(i),v.forEach(i),r=k(T),w&&w.l(T),f=k(T),N(b.$$.fragment,T),_=k(T),N(x.$$.fragment,T),T.forEach(i),L=k(u),S=g(u,"NAV",{class:!0});var Y=E(S);M=g(Y,"H3",{class:!0,"data-svelte-h":!0}),B(M)!=="svelte-1hgt7fi"&&(M.textContent=D),ge=k(Y),P=g(Y,"UL",{class:!0});var Z=E(P);for(let q=0;q<y.length;q+=1)y[q].l(Z);Z.forEach(i),Y.forEach(i),this.h()},h(){$(s,"class","page-toc-small-title"),$(h,"class","page-toc-small-expand-button"),$(n,"class","page-toc-small"),$(t,"class","page-main"),$(M,"class","page-toc-title"),$(P,"class","page-ul"),$(S,"class","page-toc")},m(u,T){l(u,t,T),C(t,n),C(n,s),C(n,c),C(n,h),H.m(h,null),C(t,r),w&&w.m(t,null),C(t,f),O(b,t,null),C(t,_),O(x,t,null),l(u,L,T),l(u,S,T),C(S,M),C(S,ge),C(S,P);for(let v=0;v<y.length;v+=1)y[v]&&y[v].m(P,null);A=!0,be||(X=Ot(h,"click",o[4]),be=!0)},p(u,[T]){if(W!==(W=j(u))&&(H.d(1),H=W(u),H&&(H.c(),H.m(h,null))),u[1]?w?w.p(u,T):(w=$t(u),w.c(),w.m(t,f)):w&&(w.d(1),w=null),T&5){K=Ge(u[0]);let v;for(v=0;v<K.length;v+=1){const F=vt(u,K,v);y[v]?y[v].p(F,T):(y[v]=yt(F),y[v].c(),y[v].m(P,null))}for(;v<y.length;v+=1)y[v].d(1);y.length=K.length}},i(u){A||(z(b.$$.fragment,u),z(x.$$.fragment,u),A=!0)},o(u){U(b.$$.fragment,u),U(x.$$.fragment,u),A=!1},d(u){u&&(i(t),i(L),i(S)),H.d(),w&&w.d(),R(b),R(x),Lt(y,u),be=!1,X()}}}function nn(o,t,n){let s,p;Bt(o,J,b=>n(0,p=b));let c=!1;function h(b){let _=s;for(let x=0;x<b.length;x++)if(b[x].visible)return x;return _}function r(){n(1,c=!c)}const f=()=>{r()};return o.$$.update=()=>{o.$$.dirty&1&&n(2,s=h(p))},[p,c,s,r,f]}class cn extends Mt{constructor(t){super(),Ht(this,t,nn,tn,Tt,{})}}export{cn as component};
//# sourceMappingURL=57.BdtzFpLn.js.map
