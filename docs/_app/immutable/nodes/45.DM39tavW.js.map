{"version":3,"file":"45.DM39tavW.js","sources":["../../../../../../src/routes/Documentation/Interpreter_Framework/The_Expressions_DSL/SectionStore.ts","../../../../../../src/routes/Documentation/Interpreter_Framework/The_Expressions_DSL/PageContent.svelte","../../../../../../src/routes/Documentation/Interpreter_Framework/The_Expressions_DSL/+page.svelte"],"sourcesContent":["import { writable, type Writable } from 'svelte/store';\nimport type { Section } from '$lib/section/SectionType';\n\nexport const mySections: Writable<Section[]> = writable<Section[]>([]);\n","<script lang=\"ts\">\n\timport SectionComponent from '$lib/section/SectionComponent.svelte';\n\timport { mySections } from './SectionStore.js';\n\t$mySections = [\n\t\t{ title: 'The Expressions DSL', visible: false, ref: '#the-expressions-dsl-1' },\n\t\t{ title: 'Numeric Expressions', visible: false, ref: '#numeric-expressions-2' },\n\t\t{ title: 'Functions', visible: false, ref: '#functions-3' }\n\t];\n\tlet visible: boolean[] = [];\n\t$: $mySections[0].visible = visible[0];\n\t$: $mySections[1].visible = visible[1];\n\t$: $mySections[2].visible = visible[2];\n\timport copy from 'copy-to-clipboard';\n\timport { onMount } from 'svelte';\n\n\t/**\n\t * This function will go through all the 'pre' elements\n\t * on the page and add a copy button to them.\n\t * Thanks to: https://slavbasharov.com/blog/adding-click-to-copy-code-markdown-blog\n\t */\n\tonMount(() => {\n\t\tconst codeBlocks = document.querySelectorAll('pre');\n\t\tcodeBlocks.forEach((block) => {\n\t\t\tconst copyPrompt = document.createElement('div');\n\t\t\tcopyPrompt.className = 'copy-prompt';\n\t\t\tconst copyPromptText = document.createElement('p');\n\t\t\tcopyPromptText.innerHTML = 'ðŸ‘† Click to copy';\n\t\t\tcopyPromptText.className = 'copy-prompt-p';\n\t\t\tconst copyIcon = document.createElement('img');\n\t\t\tcopyIcon.src = '/icons/copy-icon.svg';\n\t\t\tcopyIcon.className = 'copy-prompt-img';\n\t\t\tcopyPrompt.appendChild(copyIcon);\n\t\t\tcopyPrompt.appendChild(copyPromptText);\n\t\t\tblock.appendChild(copyPrompt);\n\t\t\tblock.querySelector('.copy-prompt > p').addEventListener('click', (evt) => {\n\t\t\t\tcopy(block.querySelector('code').textContent);\n\t\t\t\tblock.querySelector('.copy-prompt > p').innerHTML = 'Copied!';\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tblock.querySelector('.copy-prompt > p').innerHTML = 'ðŸ‘† Click to copy';\n\t\t\t\t}, 1000);\n\t\t\t});\n\t\t});\n\t});\n\timport PrevNextSection from '$lib/prevNext/PrevNextSection.svelte';\n\n\tlet prevLink = '/Documentation/Interpreter_Framework';\n\tlet nextLink = '/Documentation/Interpreter_Framework/Understanding_the_Framework';\n</script>\n\n<PrevNextSection {prevLink} {nextLink} />\n<SectionComponent tag=\"h1\" id=\"the-expressions-dsl-1\" bind:intersecting={visible[0]}>The Expressions DSL</SectionComponent>\n<p>\n\tBefore explaining the interpreter framwework, we take a look at the following simple DSL, which will be used as an example. It is defined\n\twith a single model unit called <code>ExpressionUnit</code> that contains both function definitions and expressions. You can check out\n\tthis language by creating a new Freon project with <code>npm create Freon</code> and then selecting the <code>Expressions</code> language.\n</p>\n<pre class=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Expressions/src/defs/Expressions.ast#L1-L11\n</span>\nlanguage Expressions\n\n<span class=\"token keyword\">model</span> <span class=\"token class-name\">Expressions</span> &#123;\n    name: <span class=\"token builtin\">identifier</span>;\n    units: <span class=\"token class-name\">ExpressionUnit</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>;\n&#125;\n\n<span class=\"token keyword\">modelunit</span> <span class=\"token class-name\">ExpressionUnit</span> &#123;\n    functions: <span class=\"token class-name\">Function</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>;\n    expressions: <span class=\"token class-name\">Expression</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>;\n&#125;</code>`}</pre>\n<SectionComponent tag=\"h2\" id=\"numeric-expressions-2\" bind:intersecting={visible[1]}>Numeric Expressions</SectionComponent>\n<p>\n\tAdded are some basic expression concepts to represent numeric expressions: a NumberLiteralExpression and the standard binary expressions.\n\tNote that we specify the priorities of the binary operators to allow straightforward editing (see <a\n\t\thref=\"/Documentation/Defining_an_Editor/Binary_Expressions\">Binary Expressions</a\n\t>):\n</p>\n<pre class=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Expressions/src/defs/Expressions.ast#L15-L40\n</span>\n<span class=\"token keyword\">abstract</span> <span class=\"token keyword\">expression</span> <span class=\"token class-name\">Expression</span> &#123; &#125;\n\n<span class=\"token keyword\">expression</span> NumberLiteralExpression <span class=\"token keyword\">base</span> <span class=\"token class-name\">Expression</span> &#123;\n    value: <span class=\"token builtin\">number</span>;\n&#125;\n\n<span class=\"token keyword\">abstract</span> <span class=\"token keyword\">binary</span> <span class=\"token keyword\">expression</span> BinaryExpression <span class=\"token keyword\">base</span> <span class=\"token class-name\">Expression</span> &#123;\n    left: <span class=\"token class-name\">Expression</span>;\n    right: <span class=\"token class-name\">Expression</span>;\n&#125;\n\n<span class=\"token keyword\">binary</span> <span class=\"token keyword\">expression</span> MultiplyExpression <span class=\"token keyword\">base</span> <span class=\"token class-name\">BinaryExpression</span> &#123;\n    <span class=\"token keyword\">priority</span> = <span class=\"token number\">8</span>;\n&#125;\n\n<span class=\"token keyword\">binary</span> <span class=\"token keyword\">expression</span> PlusExpression <span class=\"token keyword\">base</span> <span class=\"token class-name\">BinaryExpression</span> &#123;\n    <span class=\"token keyword\">priority</span> = <span class=\"token number\">4</span>;\n&#125;\n\n<span class=\"token keyword\">binary</span> <span class=\"token keyword\">expression</span> MinusExpression <span class=\"token keyword\">base</span> <span class=\"token class-name\">BinaryExpression</span> &#123;\n    <span class=\"token keyword\">priority</span> = <span class=\"token number\">4</span>;\n&#125;\n\n<span class=\"token keyword\">binary</span> <span class=\"token keyword\">expression</span> DivideExpression <span class=\"token keyword\">base</span> <span class=\"token class-name\">BinaryExpression</span> &#123;\n    <span class=\"token keyword\">priority</span> = <span class=\"token number\">8</span>;\n&#125;</code>`}</pre>\n<SectionComponent tag=\"h2\" id=\"functions-3\" bind:intersecting={visible[2]}>Functions</SectionComponent>\n<p>We also add concepts to represent functions, both function definitions and function calls:</p>\n<pre class=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Expressions/src/defs/Expressions.ast#L42-L61\n</span>\n<span class=\"token keyword\">concept</span> <span class=\"token class-name\">Function</span> &#123;\n    name: <span class=\"token builtin\">identifier</span>;\n    body: <span class=\"token class-name\">Expression</span>;\n    parameters: <span class=\"token class-name\">Parameter</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>;\n    <span class=\"token keyword\">reference</span> declaredType : <span class=\"token class-name\">Type</span>;\n&#125;\n\n<span class=\"token keyword\">concept</span> <span class=\"token class-name\">Parameter</span> &#123;\n    name: <span class=\"token builtin\">identifier</span>;\n    <span class=\"token keyword\">reference</span> declaredType: <span class=\"token class-name\">Type</span>;\n&#125;\n\n<span class=\"token keyword\">expression</span> ParameterRef <span class=\"token keyword\">base</span> <span class=\"token class-name\">Expression</span> &#123;\n    <span class=\"token keyword\">reference</span> parameter: <span class=\"token class-name\">Parameter</span>;\n&#125;\n\n<span class=\"token keyword\">expression</span> FunctionCallExpression <span class=\"token keyword\">base</span> <span class=\"token class-name\">Expression</span> &#123;\n    <span class=\"token keyword\">reference</span> calledFunction: <span class=\"token class-name\">Function</span>;\n    arguments: <span class=\"token class-name\">Expression</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>;\n&#125;</code>`}</pre>\n\n<PrevNextSection {prevLink} {nextLink} />\n","<script lang=\"ts\">\n\timport { mySections } from './SectionStore.js';\n\timport type { Section } from '$lib/section/SectionType.js';\n\timport PageContent from './PageContent.svelte';\n\timport Breadcrumb from '$lib/breadcrumbs/Breadcrumb.svelte';\n\n\tlet showDetails: boolean = false;\n\t$: current = getCurrent($mySections);\n\n\tfunction getCurrent(internalSections: Section[]): number {\n\t\tlet previous = current;\n\t\tfor (let i = 0; i < internalSections.length; i++) {\n\t\t\tif (internalSections[i].visible) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn previous;\n\t}\n\tfunction toggleTocDetails() {\n\t\tshowDetails = !showDetails;\n\t}\n</script>\n\n<div class=\"page-main\">\n\t<div class=\"page-toc-small\">\n\t\t<p class=\"page-toc-small-title\">On this page ...</p>\n\t\t<button\n\t\t\tclass=\"page-toc-small-expand-button\"\n\t\t\ton:click={() => {\n\t\t\t\ttoggleTocDetails();\n\t\t\t}}\n\t\t>\n\t\t\t{#if showDetails}\n\t\t\t\t<img class=\"page-toc-small-img\" src=\"/icons/upload.png\" alt=\"arrow up\" />\n\t\t\t{:else}\n\t\t\t\t<img class=\"page-toc-small-img\" src=\"/icons/down-arrow.png\" alt=\"arrow down\" />\n\t\t\t{/if}\n\t\t</button>\n\t</div>\n\t{#if showDetails}\n\t\t<div class=\"toc-details\">\n\t\t\t<ul class=\"page-ul\">\n\t\t\t\t{#each $mySections as sec, index}\n\t\t\t\t\t<li class=\"page-toc-text\">\n\t\t\t\t\t\t<a class:page-visible={index === current} class:page-nonvisible={index !== current} href={sec.ref}>\n\t\t\t\t\t\t\t{sec.title}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t{/each}\n\t\t\t</ul>\n\t\t</div>\n\t{/if}\n\n\t<Breadcrumb />\n\t<PageContent />\n</div>\n\n<nav class=\"page-toc\">\n\t<h3 class=\"page-toc-title\">On this page</h3>\n\t<ul class=\"page-ul\">\n\t\t{#each $mySections as sec, index}\n\t\t\t<li class=\"page-toc-text\">\n\t\t\t\t<a class:page-visible={index === current} class:page-nonvisible={index !== current} href={sec.ref}>\n\t\t\t\t\t{sec.title}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t{/each}\n\t</ul>\n</nav>\n"],"names":["mySections","writable","ctx","sectioncomponent0_props","sectioncomponent1_props","sectioncomponent2_props","insert_hydration","target","p0","anchor","pre0","p1","pre1","p2","pre2","sectioncomponent0_changes","sectioncomponent1_changes","sectioncomponent2_changes","prevLink","nextLink","$mySections","visible","onMount","block","copyPrompt","copyPromptText","copyIcon","evt","copy","$$self","value","set_store_value","img","i","div","append_hydration","ul","t0_value","attr","a","a_href_value","toggle_class","li","dirty","set_data","t0","create_if_block_1","create_if_block","div1","div0","p","button","nav","h3","showDetails","getCurrent","internalSections","previous","current","toggleTocDetails","$$invalidate"],"mappings":"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"}