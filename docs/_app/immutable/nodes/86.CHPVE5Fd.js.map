{"version":3,"file":"86.CHPVE5Fd.js","sources":["../../../../../../src/routes/Tutorial/More_Fun_with_Projections/SectionStore.ts","../../../../../../src/routes/Tutorial/More_Fun_with_Projections/PageContent.svelte","../../../../../../src/routes/Tutorial/More_Fun_with_Projections/+page.svelte"],"sourcesContent":["import { writable, type Writable } from 'svelte/store';\nimport type { Section } from '$lib/section/SectionType';\n\nexport const mySections: Writable<Section[]> = writable<Section[]>([]);\n","<script lang=\"ts\">\n\timport SectionComponent from '$lib/section/SectionComponent.svelte';\n\timport { mySections } from './SectionStore.js';\n\t$mySections = [\n\t\t{ title: 'More Fun with Projections', visible: false, ref: '#more-fun-with-projections-1' },\n\t\t{ title: 'A projection for the Flow model unit', visible: false, ref: '#a-projection-for-the-flow-model-unit-2' },\n\t\t{ title: 'More than One Editor', visible: false, ref: '#more-than-one-editor-3' },\n\t\t{ title: 'Creating Tables', visible: false, ref: '#creating-tables-4' },\n\t\t{ title: 'Using a Specific Editor', visible: false, ref: '#using-a-specific-editor-5' }\n\t];\n\tlet visible: boolean[] = [];\n\t$: $mySections[0].visible = visible[0];\n\t$: $mySections[1].visible = visible[1];\n\t$: $mySections[2].visible = visible[2];\n\t$: $mySections[3].visible = visible[3];\n\t$: $mySections[4].visible = visible[4];\n\timport copy from 'copy-to-clipboard';\n\timport { onMount } from 'svelte';\n\n\t/**\n\t * This function will go through all the 'pre' elements\n\t * on the page and add a copy button to them.\n\t * Thanks to: https://slavbasharov.com/blog/adding-click-to-copy-code-markdown-blog\n\t */\n\tonMount(() => {\n\t\tconst codeBlocks = document.querySelectorAll('pre');\n\t\tcodeBlocks.forEach((block) => {\n\t\t\tconst copyPrompt = document.createElement('div');\n\t\t\tcopyPrompt.className = 'copy-prompt';\n\t\t\tconst copyPromptText = document.createElement('p');\n\t\t\tcopyPromptText.innerHTML = 'ðŸ‘† Click to copy';\n\t\t\tcopyPromptText.className = 'copy-prompt-p';\n\t\t\tconst copyIcon = document.createElement('img');\n\t\t\tcopyIcon.src = '/icons/copy-icon.svg';\n\t\t\tcopyIcon.className = 'copy-prompt-img';\n\t\t\tcopyPrompt.appendChild(copyIcon);\n\t\t\tcopyPrompt.appendChild(copyPromptText);\n\t\t\tblock.appendChild(copyPrompt);\n\t\t\tblock.querySelector('.copy-prompt > p').addEventListener('click', (evt) => {\n\t\t\t\tcopy(block.querySelector('code').textContent);\n\t\t\t\tblock.querySelector('.copy-prompt > p').innerHTML = 'Copied!';\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tblock.querySelector('.copy-prompt > p').innerHTML = 'ðŸ‘† Click to copy';\n\t\t\t\t}, 1000);\n\t\t\t});\n\t\t});\n\t});\n\timport PrevNextSection from '$lib/prevNext/PrevNextSection.svelte';\n\n\tlet prevLink = '/Tutorial/Making_an_Editor';\n\tlet nextLink = '/Tutorial/Expressions_in_Freon';\n\n\timport Note from '$lib/notes/Note.svelte';\n\timport Figure from '$lib/figures/Figure.svelte';\n</script>\n\n<PrevNextSection {prevLink} {nextLink} />\n\n<SectionComponent tag=\"h1\" id=\"more-fun-with-projections-1\" bind:intersecting={visible[0]}>More Fun with Projections</SectionComponent>\n<p>\n\tFreon projections are very flexible. In this lesson we are going to dive into a number of ways to make your editor look great. We are\n\tgoing to create tables!\n</p>\n<SectionComponent tag=\"h2\" id=\"a-projection-for-the-flow-model-unit-2\" bind:intersecting={visible[1]}\n\t>A projection for the <em>Flow</em> model unit</SectionComponent\n>\n<p>\n\tWe almost forgot to make an editor definition for the <em>Flow</em> model unit. We are going to create a file called\n\t<code>edu-flow-edit</code>, and add the following lines to it. You should be familiar with everything in these projections by now.\n</p>\n<pre class=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Education/lesson3-defs/edu-flow.edit\n</span>\n<span class=\"token comment\">/* This file contains the default editor definition. */</span>\n\n<span class=\"token keyword\">editor</span> <span class=\"token keyword\">default</span>\n\n<span class=\"token class-name\">Flow</span> &#123;<span class=\"token punctuation\">[</span>\n    Flow $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.name</span>&#125; for SiteGroup $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.main</span>&#125;\n\n    $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.rules <span class=\"token keyword\">vertical</span></span>&#125;\n<span class=\"token punctuation\">]</span>&#125;\n\n<span class=\"token class-name\">FlowRule</span> &#123;<span class=\"token punctuation\">[</span>\n    -------------------------------------\n    Name: $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.name</span>&#125;\n    Description: $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.description</span>&#125;\n    From page $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.page</span>&#125;\n\n        $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.transitions</span>&#125;\n<span class=\"token punctuation\">]</span>&#125;\n\n<span class=\"token class-name\">PageTransition</span> &#123;<span class=\"token punctuation\">[</span>\n    when $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.condition</span>&#125; goto page $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.toPage</span>&#125;\n<span class=\"token punctuation\">]</span>&#125;\n</code>`}</pre>\n<p>\n\tYes, generate the editor and try it! Note that to see this definition in action you need to click on the arrow-left icon in the top bar,\n\tand select â€˜StartFlowâ€™ from the list of model units. It looks like this.\n</p>\n<Figure\n\timageName={'tutorial/Tutorial-lesson3-screenshot1.png'}\n\tcaption={'Editor after adding projections for the Flow model unit'}\n\tfigureNumber={1}\n/>\n<SectionComponent tag=\"h2\" id=\"more-than-one-editor-3\" bind:intersecting={visible[2]}>More than One Editor</SectionComponent>\n<p>\n\tUsing Freon you can have multiple views on the same concept. After all, Freon generates a <a href=\"/Background/Projectional_Editing\"\n\t\t>projectional editor</a\n\t>.\n</p>\n<p>\n\tRemember that the editor definition in the previous lesson, and the one above are called <code>default</code>? That is because you can\n\thave any number of editor definitions, each with its own name.\n</p>\n<p>\n\tYou can think of an editor as a different view on the model, but in terms of the editor definition, it is simply a set of projection\n\tdefinitions. This set can consist of a single concept that will have a different appearance than the default, or multiple concepts that\n\tneed to be displayed differently.\n</p>\n<p>\n\tWhen an editor definition does not have a projection for a certain concept, it falls back to the projection in one of the other editor\n\tdefinitions. Which projection is chosen for a certain concept, is determined by a fixed algorithm. If you want to know more about this\n\talgorithm, read <a href=\"/Documentation/Defining_an_Editor#editor-precedence-4\">Editor Precedence</a>.\n</p>\n<Note\n\t><svelte:fragment slot=\"header\">One property, one occurrence in the editor</svelte:fragment>\n\t<svelte:fragment slot=\"content\">\n\t\t<p>\n\t\t\tUnfortunately, it is not possible to show the same property of a concept twice in the same editor. The tooling we use to keep the\n\t\t\tstate of the underlying model in sync with the view in the running editor does not allow us to do this.\n\t\t</p>\n\t</svelte:fragment></Note\n>\n<SectionComponent tag=\"h2\" id=\"creating-tables-4\" bind:intersecting={visible[3]}>Creating Tables</SectionComponent>\n<p>\n\tLetâ€™s create a second editor definition for the <em>Flow</em> model unit, one that displays the list of <em>PageTransitions</em> in the\n\t<em>FlowRule</em>\n\tas a table. We are going to name this editor definition <code>rules_as_table</code>. It goes into the file\n\t<code>edu-flow-table.edit</code>.\n</p>\n<pre\n\tclass=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Education/lesson3-defs/edu-flow-table.edit#L3-L3\n</span>\n<span class=\"token keyword\">editor</span> rules_as_table</code>`}</pre>\n<p>\n\tNow to create a projection for <em>FlowRule</em> we use almost the same projection as in the default editor. But to indicate that we are\n\tgoing to display the list <code>$&#123;self.transitions&#125;</code> as a table, we remove the keyword <code>vertical</code>, and add the\n\tkeyword <code>table</code>.\n</p>\n<p>\n\tFurthermore, we want the elements in the list to be displayed one element per row, thus the keyword <code>rows</code> is added. It wonâ€™t\n\tbe a surprise that you can also display one element per column using the keyword <code>columns</code>.\n</p>\n<pre\n\tclass=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Education/lesson3-defs/edu-flow-table.edit#L5-L12\n</span>\n<span class=\"token class-name\">FlowRule</span> &#123;<span class=\"token punctuation\">[</span>\n    -------------------------------------\n    Name: $&#123;<span class=\"token function\">name</span>&#125;\n        Description: $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.description</span>&#125;\n        For page $&#123;<span class=\"token function\">page</span>&#125;\n\n        $&#123;<span class=\"token variable\">self</span>.transitions <span class=\"token keyword\">table</span> rows&#125;\n<span class=\"token punctuation\">]</span>&#125;</code>`}</pre>\n<p>\n\tNext we need to define the table itself. Every element in the list is an instance of the <em>PageTransition</em> concept, therefore we add\n\ta projection for this concept, but in front of the square opening bracket we add yet another keyword: <code>table</code>. This means that\n\tthe following projection is only used when the instance of the concept is projected within a list that is projected as table. The\n\tprojection cannot be used anywhere else.\n</p>\n<p>\n\tIn the definition of the table projection you can add headers, which are taken literally. Here the headers are <code>Condition</code> and\n\t<code>Goto Page</code>. The bar between them indicates the transition from one table cell to the next table cell. Headers are not\n\tobligatory, you can create a table without headers, if you like.\n</p>\n<p>\n\tFinally, we define the content of the table cells by indicating which property of the <em>PageTransition</em> should go where. Again the bar\n\tindicates the transition from one table cell to the next table cell.\n</p>\n<pre\n\tclass=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Education/lesson3-defs/edu-flow-table.edit#L14-L17\n</span>\n<span class=\"token class-name\">PageTransition</span> &#123; <span class=\"token keyword\">table</span> <span class=\"token punctuation\">[</span>\n    Condition          | Goto Page\n    $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.condition</span>&#125;  |  $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.toPage</span>&#125;\n<span class=\"token punctuation\">]</span>&#125;</code>`}</pre>\n<p>\n\tNote that for the <em>PageTransition</em> object we have defined a table with two parts. It is the context in which these objects are projected\n\tthat determines whether these parts are displayed as rows or columns.\n</p>\n<p>\n\tWhen you got all this down in the file <code>edu-flow-table.edit</code>, it is time to run the generator again. Find the model unit named\n\tâ€˜StartFlow againâ€™, and â€¦ Yes, there is a table. Feel free to change <code>rows</code> in the <em>FlowRule</em> projection to\n\t<code>columns</code> to see what changes.\n</p>\n<Figure\n\timageName={'tutorial/Tutorial-lesson3-screenshot2.png'}\n\tcaption={'Editor after adding projections for the Flow model unit'}\n\tfigureNumber={2}\n/>\n<p>\n\tIf you want to see things like they were before, go the <strong>View</strong> menu, deselect <strong>rules_as_table</strong>, and hit\n\t<strong>Apply changes</strong>. The name of the menu option is the name that we have given our second editor definition. If you create\n\tmore editor definitions, every name will be added to the menu. That way, you are able to switch on and off any of the projection sets /\n\teditor definitions.\n</p>\n<SectionComponent tag=\"h2\" id=\"using-a-specific-editor-5\" bind:intersecting={visible[4]}>Using a Specific Editor</SectionComponent>\n<p>\n\tWe already mentioned that there is a specific <a href=\"/Documentation/Defining_an_Editor#editor-precedence-4\">algorithm</a> to determine\n\twhich projection is shown in the generated editor. However, there is a way to circumvent this. Sometimes you want to use a very specific\n\tway to display a concept. You can indicate that by stating the name of the concept, as well as the name of the editor definition, using\n\tthe syntax <code>[=&gt;ConceptName:editor-name]</code>, for example <code>[=&gt;Page:footing]</code>.\n</p>\n<p>\n\tWe want to see this feature in action! But before we can use the <code>footing</code> editor definition, we need to create it. Add a file\n\tcalled <code>page-footing.edit</code>, and copy the following lines into it.\n</p>\n<pre\n\tclass=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Education/lesson3-defs/page-footing.edit#L3-L8\n</span>\n<span class=\"token keyword\">editor</span> footing\n\n<span class=\"token class-name\">Page</span> &#123;<span class=\"token punctuation\">[</span>\n    Questions:\n        $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.questions <span class=\"token keyword\">vertical</span> <span class=\"token keyword\">terminator</span> [END]</span>&#125;\n<span class=\"token punctuation\">]</span>&#125;</code>`}</pre>\n<p>Now we are ready to specify a specific editor. Letâ€™s rewrite the <code>edu-topics.edit</code> file as follows.</p>\n<pre\n\tclass=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Education/lesson3-defs/edu-topics.edit#L17-L60\n</span>\n\n<span class=\"token class-name\">Theory</span> &#123;<span class=\"token punctuation\">[</span>\n    ----------------------------------------------------\n    Theory <span class=\"token punctuation\">[</span>=>Page<span class=\"token punctuation\">]</span>\n        $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.content <span class=\"token keyword\">vertical</span>  <span class=\"token keyword\">terminator</span>[== END OF LINE]</span>&#125;\n\n        <span class=\"token punctuation\">[</span>=>Page:<span class=\"token class-name\">footing</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span>&#125;\n\n<span class=\"token class-name\">Video</span> &#123;<span class=\"token punctuation\">[</span>\n    ----------------------------------------------------\n    Video <span class=\"token punctuation\">[</span>=>Page<span class=\"token punctuation\">]</span>\n        Maybe this video will help you understand.\n        $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.url</span>&#125;\n\n        <span class=\"token punctuation\">[</span>=>Page:<span class=\"token class-name\">footing</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span>&#125;\n\n<span class=\"token class-name\">WorkSheet</span> &#123;<span class=\"token punctuation\">[</span>\n    ----------------------------------------------------\n    Worksheet <span class=\"token punctuation\">[</span>=>Page<span class=\"token punctuation\">]</span>\n        See if you can answer the following questions.\n\n        <span class=\"token punctuation\">[</span>=>Page:<span class=\"token class-name\">footing</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span>&#125;\n\n<span class=\"token class-name\">ExamplePage</span> &#123;<span class=\"token punctuation\">[</span>\n    ----------------------------------------------------\n    Example <span class=\"token punctuation\">[</span>=>Page<span class=\"token punctuation\">]</span>\n        $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.content</span>&#125;\n\n        Now, please, answer the following questions.\n\n        <span class=\"token punctuation\">[</span>=>Page:<span class=\"token class-name\">footing</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span>&#125;\n\n<span class=\"token class-name\">InDepthMaterial</span> &#123;<span class=\"token punctuation\">[</span>\n    ----------------------------------------------------\n    InDepthMaterial <span class=\"token punctuation\">[</span>=>Page<span class=\"token punctuation\">]</span>\n        $&#123;<span class=\"token function\"><span class=\"token variable\">self</span>.content</span>&#125;\n\n        Test your understanding by answering the following questions.\n\n        <span class=\"token punctuation\">[</span>=>Page:<span class=\"token class-name\">footing</span><span class=\"token punctuation\">]</span></code>`}</pre>\n<p>\n\tAnd try it out! You see, there is so much fun to have with creating projections. But do come back for the next lesson where we will tackle\n\tthe topic of adding expressions to your metamodel, and to your editor definitions.\n</p>\n\n<PrevNextSection {prevLink} {nextLink} />\n","<script lang=\"ts\">\n\timport { mySections } from './SectionStore.js';\n\timport type { Section } from '$lib/section/SectionType.js';\n\timport PageContent from './PageContent.svelte';\n\timport Breadcrumb from '$lib/breadcrumbs/Breadcrumb.svelte';\n\n\tlet showDetails: boolean = false;\n\t$: current = getCurrent($mySections);\n\n\tfunction getCurrent(internalSections: Section[]): number {\n\t\tlet previous = current;\n\t\tfor (let i = 0; i < internalSections.length; i++) {\n\t\t\tif (internalSections[i].visible) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn previous;\n\t}\n\tfunction toggleTocDetails() {\n\t\tshowDetails = !showDetails;\n\t}\n</script>\n\n<div class=\"page-main\">\n\t<div class=\"page-toc-small\">\n\t\t<p class=\"page-toc-small-title\">On this page ...</p>\n\t\t<button\n\t\t\tclass=\"page-toc-small-expand-button\"\n\t\t\ton:click={() => {\n\t\t\t\ttoggleTocDetails();\n\t\t\t}}\n\t\t>\n\t\t\t{#if showDetails}\n\t\t\t\t<img class=\"page-toc-small-img\" src=\"/icons/upload.png\" alt=\"arrow up\" />\n\t\t\t{:else}\n\t\t\t\t<img class=\"page-toc-small-img\" src=\"/icons/down-arrow.png\" alt=\"arrow down\" />\n\t\t\t{/if}\n\t\t</button>\n\t</div>\n\t{#if showDetails}\n\t\t<div class=\"toc-details\">\n\t\t\t<ul class=\"page-ul\">\n\t\t\t\t{#each $mySections as sec, index}\n\t\t\t\t\t<li class=\"page-toc-text\">\n\t\t\t\t\t\t<a class:page-visible={index === current} class:page-nonvisible={index !== current} href={sec.ref}>\n\t\t\t\t\t\t\t{sec.title}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t{/each}\n\t\t\t</ul>\n\t\t</div>\n\t{/if}\n\n\t<Breadcrumb />\n\t<PageContent />\n</div>\n\n<nav class=\"page-toc\">\n\t<h3 class=\"page-toc-title\">On this page</h3>\n\t<ul class=\"page-ul\">\n\t\t{#each $mySections as sec, index}\n\t\t\t<li class=\"page-toc-text\">\n\t\t\t\t<a class:page-visible={index === current} class:page-nonvisible={index !== current} href={sec.ref}>\n\t\t\t\t\t{sec.title}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t{/each}\n\t</ul>\n</nav>\n"],"names":["mySections","writable","insert_hydration","target","em","anchor","p","ctx","sectioncomponent0_props","sectioncomponent1_props","sectioncomponent2_props","sectioncomponent3_props","sectioncomponent4_props","p0","p1","pre0","p2","p3","p4","p5","p6","p7","pre1","p8","p9","pre2","p10","p11","p12","pre3","p13","p14","p15","p16","p17","pre4","p18","pre5","p19","sectioncomponent0_changes","sectioncomponent1_changes","sectioncomponent2_changes","sectioncomponent3_changes","sectioncomponent4_changes","prevLink","nextLink","$mySections","visible","onMount","block","copyPrompt","copyPromptText","copyIcon","evt","copy","$$self","value","set_store_value","img","i","div","append_hydration","ul","t0_value","attr","a","a_href_value","toggle_class","li","dirty","set_data","t0","create_if_block_1","create_if_block","div1","div0","button","nav","h3","showDetails","getCurrent","internalSections","previous","current","toggleTocDetails","$$invalidate"],"mappings":"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"}