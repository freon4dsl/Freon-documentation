import{s as Pn,A as We,a as m,e as u,H as B,f as d,b as f,m as w,d as T,F as R,g as t,h as b,i as o,B as Ve,v as Mn,x as je,w as Qn,t as G,o as A,n as Je,j as M,C as Jn,D as xn,E as ne,q as Hn,p as Sn}from"../chunks/scheduler.CIEH-92L.js";import{S as Fn,i as In,e as Ye,c as U,a as j,m as O,t as z,b as W,d as V}from"../chunks/index.HLF2pGCU.js";import{e as Rt}from"../chunks/each.BLebZWAa.js";import{w as Kn}from"../chunks/index.bxqR-5-s.js";import{P as wn,S as Qe,c as Xn,B as Zn}from"../chunks/index.yTjXiNmY.js";import{N as vn}from"../chunks/Note.DEjaTDAW.js";const te=Kn([]);function es(p){let n;return{c(){n=G("Creating your Metamodel")},l(s){n=A(s,"Creating your Metamodel")},m(s,l){o(s,n,l)},d(s){s&&t(n)}}}function ts(p){let n;return{c(){n=G("Defining the model and model units")},l(s){n=A(s,"Defining the model and model units")},m(s,l){o(s,n,l)},d(s){s&&t(n)}}}function ns(p){let n,s,l="SiteGroup",i;return{c(){n=G("The "),s=u("em"),s.textContent=l,i=G(" model unit")},l(r){n=A(r,"The "),s=f(r,"EM",{"data-svelte-h":!0}),w(s)!=="svelte-hnm0w8"&&(s.textContent=l),i=A(r," model unit")},m(r,h){o(r,n,h),o(r,s,h),o(r,i,h)},p:Je,d(r){r&&(t(n),t(s),t(i))}}}function ss(p){let n;return{c(){n=G("The type identifier versus the type string.")},l(s){n=A(s,"The type identifier versus the type string.")},m(s,l){o(s,n,l)},d(s){s&&t(n)}}}function as(p){let n,s=`A property of type string may contain any printable character, but the content of an identifier is bound to a number of rules. These
			rules are equal to the rules in Typescript. Any concept or model unit that has a property
			<i>name</i> of type <i>identifier</i> can be referred to.`;return{c(){n=u("p"),n.innerHTML=s},l(l){n=f(l,"P",{"data-svelte-h":!0}),w(n)!=="svelte-1ab4pyr"&&(n.innerHTML=s)},m(l,i){o(l,n,i)},p:Je,d(l){l&&t(n)}}}function os(p){let n,s,l="Topic",i;return{c(){n=G("The "),s=u("em"),s.textContent=l,i=G(" model unit")},l(r){n=A(r,"The "),s=f(r,"EM",{"data-svelte-h":!0}),w(s)!=="svelte-3uahbr"&&(s.textContent=l),i=A(r," model unit")},m(r,h){o(r,n,h),o(r,s,h),o(r,i,h)},p:Je,d(r){r&&(t(n),t(s),t(i))}}}function ls(p){let n;return{c(){n=G("UML diagrams")},l(s){n=A(s,"UML diagrams")},m(s,l){o(s,n,l)},d(s){s&&t(n)}}}function is(p){let n,s=`The Freon metamodel can be expressed in UML. For instance, the Freon concept may be compared to a UML class. It can have properties,
			and may have associations with other concepts. It can inherit from other concepts, and/or implement an interface.`,l,i,r="Likewise, reference properties may be compared to UML directed associations, and normal properties to aggregation relations.",h,c,g="Freon automatically generates a number of UML class diagrams of your metamodel. You can find them in the folder <code>src/diagrams</code>, together with some other diagrams (for instance, one that focuses on inheritance relations).";return{c(){n=u("p"),n.textContent=s,l=m(),i=u("p"),i.textContent=r,h=m(),c=u("p"),c.innerHTML=g},l(k){n=f(k,"P",{"data-svelte-h":!0}),w(n)!=="svelte-1dkcjbg"&&(n.textContent=s),l=d(k),i=f(k,"P",{"data-svelte-h":!0}),w(i)!=="svelte-1p1bbg2"&&(i.textContent=r),h=d(k),c=f(k,"P",{"data-svelte-h":!0}),w(c)!=="svelte-k5b994"&&(c.innerHTML=g)},m(k,v){o(k,n,v),o(k,l,v),o(k,i,v),o(k,h,v),o(k,c,v)},p:Je,d(k){k&&(t(n),t(l),t(i),t(h),t(c))}}}function ps(p){let n,s,l="Flow",i;return{c(){n=G("The "),s=u("em"),s.textContent=l,i=G(" model unit")},l(r){n=A(r,"The "),s=f(r,"EM",{"data-svelte-h":!0}),w(s)!=="svelte-5ft4ka"&&(s.textContent=l),i=A(r," model unit")},m(r,h){o(r,n,h),o(r,s,h),o(r,i,h)},p:Je,d(r){r&&(t(n),t(s),t(i))}}}function rs(p){let n,s,l,i,r,h,c='From this point onwards we assume that you have a Freon project in your favorite IDE, either by cloning the <a href="/Documentation/Overview/Getting_Started#example-project-startup-2">Example project</a>, or our <a href="/Documentation/Overview/Getting_Started#template-project-startup-3">Template project</a>.',g,k,v,C,P,x=`The first we need to decide is the name of our language, and how we want to divide any model made by the user into partitions. The user
	will see only one of the partitions at a time in the editor, but references can be made to nodes in other partitions. In Freon terminology
	these partition are called <em>Model Units</em>.`,H,D,Ge=`We choose to create a model with a number of topics. Each model is dedicated to one of the courses that our client offers, that is, to one
	of their websites. Each model is divided into four parts. The <strong>Topics</strong> part will deal with the different webpages that are
	available for the topic. The <strong>Flow</strong> handles the way in which the flow between the pages need to stream. Further there are
	the <strong>Tests</strong>, which define the tests for the topics, and the flow between the topics. Finally, there is the
	<strong>SiteGroup</strong> part, which gives an overview of a site group, with all sub topics, flows, and tests that regard that topic.`,F,I,Ae="Create the file <code>edu-main.ast</code> in the <code>src/defs</code> folder, and add the following code.",se,Y,Q,N=`<code class="language-freon"><span class="token comment">// Education/lesson1-defs/edu-main.ast#L1-L10
</span>
language Education

<span class="token keyword">model</span> Education <span class="token comment">/* Computer Aided Learning */</span> &#123;
    name: <span class="token builtin">identifier</span>;
    topic: <span class="token class-name">Topic</span><span class="token punctuation">[</span><span class="token punctuation">]</span>;
    flow: <span class="token class-name">Flow</span><span class="token punctuation">[</span><span class="token punctuation">]</span>;
    tests: <span class="token class-name">Test</span><span class="token punctuation">[</span><span class="token punctuation">]</span>;
    overviews: <span class="token class-name">SiteGroup</span><span class="token punctuation">[</span><span class="token punctuation">]</span>;
&#125;
</code>`,L,S,E=`If you are impatient, and already tried to generate the editor, you will have noticed that there are errors in our input. We need to
	define the concepts Topic, Flow, Test, and SiteGroup. All four are model units, so we define them as such.`,_,$,y,ae=`<code class="language-freon"><span class="token keyword">modelunit</span> <span class="token class-name">Topic</span> &#123;

&#125;
<span class="token keyword">modelunit</span> <span class="token class-name">Test</span> &#123;

&#125;
<span class="token keyword">modelunit</span> <span class="token class-name">Flow</span> &#123;

&#125;
<span class="token keyword">modelunit</span> <span class="token class-name">SiteGroup</span> &#123;

&#125;</code>`,J,q,oe,Ke,le,Ot=`Let’s focus on the <em>SiteGroup</em> model unit first. Because it is likely that we need to make references to topics, we give each topic
	a <code>name </code>of type <code>identifier</code>.`,Xe,Z,Ze,ie,zt=`Every (sub)topic belongs to a site group, but we do not want this relationship to be like a UML aggregation, because we feel that this is
	too restrictive here. Therefore, we introduce another feature of Freons metamodel, the <strong>reference</strong>. You may compare a
	reference to a UML directed association, where the role name is the name of the property (‘topics’), and the direction is from the owner
	of the property (‘SiteGroup’) to the type of the property (‘Topic’). The square brackets behind the type name indicate that we want
	multiple instances of the type: a list.`,et,pe,Wt="Likewise, we define references to the flows and the tests that are part of this site group.",tt,re,nt,qn=`<code class="language-freon"><span class="token comment">// Education/lesson1-defs/edu-main.ast#L11-L17
</span>
<span class="token keyword">modelunit</span> <span class="token class-name">SiteGroup</span> &#123;
    name: <span class="token builtin">identifier</span>;
    description: <span class="token builtin">string</span>; <span class="token comment">/* e.g. Mathematics, fractions for students age 10 */</span>
    <span class="token keyword">reference</span> topics: <span class="token class-name">Topic</span><span class="token punctuation">[</span><span class="token punctuation">]</span>;
    <span class="token keyword">reference</span> flows: <span class="token class-name">Flow</span><span class="token punctuation">[</span><span class="token punctuation">]</span>;
    <span class="token keyword">reference</span> tests: <span class="token class-name">Test</span><span class="token punctuation">[</span><span class="token punctuation">]</span>;
&#125;</code>`,st,K,Ut,at,ce,Vt="To avoid having very large files, you can divide your language definition into as many files as you like. As long as the file extension is <code>.ast</code>, the file will be taken into account as part of your language metamodel.",ot,ue,Yt=`So, let’s create another file to store the metamodel for the <em>Topic</em> model unit. Like the <em>SiteGroup</em> model unit, the
	<em>Topic</em>
	model unit has a name of type identifier. A description is probably useful as well, we give it the type <code>string</code>, because it
	should be able to contain all kinds of characters. We are building a model of a website, thus the concept <strong>Page</strong> should definitely
	be present. Each Topic will have a number of pages. The result for now is the code below.`,lt,fe,it,Gn=`<code class="language-freon"><span class="token comment">// Education/lesson1-defs/edu-topics.ast#L3-L8
</span>
<span class="token keyword">modelunit</span> <span class="token class-name">Topic</span> &#123;
    name: <span class="token builtin">identifier</span>;
    <span class="token keyword">reference</span> main: <span class="token class-name">SiteGroup</span>;
    description: <span class="token builtin">string</span>;
    pages: <span class="token class-name">Page</span><span class="token punctuation">[</span><span class="token punctuation">]</span>;
&#125;</code>`,pt,me,Qt="So far, so good!",rt,de,Jt=`Now, let’s get an idea of the type of pages we will be dealing with. There will of course be a large number of ordinary pages with text
	that explains a part of a topic, some questions to test the understanding of the topic. But we will want to include stuff that is more
	interesting for the kids as well, for instance some videos. There should also be pages with examples, and pages with assignments. So it is
	a good idea to make the <strong>Page</strong> concept abstract, and have a number of concepts that inherit from it.`,ct,he,ut,An=`<code class="language-freon"><span class="token comment">// Education/lesson1-defs/edu-topics.ast#L10-L39
</span>
<span class="token keyword">abstract</span> <span class="token keyword">concept</span> <span class="token class-name">Page</span> &#123;
    name: <span class="token builtin">identifier</span>;
    questions: <span class="token class-name">Question</span><span class="token punctuation">[</span><span class="token punctuation">]</span>;
&#125;

<span class="token keyword">concept</span> <span class="token class-name">Theory</span> <span class="token keyword">base</span> <span class="token class-name">Page</span> &#123;
    /* For the sake of the example this is simplified.
    Should be formatted <span class="token keyword">text</span> including pictures, etc. */
    content: <span class="token class-name">Line</span><span class="token punctuation">[</span><span class="token punctuation">]</span>;
&#125;

<span class="token keyword">concept</span> <span class="token class-name">Line</span> &#123;
    content: <span class="token builtin">string</span>;
&#125;

<span class="token keyword">concept</span> <span class="token class-name">Video</span> <span class="token keyword">base</span> <span class="token class-name">Page</span> &#123;
    url: <span class="token builtin">string</span>;
&#125;

<span class="token keyword">concept</span> <span class="token class-name">WorkSheet</span> <span class="token keyword">base</span> <span class="token class-name">Page</span> &#123;
&#125;

<span class="token keyword">concept</span> <span class="token class-name">ExamplePage</span> <span class="token keyword">base</span> <span class="token class-name">Page</span> &#123;
    content: <span class="token class-name">Line</span><span class="token punctuation">[</span><span class="token punctuation">]</span>;
&#125;

<span class="token keyword">concept</span> <span class="token class-name">InDepthMaterial</span> <span class="token keyword">base</span> <span class="token class-name">Page</span> &#123;
    content: <span class="token class-name">Line</span><span class="token punctuation">[</span><span class="token punctuation">]</span>;
&#125;
</code>`,ft,ee,mt,ge,Kt=`But let’s not forget to add a definition for the concept <strong>Question</strong>. Freon will complain if you do not define all the
	concepts that you are using. And, because we are dealing with mathematics, we need to create a concept that represents fractions. A simple
	number will not be sufficient.`,dt,ke,ht,Dn=`<code class="language-freon"><span class="token comment">// Education/lesson1-defs/edu-topics.ast#L41-L57
</span>
    name: <span class="token builtin">identifier</span>;
    content: <span class="token builtin">string</span>;
    correctAnswer: <span class="token class-name">NumberConcept</span>;
&#125;

<span class="token keyword">abstract</span> <span class="token keyword">concept</span> <span class="token class-name">NumberConcept</span> &#123;
&#125;

<span class="token keyword">concept</span> <span class="token class-name">SimpleNumber</span> <span class="token keyword">base</span> <span class="token class-name">NumberConcept</span> &#123;
    value: <span class="token builtin">number</span>;
&#125;

<span class="token keyword">concept</span> <span class="token class-name">Fraction</span> <span class="token keyword">base</span> <span class="token class-name">NumberConcept</span> &#123;
    numerator: <span class="token builtin">number</span>;
    denominator: <span class="token builtin">number</span>;
&#125;
</code>`,gt,_e,Xt=`By now, you will have understood the gist of how to build a simple metamodel. For the sake of brevity, we wil not get any further into
	defining the content of each page type. Let’s just assume there is some content. We will be representing this as lines of text.`,kt,we,Zt=`If you like, you could generate the editor for our DSL, and try it out. Use the following command in the terminal window of your IDE (you
	can exchange npm for the package manager of your choice).`,_t,ve,wt,Nn='<code class="language-bash"><span class="token function">npm</span> run build</code>',vt,be,en="In the GitHub project we have provided an example model named ‘lesson1’. Before you open the editor, start the server.",bt,ye,yt,Bn='<code class="language-bash"><span class="token function">npm</span> run start</code>',$t,$e,tn="Open the editor, select ‘lesson1’ as model, and have a browse.",Ct,Ce,nn=`Yes, we know. It works, but it doesn’t look great. In the next lesson we will learn how to make the model in the editor look a bit more
	decent. But first we are going to define the second model unit, the description of the flow between the pages.`,Tt,X,jt,Lt,Te,sn=`Let’s create a second file called <code>edu-flow.ast</code>. This file will contain the part of the metamodel that handles
	<strong>Flows</strong>.`,Et,Le,Pt,Rn=`<code class="language-freon"><span class="token comment">// Education/lesson1-defs/edu-flow.ast#L1-L6
</span>
language Education

<span class="token keyword">modelunit</span> <span class="token class-name">Flow</span> &#123;
    <span class="token keyword">reference</span> main: <span class="token class-name">SiteGroup</span>;
    rules: <span class="token class-name">FlowRule</span><span class="token punctuation">[</span><span class="token punctuation">]</span>;
&#125;</code>`,Mt,Ee,an="Here again, we use a reference to link the flow a site group.",xt,Pe,on=`In the following code, each <strong>FlowRule</strong> is linked to a certain page. This is the page that the pupil is currently working
	on. The flow rule will determine which page to show next, using a set of <strong>PageTransitions</strong>. A page transition is simply a
	condition coupled to another page. If the condition is fulfilled, then that page will be the next in the flow.`,Ht,Me,St,Un=`<code class="language-freon"><span class="token comment">// Education/lesson1-defs/edu-flow.ast#L8-L18
</span>
<span class="token keyword">concept</span> <span class="token class-name">FlowRule</span> &#123;
    name: <span class="token builtin">identifier</span>;
    description: <span class="token builtin">string</span>;
    <span class="token keyword">reference</span> page: <span class="token class-name">Page</span>;
    transitions: <span class="token class-name">PageTransition</span><span class="token punctuation">[</span><span class="token punctuation">]</span>;
&#125;

<span class="token keyword">concept</span> <span class="token class-name">PageTransition</span> &#123; <span class="token comment">/* E.g. Grade A => show pageA, Grade F => show pageC */</span>
    condition: <span class="token class-name">Grade</span>;
    <span class="token keyword">reference</span> toPage: <span class="token class-name">Page</span>;
&#125;</code>`,Ft,xe,ln=`But how to define the condition for a page transition? Well, we’ll take the easy road for now, and make it an enumeration. In Freon
	terminology that is a <a href="/Documentation/Creating_the_Metamodel/Language_Structure#limited-concept-7">limited concept</a>, which is a
	slightly more extensive notion than the old-fashioned enumeration.`,It,He,qt,jn=`<code class="language-freon"><span class="token comment">// Education/lesson1-defs/edu-flow.ast#L20-L27
</span>
<span class="token keyword">limited</span> <span class="token class-name">Grade</span> &#123;
    gradeA;
    gradeB;
    gradeC;
    gradeD;
    gradeE;
    gradeF;
&#125;</code>`,Gt,Se,pn="That is the second model unit done!",At,Fe,rn=`Again, you might want to generate the editor and try it out. Note that when you start the editor, it will open with the topic, the one
	from the previous step. Simply click on the arrow-left icon in the top bar. This will open an overview of all the model units that are
	present in your project. Click on ‘StartFlow’, select ‘Open’ from the dropdown menu, and you can view and edit the partition that we have
	created for your use. Or, you can play with the File menu. Click <code>New Model Unit</code>, and see where that takes you.`,Dt,Ie,cn=`Still, things do not look great, do they? Please be patient. In the next lesson you will learn to beautify the appearance of the model in
	the editor.`,Nt,qe,Bt;n=new wn({props:{prevLink:bn,nextLink:yn}});function On(e){p[1](e)}let un={tag:"h1",id:"creating-your-metamodel-1",$$slots:{default:[es]},$$scope:{ctx:p}};p[0][0]!==void 0&&(un.intersecting=p[0][0]),l=new Qe({props:un}),We.push(()=>Ye(l,"intersecting",On));function zn(e){p[2](e)}let fn={tag:"h2",id:"defining-the-model-and-model-units-2",$$slots:{default:[ts]},$$scope:{ctx:p}};p[0][1]!==void 0&&(fn.intersecting=p[0][1]),k=new Qe({props:fn}),We.push(()=>Ye(k,"intersecting",zn));function Wn(e){p[3](e)}let mn={tag:"h2",id:"the-sitegroup-model-unit-3",$$slots:{default:[ns]},$$scope:{ctx:p}};p[0][2]!==void 0&&(mn.intersecting=p[0][2]),q=new Qe({props:mn}),We.push(()=>Ye(q,"intersecting",Wn)),Z=new vn({props:{$$slots:{content:[as],header:[ss]},$$scope:{ctx:p}}});function Vn(e){p[4](e)}let dn={tag:"h2",id:"the-topic-model-unit-4",$$slots:{default:[os]},$$scope:{ctx:p}};p[0][3]!==void 0&&(dn.intersecting=p[0][3]),K=new Qe({props:dn}),We.push(()=>Ye(K,"intersecting",Vn)),ee=new vn({props:{$$slots:{content:[is],header:[ls]},$$scope:{ctx:p}}});function Yn(e){p[5](e)}let hn={tag:"h2",id:"the-flow-model-unit-5",$$slots:{default:[ps]},$$scope:{ctx:p}};return p[0][4]!==void 0&&(hn.intersecting=p[0][4]),X=new Qe({props:hn}),We.push(()=>Ye(X,"intersecting",Yn)),qe=new wn({props:{prevLink:bn,nextLink:yn}}),{c(){U(n.$$.fragment),s=m(),U(l.$$.fragment),r=m(),h=u("p"),h.innerHTML=c,g=m(),U(k.$$.fragment),C=m(),P=u("p"),P.innerHTML=x,H=m(),D=u("p"),D.innerHTML=Ge,F=m(),I=u("p"),I.innerHTML=Ae,se=m(),Y=u("pre"),Q=new B(!1),L=m(),S=u("p"),S.textContent=E,_=m(),$=u("pre"),y=new B(!1),J=m(),U(q.$$.fragment),Ke=m(),le=u("p"),le.innerHTML=Ot,Xe=m(),U(Z.$$.fragment),Ze=m(),ie=u("p"),ie.innerHTML=zt,et=m(),pe=u("p"),pe.textContent=Wt,tt=m(),re=u("pre"),nt=new B(!1),st=m(),U(K.$$.fragment),at=m(),ce=u("p"),ce.innerHTML=Vt,ot=m(),ue=u("p"),ue.innerHTML=Yt,lt=m(),fe=u("pre"),it=new B(!1),pt=m(),me=u("p"),me.textContent=Qt,rt=m(),de=u("p"),de.innerHTML=Jt,ct=m(),he=u("pre"),ut=new B(!1),ft=m(),U(ee.$$.fragment),mt=m(),ge=u("p"),ge.innerHTML=Kt,dt=m(),ke=u("pre"),ht=new B(!1),gt=m(),_e=u("p"),_e.textContent=Xt,kt=m(),we=u("p"),we.textContent=Zt,_t=m(),ve=u("pre"),wt=new B(!1),vt=m(),be=u("p"),be.textContent=en,bt=m(),ye=u("pre"),yt=new B(!1),$t=m(),$e=u("p"),$e.textContent=tn,Ct=m(),Ce=u("p"),Ce.textContent=nn,Tt=m(),U(X.$$.fragment),Lt=m(),Te=u("p"),Te.innerHTML=sn,Et=m(),Le=u("pre"),Pt=new B(!1),Mt=m(),Ee=u("p"),Ee.textContent=an,xt=m(),Pe=u("p"),Pe.innerHTML=on,Ht=m(),Me=u("pre"),St=new B(!1),Ft=m(),xe=u("p"),xe.innerHTML=ln,It=m(),He=u("pre"),qt=new B(!1),Gt=m(),Se=u("p"),Se.textContent=pn,At=m(),Fe=u("p"),Fe.innerHTML=rn,Dt=m(),Ie=u("p"),Ie.textContent=cn,Nt=m(),U(qe.$$.fragment),this.h()},l(e){j(n.$$.fragment,e),s=d(e),j(l.$$.fragment,e),r=d(e),h=f(e,"P",{"data-svelte-h":!0}),w(h)!=="svelte-1nal5hr"&&(h.innerHTML=c),g=d(e),j(k.$$.fragment,e),C=d(e),P=f(e,"P",{"data-svelte-h":!0}),w(P)!=="svelte-17044zz"&&(P.innerHTML=x),H=d(e),D=f(e,"P",{"data-svelte-h":!0}),w(D)!=="svelte-4nl81o"&&(D.innerHTML=Ge),F=d(e),I=f(e,"P",{"data-svelte-h":!0}),w(I)!=="svelte-16d6d13"&&(I.innerHTML=Ae),se=d(e),Y=f(e,"PRE",{class:!0});var a=T(Y);Q=R(a,!1),a.forEach(t),L=d(e),S=f(e,"P",{"data-svelte-h":!0}),w(S)!=="svelte-e6spwt"&&(S.textContent=E),_=d(e),$=f(e,"PRE",{class:!0});var De=T($);y=R(De,!1),De.forEach(t),J=d(e),j(q.$$.fragment,e),Ke=d(e),le=f(e,"P",{"data-svelte-h":!0}),w(le)!=="svelte-q3veby"&&(le.innerHTML=Ot),Xe=d(e),j(Z.$$.fragment,e),Ze=d(e),ie=f(e,"P",{"data-svelte-h":!0}),w(ie)!=="svelte-10k2awt"&&(ie.innerHTML=zt),et=d(e),pe=f(e,"P",{"data-svelte-h":!0}),w(pe)!=="svelte-1p9g875"&&(pe.textContent=Wt),tt=d(e),re=f(e,"PRE",{class:!0});var Ne=T(re);nt=R(Ne,!1),Ne.forEach(t),st=d(e),j(K.$$.fragment,e),at=d(e),ce=f(e,"P",{"data-svelte-h":!0}),w(ce)!=="svelte-1bqmps1"&&(ce.innerHTML=Vt),ot=d(e),ue=f(e,"P",{"data-svelte-h":!0}),w(ue)!=="svelte-1d5znya"&&(ue.innerHTML=Yt),lt=d(e),fe=f(e,"PRE",{class:!0});var Be=T(fe);it=R(Be,!1),Be.forEach(t),pt=d(e),me=f(e,"P",{"data-svelte-h":!0}),w(me)!=="svelte-1s7uzm3"&&(me.textContent=Qt),rt=d(e),de=f(e,"P",{"data-svelte-h":!0}),w(de)!=="svelte-owpck7"&&(de.innerHTML=Jt),ct=d(e),he=f(e,"PRE",{class:!0});var Oe=T(he);ut=R(Oe,!1),Oe.forEach(t),ft=d(e),j(ee.$$.fragment,e),mt=d(e),ge=f(e,"P",{"data-svelte-h":!0}),w(ge)!=="svelte-1swii5h"&&(ge.innerHTML=Kt),dt=d(e),ke=f(e,"PRE",{class:!0});var Re=T(ke);ht=R(Re,!1),Re.forEach(t),gt=d(e),_e=f(e,"P",{"data-svelte-h":!0}),w(_e)!=="svelte-juvy7s"&&(_e.textContent=Xt),kt=d(e),we=f(e,"P",{"data-svelte-h":!0}),w(we)!=="svelte-eafevh"&&(we.textContent=Zt),_t=d(e),ve=f(e,"PRE",{class:!0});var ze=T(ve);wt=R(ze,!1),ze.forEach(t),vt=d(e),be=f(e,"P",{"data-svelte-h":!0}),w(be)!=="svelte-1gczgq4"&&(be.textContent=en),bt=d(e),ye=f(e,"PRE",{class:!0});var Ue=T(ye);yt=R(Ue,!1),Ue.forEach(t),$t=d(e),$e=f(e,"P",{"data-svelte-h":!0}),w($e)!=="svelte-gewt7f"&&($e.textContent=tn),Ct=d(e),Ce=f(e,"P",{"data-svelte-h":!0}),w(Ce)!=="svelte-17r4te0"&&(Ce.textContent=nn),Tt=d(e),j(X.$$.fragment,e),Lt=d(e),Te=f(e,"P",{"data-svelte-h":!0}),w(Te)!=="svelte-5hn17f"&&(Te.innerHTML=sn),Et=d(e),Le=f(e,"PRE",{class:!0});var gn=T(Le);Pt=R(gn,!1),gn.forEach(t),Mt=d(e),Ee=f(e,"P",{"data-svelte-h":!0}),w(Ee)!=="svelte-158f328"&&(Ee.textContent=an),xt=d(e),Pe=f(e,"P",{"data-svelte-h":!0}),w(Pe)!=="svelte-1ik6z40"&&(Pe.innerHTML=on),Ht=d(e),Me=f(e,"PRE",{class:!0});var kn=T(Me);St=R(kn,!1),kn.forEach(t),Ft=d(e),xe=f(e,"P",{"data-svelte-h":!0}),w(xe)!=="svelte-cplpuq"&&(xe.innerHTML=ln),It=d(e),He=f(e,"PRE",{class:!0});var _n=T(He);qt=R(_n,!1),_n.forEach(t),Gt=d(e),Se=f(e,"P",{"data-svelte-h":!0}),w(Se)!=="svelte-1aevpgu"&&(Se.textContent=pn),At=d(e),Fe=f(e,"P",{"data-svelte-h":!0}),w(Fe)!=="svelte-1vfh6aj"&&(Fe.innerHTML=rn),Dt=d(e),Ie=f(e,"P",{"data-svelte-h":!0}),w(Ie)!=="svelte-1db0p5k"&&(Ie.textContent=cn),Nt=d(e),j(qe.$$.fragment,e),this.h()},h(){Q.a=null,b(Y,"class","language-freon"),y.a=null,b($,"class","language-freon"),nt.a=null,b(re,"class","language-freon"),it.a=null,b(fe,"class","language-freon"),ut.a=null,b(he,"class","language-freon"),ht.a=null,b(ke,"class","language-freon"),wt.a=null,b(ve,"class","language-bash"),yt.a=null,b(ye,"class","language-bash"),Pt.a=null,b(Le,"class","language-freon"),St.a=null,b(Me,"class","language-freon"),qt.a=null,b(He,"class","language-freon")},m(e,a){O(n,e,a),o(e,s,a),O(l,e,a),o(e,r,a),o(e,h,a),o(e,g,a),O(k,e,a),o(e,C,a),o(e,P,a),o(e,H,a),o(e,D,a),o(e,F,a),o(e,I,a),o(e,se,a),o(e,Y,a),Q.m(N,Y),o(e,L,a),o(e,S,a),o(e,_,a),o(e,$,a),y.m(ae,$),o(e,J,a),O(q,e,a),o(e,Ke,a),o(e,le,a),o(e,Xe,a),O(Z,e,a),o(e,Ze,a),o(e,ie,a),o(e,et,a),o(e,pe,a),o(e,tt,a),o(e,re,a),nt.m(qn,re),o(e,st,a),O(K,e,a),o(e,at,a),o(e,ce,a),o(e,ot,a),o(e,ue,a),o(e,lt,a),o(e,fe,a),it.m(Gn,fe),o(e,pt,a),o(e,me,a),o(e,rt,a),o(e,de,a),o(e,ct,a),o(e,he,a),ut.m(An,he),o(e,ft,a),O(ee,e,a),o(e,mt,a),o(e,ge,a),o(e,dt,a),o(e,ke,a),ht.m(Dn,ke),o(e,gt,a),o(e,_e,a),o(e,kt,a),o(e,we,a),o(e,_t,a),o(e,ve,a),wt.m(Nn,ve),o(e,vt,a),o(e,be,a),o(e,bt,a),o(e,ye,a),yt.m(Bn,ye),o(e,$t,a),o(e,$e,a),o(e,Ct,a),o(e,Ce,a),o(e,Tt,a),O(X,e,a),o(e,Lt,a),o(e,Te,a),o(e,Et,a),o(e,Le,a),Pt.m(Rn,Le),o(e,Mt,a),o(e,Ee,a),o(e,xt,a),o(e,Pe,a),o(e,Ht,a),o(e,Me,a),St.m(Un,Me),o(e,Ft,a),o(e,xe,a),o(e,It,a),o(e,He,a),qt.m(jn,He),o(e,Gt,a),o(e,Se,a),o(e,At,a),o(e,Fe,a),o(e,Dt,a),o(e,Ie,a),o(e,Nt,a),O(qe,e,a),Bt=!0},p(e,[a]){const De={};a&128&&(De.$$scope={dirty:a,ctx:e}),!i&&a&1&&(i=!0,De.intersecting=e[0][0],Ve(()=>i=!1)),l.$set(De);const Ne={};a&128&&(Ne.$$scope={dirty:a,ctx:e}),!v&&a&1&&(v=!0,Ne.intersecting=e[0][1],Ve(()=>v=!1)),k.$set(Ne);const Be={};a&128&&(Be.$$scope={dirty:a,ctx:e}),!oe&&a&1&&(oe=!0,Be.intersecting=e[0][2],Ve(()=>oe=!1)),q.$set(Be);const Oe={};a&128&&(Oe.$$scope={dirty:a,ctx:e}),Z.$set(Oe);const Re={};a&128&&(Re.$$scope={dirty:a,ctx:e}),!Ut&&a&1&&(Ut=!0,Re.intersecting=e[0][3],Ve(()=>Ut=!1)),K.$set(Re);const ze={};a&128&&(ze.$$scope={dirty:a,ctx:e}),ee.$set(ze);const Ue={};a&128&&(Ue.$$scope={dirty:a,ctx:e}),!jt&&a&1&&(jt=!0,Ue.intersecting=e[0][4],Ve(()=>jt=!1)),X.$set(Ue)},i(e){Bt||(z(n.$$.fragment,e),z(l.$$.fragment,e),z(k.$$.fragment,e),z(q.$$.fragment,e),z(Z.$$.fragment,e),z(K.$$.fragment,e),z(ee.$$.fragment,e),z(X.$$.fragment,e),z(qe.$$.fragment,e),Bt=!0)},o(e){W(n.$$.fragment,e),W(l.$$.fragment,e),W(k.$$.fragment,e),W(q.$$.fragment,e),W(Z.$$.fragment,e),W(K.$$.fragment,e),W(ee.$$.fragment,e),W(X.$$.fragment,e),W(qe.$$.fragment,e),Bt=!1},d(e){e&&(t(s),t(r),t(h),t(g),t(C),t(P),t(H),t(D),t(F),t(I),t(se),t(Y),t(L),t(S),t(_),t($),t(J),t(Ke),t(le),t(Xe),t(Ze),t(ie),t(et),t(pe),t(tt),t(re),t(st),t(at),t(ce),t(ot),t(ue),t(lt),t(fe),t(pt),t(me),t(rt),t(de),t(ct),t(he),t(ft),t(mt),t(ge),t(dt),t(ke),t(gt),t(_e),t(kt),t(we),t(_t),t(ve),t(vt),t(be),t(bt),t(ye),t($t),t($e),t(Ct),t(Ce),t(Tt),t(Lt),t(Te),t(Et),t(Le),t(Mt),t(Ee),t(xt),t(Pe),t(Ht),t(Me),t(Ft),t(xe),t(It),t(He),t(Gt),t(Se),t(At),t(Fe),t(Dt),t(Ie),t(Nt)),V(n,e),V(l,e),V(k,e),V(q,e),V(Z,e),V(K,e),V(ee,e),V(X,e),V(qe,e)}}}let bn="/Tutorial/Overview",yn="/Tutorial/Making_an_Editor";function cs(p,n,s){let l;Mn(p,te,v=>s(6,l=v)),je(te,l=[{title:"Creating your Metamodel",visible:!1,ref:"#creating-your-metamodel-1"},{title:"Defining the model and model units",visible:!1,ref:"#defining-the-model-and-model-units-2"},{title:"The SiteGroup model unit",visible:!1,ref:"#the-sitegroup-model-unit-3"},{title:"The Topic model unit",visible:!1,ref:"#the-topic-model-unit-4"},{title:"The Flow model unit",visible:!1,ref:"#the-flow-model-unit-5"}],l);let i=[];Qn(()=>{document.querySelectorAll("pre").forEach(C=>{const P=document.createElement("div");P.className="copy-prompt";const x=document.createElement("p");x.innerHTML="👆 Click to copy",x.className="copy-prompt-p";const H=document.createElement("img");H.src="/icons/copy-icon.svg",H.className="copy-prompt-img",P.appendChild(H),P.appendChild(x),C.appendChild(P),C.querySelector(".copy-prompt > p").addEventListener("click",D=>{Xn(C.querySelector("code").textContent),C.querySelector(".copy-prompt > p").innerHTML="Copied!",setTimeout(()=>{C.querySelector(".copy-prompt > p").innerHTML="👆 Click to copy"},1e3)})})});function r(v){p.$$.not_equal(i[0],v)&&(i[0]=v,s(0,i))}function h(v){p.$$.not_equal(i[1],v)&&(i[1]=v,s(0,i))}function c(v){p.$$.not_equal(i[2],v)&&(i[2]=v,s(0,i))}function g(v){p.$$.not_equal(i[3],v)&&(i[3]=v,s(0,i))}function k(v){p.$$.not_equal(i[4],v)&&(i[4]=v,s(0,i))}return p.$$.update=()=>{p.$$.dirty&1&&je(te,l[0].visible=i[0],l),p.$$.dirty&1&&je(te,l[1].visible=i[1],l),p.$$.dirty&1&&je(te,l[2].visible=i[2],l),p.$$.dirty&1&&je(te,l[3].visible=i[3],l),p.$$.dirty&1&&je(te,l[4].visible=i[4],l)},[i,r,h,c,g,k]}class us extends Fn{constructor(n){super(),In(this,n,cs,rs,Pn,{})}}function $n(p,n,s){const l=p.slice();return l[6]=n[s],l[8]=s,l}function Cn(p,n,s){const l=p.slice();return l[6]=n[s],l[8]=s,l}function fs(p){let n,s;return{c(){n=u("img"),this.h()},l(l){n=f(l,"IMG",{class:!0,src:!0,alt:!0}),this.h()},h(){b(n,"class","page-toc-small-img"),Sn(n.src,s="/icons/down-arrow.png")||b(n,"src",s),b(n,"alt","arrow down")},m(l,i){o(l,n,i)},d(l){l&&t(n)}}}function ms(p){let n,s;return{c(){n=u("img"),this.h()},l(l){n=f(l,"IMG",{class:!0,src:!0,alt:!0}),this.h()},h(){b(n,"class","page-toc-small-img"),Sn(n.src,s="/icons/upload.png")||b(n,"src",s),b(n,"alt","arrow up")},m(l,i){o(l,n,i)},d(l){l&&t(n)}}}function Tn(p){let n,s,l=Rt(p[0]),i=[];for(let r=0;r<l.length;r+=1)i[r]=Ln(Cn(p,l,r));return{c(){n=u("div"),s=u("ul");for(let r=0;r<i.length;r+=1)i[r].c();this.h()},l(r){n=f(r,"DIV",{class:!0});var h=T(n);s=f(h,"UL",{class:!0});var c=T(s);for(let g=0;g<i.length;g+=1)i[g].l(c);c.forEach(t),h.forEach(t),this.h()},h(){b(s,"class","page-ul"),b(n,"class","toc-details")},m(r,h){o(r,n,h),M(n,s);for(let c=0;c<i.length;c+=1)i[c]&&i[c].m(s,null)},p(r,h){if(h&5){l=Rt(r[0]);let c;for(c=0;c<l.length;c+=1){const g=Cn(r,l,c);i[c]?i[c].p(g,h):(i[c]=Ln(g),i[c].c(),i[c].m(s,null))}for(;c<i.length;c+=1)i[c].d(1);i.length=l.length}},d(r){r&&t(n),xn(i,r)}}}function Ln(p){let n,s,l=p[6].title+"",i,r,h;return{c(){n=u("li"),s=u("a"),i=G(l),h=m(),this.h()},l(c){n=f(c,"LI",{class:!0});var g=T(n);s=f(g,"A",{href:!0});var k=T(s);i=A(k,l),k.forEach(t),h=d(g),g.forEach(t),this.h()},h(){b(s,"href",r=p[6].ref),ne(s,"page-visible",p[8]===p[2]),ne(s,"page-nonvisible",p[8]!==p[2]),b(n,"class","page-toc-text")},m(c,g){o(c,n,g),M(n,s),M(s,i),M(n,h)},p(c,g){g&1&&l!==(l=c[6].title+"")&&Hn(i,l),g&1&&r!==(r=c[6].ref)&&b(s,"href",r),g&4&&ne(s,"page-visible",c[8]===c[2]),g&4&&ne(s,"page-nonvisible",c[8]!==c[2])},d(c){c&&t(n)}}}function En(p){let n,s,l=p[6].title+"",i,r,h;return{c(){n=u("li"),s=u("a"),i=G(l),h=m(),this.h()},l(c){n=f(c,"LI",{class:!0});var g=T(n);s=f(g,"A",{href:!0});var k=T(s);i=A(k,l),k.forEach(t),h=d(g),g.forEach(t),this.h()},h(){b(s,"href",r=p[6].ref),ne(s,"page-visible",p[8]===p[2]),ne(s,"page-nonvisible",p[8]!==p[2]),b(n,"class","page-toc-text")},m(c,g){o(c,n,g),M(n,s),M(s,i),M(n,h)},p(c,g){g&1&&l!==(l=c[6].title+"")&&Hn(i,l),g&1&&r!==(r=c[6].ref)&&b(s,"href",r),g&4&&ne(s,"page-visible",c[8]===c[2]),g&4&&ne(s,"page-nonvisible",c[8]!==c[2])},d(c){c&&t(n)}}}function ds(p){let n,s,l,i="On this page ...",r,h,c,g,k,v,C,P,x,H,D="On this page",Ge,F,I,Ae,se;function Y(_,$){return _[1]?ms:fs}let Q=Y(p),N=Q(p),L=p[1]&&Tn(p);k=new Zn({}),C=new us({});let S=Rt(p[0]),E=[];for(let _=0;_<S.length;_+=1)E[_]=En($n(p,S,_));return{c(){n=u("div"),s=u("div"),l=u("p"),l.textContent=i,r=m(),h=u("button"),N.c(),c=m(),L&&L.c(),g=m(),U(k.$$.fragment),v=m(),U(C.$$.fragment),P=m(),x=u("nav"),H=u("h3"),H.textContent=D,Ge=m(),F=u("ul");for(let _=0;_<E.length;_+=1)E[_].c();this.h()},l(_){n=f(_,"DIV",{class:!0});var $=T(n);s=f($,"DIV",{class:!0});var y=T(s);l=f(y,"P",{class:!0,"data-svelte-h":!0}),w(l)!=="svelte-1929lhs"&&(l.textContent=i),r=d(y),h=f(y,"BUTTON",{class:!0});var ae=T(h);N.l(ae),ae.forEach(t),y.forEach(t),c=d($),L&&L.l($),g=d($),j(k.$$.fragment,$),v=d($),j(C.$$.fragment,$),$.forEach(t),P=d(_),x=f(_,"NAV",{class:!0});var J=T(x);H=f(J,"H3",{class:!0,"data-svelte-h":!0}),w(H)!=="svelte-1hgt7fi"&&(H.textContent=D),Ge=d(J),F=f(J,"UL",{class:!0});var q=T(F);for(let oe=0;oe<E.length;oe+=1)E[oe].l(q);q.forEach(t),J.forEach(t),this.h()},h(){b(l,"class","page-toc-small-title"),b(h,"class","page-toc-small-expand-button"),b(s,"class","page-toc-small"),b(n,"class","page-main"),b(H,"class","page-toc-title"),b(F,"class","page-ul"),b(x,"class","page-toc")},m(_,$){o(_,n,$),M(n,s),M(s,l),M(s,r),M(s,h),N.m(h,null),M(n,c),L&&L.m(n,null),M(n,g),O(k,n,null),M(n,v),O(C,n,null),o(_,P,$),o(_,x,$),M(x,H),M(x,Ge),M(x,F);for(let y=0;y<E.length;y+=1)E[y]&&E[y].m(F,null);I=!0,Ae||(se=Jn(h,"click",p[4]),Ae=!0)},p(_,[$]){if(Q!==(Q=Y(_))&&(N.d(1),N=Q(_),N&&(N.c(),N.m(h,null))),_[1]?L?L.p(_,$):(L=Tn(_),L.c(),L.m(n,g)):L&&(L.d(1),L=null),$&5){S=Rt(_[0]);let y;for(y=0;y<S.length;y+=1){const ae=$n(_,S,y);E[y]?E[y].p(ae,$):(E[y]=En(ae),E[y].c(),E[y].m(F,null))}for(;y<E.length;y+=1)E[y].d(1);E.length=S.length}},i(_){I||(z(k.$$.fragment,_),z(C.$$.fragment,_),I=!0)},o(_){W(k.$$.fragment,_),W(C.$$.fragment,_),I=!1},d(_){_&&(t(n),t(P),t(x)),N.d(),L&&L.d(),V(k),V(C),xn(E,_),Ae=!1,se()}}}function hs(p,n,s){let l,i;Mn(p,te,k=>s(0,i=k));let r=!1;function h(k){let v=l;for(let C=0;C<k.length;C++)if(k[C].visible)return C;return v}function c(){s(1,r=!r)}const g=()=>{c()};return p.$$.update=()=>{p.$$.dirty&1&&s(2,l=h(i))},[i,r,l,c,g]}class ys extends Fn{constructor(n){super(),In(this,n,hs,ds,Pn,{})}}export{ys as component};
//# sourceMappingURL=81.DVPTKTwX.js.map
