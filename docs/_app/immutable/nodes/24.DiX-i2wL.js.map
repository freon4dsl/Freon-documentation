{"version":3,"file":"24.DiX-i2wL.js","sources":["../../../../../../src/routes/Documentation/Customizations/SectionStore.ts","../../../../../../src/routes/Documentation/Customizations/PageContent.svelte","../../../../../../src/routes/Documentation/Customizations/+page.svelte"],"sourcesContent":["import { writable, type Writable } from 'svelte/store';\nimport type { Section } from '$lib/section/SectionType';\n\nexport const mySections: Writable<Section[]> = writable<Section[]>([]);\n","<script lang=\"ts\">\n\timport SectionComponent from '$lib/section/SectionComponent.svelte';\n\timport { mySections } from './SectionStore.js';\n\t$mySections = [\n\t\t{ title: 'Customization', visible: false, ref: '#customization-1' },\n\t\t{ title: 'Stacked Architecture', visible: false, ref: '#stacked-architecture-2' },\n\t\t{ title: 'Customizability of the Fre-tools', visible: false, ref: '#customizability-of-the-fre-tools-3' },\n\t\t{ title: 'Adding A Fre-tool', visible: false, ref: '#adding-a-fre-tool-4' },\n\t\t{ title: 'Replacing a Fre-tool', visible: false, ref: '#replacing-a-fre-tool-5' }\n\t];\n\tlet visible: boolean[] = [];\n\t$: $mySections[0].visible = visible[0];\n\t$: $mySections[1].visible = visible[1];\n\t$: $mySections[2].visible = visible[2];\n\t$: $mySections[3].visible = visible[3];\n\t$: $mySections[4].visible = visible[4];\n\timport copy from 'copy-to-clipboard';\n\timport { onMount } from 'svelte';\n\n\t/**\n\t * This function will go through all the 'pre' elements\n\t * on the page and add a copy button to them.\n\t * Thanks to: https://slavbasharov.com/blog/adding-click-to-copy-code-markdown-blog\n\t */\n\tonMount(() => {\n\t\tconst codeBlocks = document.querySelectorAll('pre');\n\t\tcodeBlocks.forEach((block) => {\n\t\t\tconst copyPrompt = document.createElement('div');\n\t\t\tcopyPrompt.className = 'copy-prompt';\n\t\t\tconst copyPromptText = document.createElement('p');\n\t\t\tcopyPromptText.innerHTML = 'ðŸ‘† Click to copy';\n\t\t\tcopyPromptText.className = 'copy-prompt-p';\n\t\t\tconst copyIcon = document.createElement('img');\n\t\t\tcopyIcon.src = '/icons/copy-icon.svg';\n\t\t\tcopyIcon.className = 'copy-prompt-img';\n\t\t\tcopyPrompt.appendChild(copyIcon);\n\t\t\tcopyPrompt.appendChild(copyPromptText);\n\t\t\tblock.appendChild(copyPrompt);\n\t\t\tblock.querySelector('.copy-prompt > p').addEventListener('click', (evt) => {\n\t\t\t\tcopy(block.querySelector('code').textContent);\n\t\t\t\tblock.querySelector('.copy-prompt > p').innerHTML = 'Copied!';\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tblock.querySelector('.copy-prompt > p').innerHTML = 'ðŸ‘† Click to copy';\n\t\t\t\t}, 1000);\n\t\t\t});\n\t\t});\n\t});\n\timport PrevNextSection from '$lib/prevNext/PrevNextSection.svelte';\n\n\tlet prevLink = '/Documentation/Interpreter_Framework/Understanding_the_Framework';\n\tlet nextLink = '/Documentation/Customizations/Editor_Customization';\n\n\timport Figure from '$lib/figures/Figure.svelte';\n</script>\n\n<PrevNextSection {prevLink} {nextLink} />\n\n<SectionComponent tag=\"h1\" id=\"customization-1\" bind:intersecting={visible[0]}>Customization</SectionComponent>\n<p>\n\tFrom the five parts of the language definition, Freon generates a work environment containing an editor, a scope provider or scoper, a\n\ttype provider or typer, a validator, a standard library, and some utilities like a parser/deparser. These separate components are called <strong\n\t\t>fre-tools</strong\n\t>. In other parts of the documentation you can find how to fine-tune the generated fre-tools, using the file in the\n\t<a href=\"/Documentation/Overview/Getting_Started#template-project-startup-3\"><em>defs</em> folder</a>\n\t(i.e. the folder were you keep your definition files). (See for instance\n\t<a href=\"/Documentation/Defining_an_Editor\">Defining_an_editor</a>.) In this part we describe how to make further customizations to the\n\ttoolset by writing some TypeScript code.\n</p>\n<SectionComponent tag=\"h2\" id=\"stacked-architecture-2\" bind:intersecting={visible[1]}>Stacked Architecture</SectionComponent>\n<p>\n\tCustomization is possible because of our <strong>stacked architecture</strong>. This architecture makes it possible to create your\n\tlanguage, and customize it step-by-step in an agile fashion. We follow the following philosophy: The design philosophy that we follow in\n\tFreon can best be described by the following quote from the well-known graphical user interface designer Alan Kay.\n</p>\n<blockquote>\n\t<p>\n\t\t<em>Simple things should be simple, complex things should be possible.</em>\n\t\t(<a href=\"https://en.wikipedia.org/wiki/Alan_Kay\" target=\"_blank\">Alan Kay, Turing Award Winner</a>)\n\t</p>\n</blockquote>\n<p>\n\t(Read our <a href=\"/Background\">Background</a> to understand why we have chosen this architecture.) Supporting this we use the following levels\n\tof customization.\n</p>\n<ol>\n\t<li>The default level, which is always present.</li>\n\t<li>\n\t\tThe definition level, where the fre-tools are being generated based on the input form the definition files (e.g. a <code>.scope</code> file).\n\t</li>\n\t<li>The customization level, where handwritten TypeScript code can be added, or used to replace parts of the generated code.</li>\n</ol>\n<p>It is our aim to provide approximately 80% of the required functionality of the work environment at the first two levels.</p>\n<Figure imageName={'documentation/layered-architecture2.png'} caption={'The Stacked Architecture'} figureNumber={1} />\n<p>\n\tFreon combines the definitions for each tool, together with the customized TypeScript code into one application, where the third level\n\tprecedes the second, and the second level precedes the first. For instance, the generated editor will per <a\n\t\thref=\"/Documentation/Creating_the_Metamodel/Language_Structure#concept\"><strong>concept</strong></a\n\t> in the language:\n</p>\n<ol>\n\t<li>use the <em>hand-made projection</em> from the Customization level, when this is present. If not, the editor will</li>\n\t<li>\n\t\tuse the <em>projection generated from the editor definition</em> from the Freon definition Level, when this definition is present. Finally,\n\t\twhen no definition is present, the editor will\n\t</li>\n\t<li>\n\t\tuse the <em>default projection</em> from the default level, the one generated when no <code>.edit</code> definition file is present.\n\t</li>\n</ol>\n<Figure imageName={'documentation/fall-through.png'} caption={'Projection Lookup for an AST Node'} figureNumber={2} />\n<p>\n\tThis stacking allows the language engineer to start quickly with a working (but somewhat rough) language environment and to refine the\n\ttoolset piece by piece on either the second or the third level. For this purpose, the <a\n\t\thref=\"/Documentation/Overview/Getting_Started#the-command-line-interface-8\">Command Line Interface</a\n\t> includes separate commands for generating the different fre-tools.\n</p>\n<SectionComponent tag=\"h2\" id=\"customizability-of-the-fre-tools-3\" bind:intersecting={visible[2]}\n\t>Customizability of the Fre-tools</SectionComponent\n>\n<p>This table gives an overview of the fre-tools, and shows how you can adjust them to your needs.</p>\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th align=\"left\">Workbench Part</th>\n\t\t\t<th align=\"center\">Has Default</th>\n\t\t\t<th align=\"center\">Level 2 Definition</th>\n\t\t\t<th align=\"center\">Level 3 Definition</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td align=\"left\">language structure</td>\n\t\t\t<td align=\"center\">no</td>\n\t\t\t<td align=\"center\">.ast</td>\n\t\t\t<td align=\"center\">no</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td align=\"left\">projectional editor</td>\n\t\t\t<td align=\"center\">yes</td>\n\t\t\t<td align=\"center\">.edit</td>\n\t\t\t<td align=\"center\">yes</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td align=\"left\">scope provider</td>\n\t\t\t<td align=\"center\">yes</td>\n\t\t\t<td align=\"center\">.scope</td>\n\t\t\t<td align=\"center\">yes</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td align=\"left\">validator</td>\n\t\t\t<td align=\"center\">yes</td>\n\t\t\t<td align=\"center\">.valid</td>\n\t\t\t<td align=\"center\">yes</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td align=\"left\">type provider</td>\n\t\t\t<td align=\"center\">yes</td>\n\t\t\t<td align=\"center\">.type</td>\n\t\t\t<td align=\"center\">yes</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td align=\"left\">interpreter</td>\n\t\t\t<td align=\"center\">no</td>\n\t\t\t<td align=\"center\">none available yet</td>\n\t\t\t<td align=\"center\">yes</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td align=\"left\">standard library</td>\n\t\t\t<td align=\"center\">yes</td>\n\t\t\t<td align=\"center\">.ast</td>\n\t\t\t<td align=\"center\">not yet</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td align=\"left\">parser</td>\n\t\t\t<td align=\"center\">yes</td>\n\t\t\t<td align=\"center\">.edit</td>\n\t\t\t<td align=\"center\">yes (using <a href=\"https://github.com/dhakehurst/net.akehurst.language\" target=\"_blank\">AGL</a>)</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td align=\"left\">unparser</td>\n\t\t\t<td align=\"center\">yes</td>\n\t\t\t<td align=\"center\">.edit</td>\n\t\t\t<td align=\"center\">not yet</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td align=\"left\">json exporter/importer</td>\n\t\t\t<td align=\"center\">yes</td>\n\t\t\t<td align=\"center\">.ast</td>\n\t\t\t<td align=\"center\">no</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td align=\"left\">visitor pattern implementation</td>\n\t\t\t<td align=\"center\">yes</td>\n\t\t\t<td align=\"center\">.ast</td>\n\t\t\t<td align=\"center\">can be extended</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td align=\"left\">web application</td>\n\t\t\t<td align=\"center\">yes</td>\n\t\t\t<td align=\"center\">none available</td>\n\t\t\t<td align=\"center\">can be changed or replaced</td>\n\t\t</tr>\n\t</tbody>\n</table>\n<p>If you are missing a specific tool or feature, please let us know through info AT freon4dsl.dev.</p>\n<SectionComponent tag=\"h2\" id=\"adding-a-fre-tool-4\" bind:intersecting={visible[3]}>Adding A Fre-tool</SectionComponent>\n<p>\n\tAs a convenience, Freon generates templates for your customization in the files <code\n\t\t>~/freon/editor/CustomYourLanguageNameProjection.ts</code\n\t>, <code>~/freon/editor/CustomYourLanguageNameActions.ts</code>, etc. (where <code>YourLanguageName</code> is a placeholder for the name of\n\tthe language as defined in your .ast file). You can use these files to add your own special elements.\n</p>\n<p>\n\tThe custom files can be renamed and/or put it in another location, or you can create your own set of custom projection files. In that\n\tcase, you need to adjust the file <code>~/freon/config/FreonConfiguration</code>.\n</p>\n<pre\n\tclass=\"language-ts\">{@html `<code class=\"language-ts\"><span class=\"token comment\">// Insurance/src/freon/config/FreonConfiguration.ts</span>\n\n<span class=\"token comment\">// Generated by the Freon Language Generator.</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> FreProjection<span class=\"token punctuation\">,</span> FreCombinedActions<span class=\"token punctuation\">,</span> FreTyper<span class=\"token punctuation\">,</span> FreStdlib<span class=\"token punctuation\">,</span> FreScoper <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@freon4dsl/core\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CustomInsuranceModelActions<span class=\"token punctuation\">,</span> CustomInsuranceModelProjection <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../editor/index.js\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CustomInsuranceModelScoper <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../scoper/index.js\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CustomInsuranceModelTyperPart <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../typer/CustomInsuranceModelTyperPart.js\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CustomInsuranceModelValidator <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../validator/index.js\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> CustomInsuranceModelStdlib <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../stdlib/CustomInsuranceModelStdlib.js\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> InsuranceModelCheckerInterface <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../validator/gen/index.js\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Class FreonConfiguration is the place where you can add all your customisations.\n * These will be used through the 'freonConfiguration' constant by any generated\n * part of your language environment.\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">FreonConfiguration</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// add your custom editor projections here</span>\n    customProjection<span class=\"token operator\">:</span> FreProjection<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">CustomInsuranceModelProjection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// add your custom editor actions here</span>\n    customActions<span class=\"token operator\">:</span> FreCombinedActions<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">CustomInsuranceModelActions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// add your custom validations here</span>\n    customValidations<span class=\"token operator\">:</span> InsuranceModelCheckerInterface<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">CustomInsuranceModelValidator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// add your custom scopers here</span>\n    customScopers<span class=\"token operator\">:</span> FreScoper<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">CustomInsuranceModelScoper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// add your custom type-providers here</span>\n    customTypers<span class=\"token operator\">:</span> FreTyper<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">CustomInsuranceModelTyperPart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// add extra predefined instances here</span>\n    customStdLibs<span class=\"token operator\">:</span> FreStdlib<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">CustomInsuranceModelStdlib</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> freonConfiguration <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FreonConfiguration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code>`}</pre>\n<SectionComponent tag=\"h2\" id=\"replacing-a-fre-tool-5\" bind:intersecting={visible[4]}>Replacing a Fre-tool</SectionComponent>\n<p>\n\tAll fre-tools can be <em>completely replaced</em> at the 3rd level, thereby completely disregarding the default and definition levels.\n\tThis is done by implementing their respective <a href=\"/Documentation/Under_the_Hood/FreTool_Interfaces\">interfaces</a>.\n</p>\n<p>For the parser and unparser this is currently the only way to customize. More information on the interfaces can be found here:</p>\n<ul>\n\t<li><a href=\"/Documentation/Under_the_Hood/FreTool_Interfaces#frescoper-3\">FreScoper</a></li>\n\t<li><a href=\"/Documentation/Under_the_Hood/FreTool_Interfaces#fretyper-5\">FreTyper</a></li>\n\t<li><a href=\"/Documentation/Under_the_Hood/FreTool_Interfaces#frevalidator-4\">FreValidator</a></li>\n\t<li><a href=\"/Documentation/Under_the_Hood/FreTool_Interfaces#frereader-6\">FreReader</a></li>\n\t<li><a href=\"/Documentation/Under_the_Hood/FreTool_Interfaces#frewriter-7\">FreWriter</a></li>\n\t<li><a href=\"/Documentation/Under_the_Hood/FreTool_Interfaces#frestdlib-8\">FreStdlib</a></li>\n</ul>\n\n<PrevNextSection {prevLink} {nextLink} />\n","<script lang=\"ts\">\n\timport { mySections } from './SectionStore.js';\n\timport type { Section } from '$lib/section/SectionType.js';\n\timport PageContent from './PageContent.svelte';\n\timport Breadcrumb from '$lib/breadcrumbs/Breadcrumb.svelte';\n\n\tlet showDetails: boolean = false;\n\t$: current = getCurrent($mySections);\n\n\tfunction getCurrent(internalSections: Section[]): number {\n\t\tlet previous = current;\n\t\tfor (let i = 0; i < internalSections.length; i++) {\n\t\t\tif (internalSections[i].visible) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn previous;\n\t}\n\tfunction toggleTocDetails() {\n\t\tshowDetails = !showDetails;\n\t}\n</script>\n\n<div class=\"page-main\">\n\t<div class=\"page-toc-small\">\n\t\t<p class=\"page-toc-small-title\">On this page ...</p>\n\t\t<button\n\t\t\tclass=\"page-toc-small-expand-button\"\n\t\t\ton:click={() => {\n\t\t\t\ttoggleTocDetails();\n\t\t\t}}\n\t\t>\n\t\t\t{#if showDetails}\n\t\t\t\t<img class=\"page-toc-small-img\" src=\"/icons/upload.png\" alt=\"arrow up\" />\n\t\t\t{:else}\n\t\t\t\t<img class=\"page-toc-small-img\" src=\"/icons/down-arrow.png\" alt=\"arrow down\" />\n\t\t\t{/if}\n\t\t</button>\n\t</div>\n\t{#if showDetails}\n\t\t<div class=\"toc-details\">\n\t\t\t<ul class=\"page-ul\">\n\t\t\t\t{#each $mySections as sec, index}\n\t\t\t\t\t<li class=\"page-toc-text\">\n\t\t\t\t\t\t<a class:page-visible={index === current} class:page-nonvisible={index !== current} href={sec.ref}>\n\t\t\t\t\t\t\t{sec.title}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t{/each}\n\t\t\t</ul>\n\t\t</div>\n\t{/if}\n\n\t<Breadcrumb />\n\t<PageContent />\n</div>\n\n<nav class=\"page-toc\">\n\t<h3 class=\"page-toc-title\">On this page</h3>\n\t<ul class=\"page-ul\">\n\t\t{#each $mySections as sec, index}\n\t\t\t<li class=\"page-toc-text\">\n\t\t\t\t<a class:page-visible={index === current} class:page-nonvisible={index !== current} href={sec.ref}>\n\t\t\t\t\t{sec.title}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t{/each}\n\t</ul>\n</nav>\n"],"names":["mySections","writable","ctx","sectioncomponent0_props","sectioncomponent1_props","sectioncomponent2_props","sectioncomponent3_props","sectioncomponent4_props","insert_hydration","target","p0","anchor","p1","blockquote","p3","ol0","p4","p5","ol1","p6","p7","table","p8","p9","p10","pre","p11","p12","ul","sectioncomponent0_changes","sectioncomponent1_changes","sectioncomponent2_changes","sectioncomponent3_changes","sectioncomponent4_changes","prevLink","nextLink","$mySections","visible","onMount","block","copyPrompt","copyPromptText","copyIcon","evt","copy","$$self","value","set_store_value","img","i","div","append_hydration","t0_value","attr","a","a_href_value","toggle_class","li","dirty","set_data","t0","create_if_block_1","create_if_block","div1","div0","p","button","nav","h3","showDetails","getCurrent","internalSections","previous","current","toggleTocDetails","$$invalidate"],"mappings":"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"}