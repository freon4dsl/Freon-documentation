{"version":3,"file":"56.DEGROYpY.js","sources":["../../../../../../src/routes/Documentation/Under_the_Hood/Core_Interfaces/SectionStore.ts","../../../../../../src/routes/Documentation/Under_the_Hood/Core_Interfaces/PageContent.svelte","../../../../../../src/routes/Documentation/Under_the_Hood/Core_Interfaces/+page.svelte"],"sourcesContent":["import { writable, type Writable } from 'svelte/store';\nimport type { Section } from '$lib/section/SectionType';\n\nexport const mySections: Writable<Section[]> = writable<Section[]>([]);\n","<script lang=\"ts\">\n\timport SectionComponent from '$lib/section/SectionComponent.svelte';\n\timport { mySections } from './SectionStore.js';\n\t$mySections = [\n\t\t{ title: 'The Freon Core Interfaces', visible: false, ref: '#the-freon-core-interfaces-1' },\n\t\t{ title: 'FreNode', visible: false, ref: '#frenode-2' },\n\t\t{ title: 'FreNamedElement', visible: false, ref: '#frenamedelement-3' },\n\t\t{ title: 'FreAction', visible: false, ref: '#freaction-4' },\n\t\t{ title: 'FreCustomAction', visible: false, ref: '#frecustomaction-5' }\n\t];\n\tlet visible: boolean[] = [];\n\t$: $mySections[0].visible = visible[0];\n\t$: $mySections[1].visible = visible[1];\n\t$: $mySections[2].visible = visible[2];\n\t$: $mySections[3].visible = visible[3];\n\t$: $mySections[4].visible = visible[4];\n\timport copy from 'copy-to-clipboard';\n\timport { onMount } from 'svelte';\n\n\t/**\n\t * This function will go through all the 'pre' elements\n\t * on the page and add a copy button to them.\n\t * Thanks to: https://slavbasharov.com/blog/adding-click-to-copy-code-markdown-blog\n\t */\n\tonMount(() => {\n\t\tconst codeBlocks = document.querySelectorAll('pre');\n\t\tcodeBlocks.forEach((block) => {\n\t\t\tconst copyPrompt = document.createElement('div');\n\t\t\tcopyPrompt.className = 'copy-prompt';\n\t\t\tconst copyPromptText = document.createElement('p');\n\t\t\tcopyPromptText.innerHTML = 'ðŸ‘† Click to copy';\n\t\t\tcopyPromptText.className = 'copy-prompt-p';\n\t\t\tconst copyIcon = document.createElement('img');\n\t\t\tcopyIcon.src = '/icons/copy-icon.svg';\n\t\t\tcopyIcon.className = 'copy-prompt-img';\n\t\t\tcopyPrompt.appendChild(copyIcon);\n\t\t\tcopyPrompt.appendChild(copyPromptText);\n\t\t\tblock.appendChild(copyPrompt);\n\t\t\tblock.querySelector('.copy-prompt > p').addEventListener('click', (evt) => {\n\t\t\t\tcopy(block.querySelector('code').textContent);\n\t\t\t\tblock.querySelector('.copy-prompt > p').innerHTML = 'Copied!';\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tblock.querySelector('.copy-prompt > p').innerHTML = 'ðŸ‘† Click to copy';\n\t\t\t\t}, 1000);\n\t\t\t});\n\t\t});\n\t});\n\timport PrevNextSection from '$lib/prevNext/PrevNextSection.svelte';\n\n\tlet prevLink = '/Documentation/Under_the_Hood/Editor_Framework/External_Component_Box_Types';\n\tlet nextLink = '/Documentation/Under_the_Hood/Editor_Interfaces';\n</script>\n\n<PrevNextSection {prevLink} {nextLink} />\n<SectionComponent tag=\"h1\" id=\"the-freon-core-interfaces-1\" bind:intersecting={visible[0]}>The Freon Core Interfaces</SectionComponent>\n<SectionComponent tag=\"h2\" id=\"frenode-2\" bind:intersecting={visible[1]}>FreNode</SectionComponent>\n<p>\n\tAs Freon uses the AST for projections and behavior, it needs to know about the type of elements in the AST. To allow Freon to work, each\n\telement type that occurs in the AST needs to implement the <code>FreElement</code> interface. This interface is kept as small as possible,\n\tto allow Freon to be used for any AST.\n</p>\n<pre class=\"language-ts\">{@html `<code class=\"language-ts\"><span class=\"token comment\">/* File: core/src/language/FreNode.ts */</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">FreElement</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">piId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">piLanguageConcept</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">piContainer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> FreContainerDescriptor<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">piIsModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">piIsUnit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">piIsExpression</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">piIsBinaryExpression</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code>`}</pre>\n<p>The main two elements in this interface are:</p>\n<ul>\n\t<li><code>piId()</code>, which should return en unique id for each element in the AST.</li>\n\t<li><code>piContainer()</code> which should return a descriptor for the container (parent) of an element in the AST.</li>\n</ul>\n<p>\n\tThe two functions <code>piIsExpression()</code> and <code>piIsBinaryExpression()</code> are only needed when your language contains\n\texpressions, as Freon includes special handling of expressions. To start with, these functions can be defined to simply return\n\t<code>false</code>.\n</p>\n<p>\n\tNote that Freon does not need to know anything about the structure of your language. No need to know the available element type, nor the\n\tproperties of en element type, nor anything else. This is by design, as Freon is not meant to be a full Language Workbench, but instead\n\tmeant to be used with multiple language workbenches , or none.\n</p>\n<SectionComponent tag=\"h2\" id=\"frenamedelement-3\" bind:intersecting={visible[2]}>FreNamedElement</SectionComponent>\n<p>\n\tAn object that implements <code>FreNamedElement</code> can be a node in a model AST, similar to xref:element-interface[<code\n\t\t>FreElement</code\n\t>] implementations. The difference is that <code>FreNamedElements</code> have a name property.\n</p>\n<pre\n\tclass=\"language-ts\">{@html `<code class=\"language-ts\"><span class=\"token comment\">/* File: core/src/language/FreNamedElement.ts  */</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">FreNamedElement</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">FreElement</span> <span class=\"token punctuation\">&#123;</span>\n\tname<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code>`}</pre>\n<SectionComponent tag=\"h2\" id=\"freaction-4\" bind:intersecting={visible[3]}>FreAction</SectionComponent>\n<pre class=\"language-ts\">{@html `<code class=\"language-ts\"><span class=\"token comment\">/* File: core/src/language/FreAction.ts  */</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FreAction</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">/**\n\t * The trigger to activate this behavior\n\t */</span>\n\ttrigger<span class=\"token operator\">:</span> FreTriggerType<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/**\n\t * The box roles in which this trigger is active\n\t */</span>\n\tactiveInBoxRoles<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/**\n\t * Optional callback function that returns whether the trigger is applicable for the specific box.\n\t */</span>\n\tisApplicable<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>box<span class=\"token operator\">:</span> Box<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/**\n\t * The role of the box that should be selected after the action has been executing.\n\t */</span>\n\tboxRoleToSelect<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/**\n\t * The caret position where the cursor should be positioned after the action has been executed.\n\t * Only applicable if the selected box is a TextBox.\n\t */</span>\n\tcaretPosition<span class=\"token operator\">?</span><span class=\"token operator\">:</span> FreCaret<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/**\n\t * The property name of the reference for which this is a shortcut.\n\t */</span>\n\treferenceShortcut<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ReferenceShortcut<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/**\n\t * Execute the action\n\t * @param box       The selected box on which this action is executed\n\t * @param trigger   The trigger that causes this action to execute\n\t * @param editor    The editor\n\t * @param index     The index in the list, if there is any\n\t */</span>\n\t<span class=\"token keyword\">abstract</span> <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>box<span class=\"token operator\">:</span> Box<span class=\"token punctuation\">,</span> trigger<span class=\"token operator\">:</span> FreTriggerUse<span class=\"token punctuation\">,</span> editor<span class=\"token operator\">:</span> FreEditor<span class=\"token punctuation\">,</span> index<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> FrePostAction<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code>`}</pre>\n<SectionComponent tag=\"h2\" id=\"frecustomaction-5\" bind:intersecting={visible[4]}>FreCustomAction</SectionComponent>\n<pre\n\tclass=\"language-ts\">{@html `<code class=\"language-ts\"><span class=\"token comment\">/* File: core/src/language/FreCustomAction.ts  */</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token constant\">AST</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../../change-manager/index.js\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> FreUtils <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../../util/index.js\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Box <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../boxes/index.js\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> FreEditor <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../FreEditor.js\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>\n    FreAction<span class=\"token punctuation\">,</span>\n    CustomAction<span class=\"token punctuation\">,</span>\n    FreTriggerUse<span class=\"token punctuation\">,</span>\n    FrePostAction<span class=\"token punctuation\">,</span>\n    triggerTypeToString<span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">ACTION_LOGGER</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./internal.js\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FreCustomAction</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">FreAction</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">static</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span>initializer<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Partial<span class=\"token operator\">&lt;</span>FreCustomAction<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FreCustomAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        FreUtils<span class=\"token punctuation\">.</span><span class=\"token function\">initializeObject</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> initializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">/**\n     * The action function that will be performed\n     */</span>\n    action<span class=\"token operator\">:</span> CustomAction<span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n     * @see FreAction.execute\n     * @param box\n     * @param trigger\n     * @param editor\n     */</span>\n    override <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>box<span class=\"token operator\">:</span> Box<span class=\"token punctuation\">,</span> trigger<span class=\"token operator\">:</span> FreTriggerUse<span class=\"token punctuation\">,</span> editor<span class=\"token operator\">:</span> FreEditor<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> FrePostAction <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token constant\">ACTION_LOGGER</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FreCustomCommand: trigger [\"</span> <span class=\"token operator\">+</span> <span class=\"token function\">triggerTypeToString</span><span class=\"token punctuation\">(</span>trigger<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token constant\">ACTION_LOGGER</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FreCustomCommand: action [\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>action <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> selected\n        <span class=\"token constant\">AST</span><span class=\"token punctuation\">.</span><span class=\"token function\">change</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            selected <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span><span class=\"token function\">action</span><span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">,</span> <span class=\"token function\">triggerTypeToString</span><span class=\"token punctuation\">(</span>trigger<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> editor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span>selected<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span>self<span class=\"token punctuation\">.</span>boxRoleToSelect<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token constant\">ACTION_LOGGER</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FreCustomCommand select \"</span> <span class=\"token operator\">+</span> box<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">freLanguageConcept</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" box \"</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>boxRoleToSelect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    editor<span class=\"token punctuation\">.</span><span class=\"token function\">selectElementBox</span><span class=\"token punctuation\">(</span>selected<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>boxRoleToSelect<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>caretPosition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">// Default: select the first editable child of the selected element</span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token constant\">ACTION_LOGGER</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"editor.selectFirstEditableChildBox(selected) \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    editor<span class=\"token punctuation\">.</span><span class=\"token function\">selectFirstEditableChildBox</span><span class=\"token punctuation\">(</span>selected<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>boxRoleToSelect <span class=\"token operator\">===</span> <span class=\"token string\">\"REFERENCE\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">const</span> index <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">[</span>box<span class=\"token punctuation\">.</span>propertyName<span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n                <span class=\"token comment\">// const empty = editor.findBoxForNode(box.node, box.propertyName)</span>\n                editor<span class=\"token punctuation\">.</span><span class=\"token function\">selectElement</span><span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">,</span> box<span class=\"token punctuation\">.</span>propertyName<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span>\n                editor<span class=\"token punctuation\">.</span><span class=\"token function\">selectNextLeaf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token constant\">ACTION_LOGGER</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">&#96;</span><span class=\"token string\">REFERENCE node </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>box<span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">freId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\"> prop </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>box<span class=\"token punctuation\">.</span>propertyName<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\"> index </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>index<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">&#96;</span></span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">// return EMPTY_POST_ACTION;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span></code>`}</pre>\n\n<PrevNextSection {prevLink} {nextLink} />\n","<script lang=\"ts\">\n\timport { mySections } from './SectionStore.js';\n\timport type { Section } from '$lib/section/SectionType.js';\n\timport PageContent from './PageContent.svelte';\n\timport Breadcrumb from '$lib/breadcrumbs/Breadcrumb.svelte';\n\n\tlet showDetails: boolean = false;\n\t$: current = getCurrent($mySections);\n\n\tfunction getCurrent(internalSections: Section[]): number {\n\t\tlet previous = current;\n\t\tfor (let i = 0; i < internalSections.length; i++) {\n\t\t\tif (internalSections[i].visible) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn previous;\n\t}\n\tfunction toggleTocDetails() {\n\t\tshowDetails = !showDetails;\n\t}\n</script>\n\n<div class=\"page-main\">\n\t<div class=\"page-toc-small\">\n\t\t<p class=\"page-toc-small-title\">On this page ...</p>\n\t\t<button\n\t\t\tclass=\"page-toc-small-expand-button\"\n\t\t\ton:click={() => {\n\t\t\t\ttoggleTocDetails();\n\t\t\t}}\n\t\t>\n\t\t\t{#if showDetails}\n\t\t\t\t<img class=\"page-toc-small-img\" src=\"/icons/upload.png\" alt=\"arrow up\" />\n\t\t\t{:else}\n\t\t\t\t<img class=\"page-toc-small-img\" src=\"/icons/down-arrow.png\" alt=\"arrow down\" />\n\t\t\t{/if}\n\t\t</button>\n\t</div>\n\t{#if showDetails}\n\t\t<div class=\"toc-details\">\n\t\t\t<ul class=\"page-ul\">\n\t\t\t\t{#each $mySections as sec, index}\n\t\t\t\t\t<li class=\"page-toc-text\">\n\t\t\t\t\t\t<a class:page-visible={index === current} class:page-nonvisible={index !== current} href={sec.ref}>\n\t\t\t\t\t\t\t{sec.title}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t{/each}\n\t\t\t</ul>\n\t\t</div>\n\t{/if}\n\n\t<Breadcrumb />\n\t<PageContent />\n</div>\n\n<nav class=\"page-toc\">\n\t<h3 class=\"page-toc-title\">On this page</h3>\n\t<ul class=\"page-ul\">\n\t\t{#each $mySections as sec, index}\n\t\t\t<li class=\"page-toc-text\">\n\t\t\t\t<a class:page-visible={index === current} class:page-nonvisible={index !== current} href={sec.ref}>\n\t\t\t\t\t{sec.title}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t{/each}\n\t</ul>\n</nav>\n"],"names":["mySections","writable","ctx","sectioncomponent0_props","sectioncomponent1_props","sectioncomponent2_props","sectioncomponent3_props","sectioncomponent4_props","insert_hydration","target","p0","anchor","pre0","p1","ul","p2","p3","p4","pre1","pre2","pre3","sectioncomponent0_changes","sectioncomponent1_changes","sectioncomponent2_changes","sectioncomponent3_changes","sectioncomponent4_changes","prevLink","nextLink","$mySections","visible","onMount","block","copyPrompt","copyPromptText","copyIcon","evt","copy","$$self","value","set_store_value","img","div","append_hydration","i","t0_value","attr","a","a_href_value","toggle_class","li","dirty","set_data","t0","create_if_block_1","create_if_block","div1","div0","p","button","nav","h3","showDetails","getCurrent","internalSections","previous","current","toggleTocDetails","$$invalidate"],"mappings":"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"}