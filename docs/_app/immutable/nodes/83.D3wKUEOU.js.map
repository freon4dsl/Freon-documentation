{"version":3,"file":"83.D3wKUEOU.js","sources":["../../../../../../src/routes/Tutorial/How_to_Handle_Typing/SectionStore.ts","../../../../../../src/routes/Tutorial/How_to_Handle_Typing/PageContent.svelte","../../../../../../src/routes/Tutorial/How_to_Handle_Typing/+page.svelte"],"sourcesContent":["import { writable, type Writable } from 'svelte/store';\nimport type { Section } from '$lib/section/SectionType';\n\nexport const mySections: Writable<Section[]> = writable<Section[]>([]);\n","<script lang=\"ts\">\n\timport SectionComponent from '$lib/section/SectionComponent.svelte';\n\timport { mySections } from './SectionStore.js';\n\t$mySections = [\n\t\t{ title: 'How to Handle Typing', visible: false, ref: '#how-to-handle-typing-1' },\n\t\t{ title: 'What are Types, and why should you care?', visible: false, ref: '#what-are-types-and-why-should-you-care-2' },\n\t\t{ title: 'How does a concept become a Type?', visible: false, ref: '#how-does-a-concept-become-a-type-3' }\n\t];\n\tlet visible: boolean[] = [];\n\t$: $mySections[0].visible = visible[0];\n\t$: $mySections[1].visible = visible[1];\n\t$: $mySections[2].visible = visible[2];\n\timport copy from 'copy-to-clipboard';\n\timport { onMount } from 'svelte';\n\n\t/**\n\t * This function will go through all the 'pre' elements\n\t * on the page and add a copy button to them.\n\t * Thanks to: https://slavbasharov.com/blog/adding-click-to-copy-code-markdown-blog\n\t */\n\tonMount(() => {\n\t\tconst codeBlocks = document.querySelectorAll('pre');\n\t\tcodeBlocks.forEach((block) => {\n\t\t\tconst copyPrompt = document.createElement('div');\n\t\t\tcopyPrompt.className = 'copy-prompt';\n\t\t\tconst copyPromptText = document.createElement('p');\n\t\t\tcopyPromptText.innerHTML = 'ðŸ‘† Click to copy';\n\t\t\tcopyPromptText.className = 'copy-prompt-p';\n\t\t\tconst copyIcon = document.createElement('img');\n\t\t\tcopyIcon.src = '/icons/copy-icon.svg';\n\t\t\tcopyIcon.className = 'copy-prompt-img';\n\t\t\tcopyPrompt.appendChild(copyIcon);\n\t\t\tcopyPrompt.appendChild(copyPromptText);\n\t\t\tblock.appendChild(copyPrompt);\n\t\t\tblock.querySelector('.copy-prompt > p').addEventListener('click', (evt) => {\n\t\t\t\tcopy(block.querySelector('code').textContent);\n\t\t\t\tblock.querySelector('.copy-prompt > p').innerHTML = 'Copied!';\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tblock.querySelector('.copy-prompt > p').innerHTML = 'ðŸ‘† Click to copy';\n\t\t\t\t}, 1000);\n\t\t\t});\n\t\t});\n\t});\n\timport PrevNextSection from '$lib/prevNext/PrevNextSection.svelte';\n\n\tlet prevLink = '/Tutorial/More_Scoping';\n\tlet nextLink = '/Tutorial/Validating_the_model';\n\n\timport Figure from '$lib/figures/Figure.svelte';\n</script>\n\n<PrevNextSection {prevLink} {nextLink} />\n\n<SectionComponent tag=\"h1\" id=\"how-to-handle-typing-1\" bind:intersecting={visible[0]}>How to Handle Typing</SectionComponent>\n<p>In this lesson you will learn how to add types to the concepts in your DSL.</p>\n<SectionComponent tag=\"h2\" id=\"what-are-types-and-why-should-you-care-2\" bind:intersecting={visible[1]}\n\t>What are <em>Types</em>, and why should you care?</SectionComponent\n>\n<p>\n\tIn Freon types are normal concepts, but usually types are not projected. They, normally, do not appear in .edit files. So, why are they\n\timportant? Letâ€™s look at the screenshot below.\n</p>\n<Figure imageName={'tutorial/Tutorial-lesson8-screenshot1.png'} caption={'Undetected errors in grading expressions'} figureNumber={1} />\n<p>\n\tDo you see the grading expression? There is an equals expression of <code>Number of Correct Answers</code>, something that clearly should\n\tresult in an integer value, and <code>Answer to lollipops2 is correct</code>, which is obviously some boolean value. The answer is\n\tcorrect, or not. So we are comparing an integer number with a boolean value. In this case, it might be obvious that there is a mistake,\n\tbut in more complex expressions, you might want to give the user some feedback that this is not the way to go.\n</p>\n<p>\n\tSo, letâ€™s introduce a Type concept. Letâ€™s keep it simple for now, but keep in mind that we might want to extend our typings. Therefore, we\n\tmake <code>Type</code> an interface, and have one concept that implements it: <code>PrimitiveType</code>, which is a simple enumeration.\n\tWe have also added an <code>ANY</code> instance, which represents an amorphous type that everything can conform to, like\n\t<code>Object</code>. There is no reason for this yet, we just want to be prepared for extensions. We add the following to our\n\t<code>edu-main.ast</code> file.\n</p>\n<pre class=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Education/lesson8-defs/edu-main.ast#L19-L27\n</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Type</span> &#123;\n    name: <span class=\"token builtin\">identifier</span>;\n&#125;\n\n<span class=\"token keyword\">limited</span> PrimitiveType <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Type</span> &#123;\n    Integer;\n    Boolean;\n    ANY;\n&#125;</code>`}</pre>\n<SectionComponent tag=\"h2\" id=\"how-does-a-concept-become-a-type-3\" bind:intersecting={visible[2]}\n\t>How does a concept become a Type?</SectionComponent\n>\n<p>\n\tNow we have defined concepts, that will act as types in our DSL, there must be a way to tell Freon which concepts are types. And â€¦, Freon\n\tneeds to know which concepts are <em>typed</em>, that is, which concepts have a type associated with it. Fortunately, this is simple.\n\t(Sorry, it is a bit lame to keep on saying that things are easy. Canâ€™t help it, they really are.\n\t<img src=\"/icons/smile.png\" alt=\"SMILE\" width=\"20\" height=\"20\" /> )\n</p>\n<p>\n\tLetâ€™s create yet another file, called <code>edu-scoring.type</code>, and add the following lines to it. They mean that all instances of\n\tthe concept <code>Type</code> are types, and that all instances of <code>ScoreExpression</code> have a type.\n</p>\n<pre\n\tclass=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Education/lesson8-defs/edu-scoring.type#L1-L5\n</span>\ntyper\n\n<span class=\"token class-name\">istype</span> &#123; Type &#125;\n\n<span class=\"token class-name\">hastype</span> &#123; ScoreExpression &#125;</code>`}</pre>\n<p>\n\tBut what about the NrOfCorrectAnswers concept? How do we express which type to associate with instances of this concept? And what about\n\tthe other concepts that inherit from <code>ScoreExpression</code>? Letâ€™s not beat around the bush. This is how.\n</p>\n<pre\n\tclass=\"language-freon\">{@html `<code class=\"language-freon\"><span class=\"token comment\">// Education/lesson8-defs/edu-scoring.type#L7-L24\n</span>\n<span class=\"token class-name\">QuestionReference</span> &#123;\n    <span class=\"token keyword\">infertype</span> PrimitiveType:<span class=\"token class-name\">Boolean</span>;\n&#125;\n<span class=\"token class-name\">NrOfCorrectAnswers</span> &#123;\n    <span class=\"token keyword\">infertype</span> PrimitiveType:<span class=\"token class-name\">Integer</span>;\n&#125;\n<span class=\"token class-name\">NumberLiteralExpression</span> &#123;\n    <span class=\"token keyword\">infertype</span> PrimitiveType:<span class=\"token class-name\">Integer</span>;\n&#125;\n<span class=\"token class-name\">OrExpression</span> &#123;\n    <span class=\"token keyword\">infertype</span> PrimitiveType:<span class=\"token class-name\">Boolean</span>;\n&#125;\n<span class=\"token class-name\">AndExpression</span> &#123;\n    <span class=\"token keyword\">infertype</span> PrimitiveType:<span class=\"token class-name\">Boolean</span>;\n&#125;\n<span class=\"token class-name\">ComparisonExpression</span> &#123;\n    <span class=\"token keyword\">infertype</span> PrimitiveType:<span class=\"token class-name\">Boolean</span>;\n&#125;</code>`}</pre>\n<p>In the next lesson we will show how to use the typings to validate the grading expressions.</p>\n\n<PrevNextSection {prevLink} {nextLink} />\n","<script lang=\"ts\">\n\timport { mySections } from './SectionStore.js';\n\timport type { Section } from '$lib/section/SectionType.js';\n\timport PageContent from './PageContent.svelte';\n\timport Breadcrumb from '$lib/breadcrumbs/Breadcrumb.svelte';\n\n\tlet showDetails: boolean = false;\n\t$: current = getCurrent($mySections);\n\n\tfunction getCurrent(internalSections: Section[]): number {\n\t\tlet previous = current;\n\t\tfor (let i = 0; i < internalSections.length; i++) {\n\t\t\tif (internalSections[i].visible) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn previous;\n\t}\n\tfunction toggleTocDetails() {\n\t\tshowDetails = !showDetails;\n\t}\n</script>\n\n<div class=\"page-main\">\n\t<div class=\"page-toc-small\">\n\t\t<p class=\"page-toc-small-title\">On this page ...</p>\n\t\t<button\n\t\t\tclass=\"page-toc-small-expand-button\"\n\t\t\ton:click={() => {\n\t\t\t\ttoggleTocDetails();\n\t\t\t}}\n\t\t>\n\t\t\t{#if showDetails}\n\t\t\t\t<img class=\"page-toc-small-img\" src=\"/icons/upload.png\" alt=\"arrow up\" />\n\t\t\t{:else}\n\t\t\t\t<img class=\"page-toc-small-img\" src=\"/icons/down-arrow.png\" alt=\"arrow down\" />\n\t\t\t{/if}\n\t\t</button>\n\t</div>\n\t{#if showDetails}\n\t\t<div class=\"toc-details\">\n\t\t\t<ul class=\"page-ul\">\n\t\t\t\t{#each $mySections as sec, index}\n\t\t\t\t\t<li class=\"page-toc-text\">\n\t\t\t\t\t\t<a class:page-visible={index === current} class:page-nonvisible={index !== current} href={sec.ref}>\n\t\t\t\t\t\t\t{sec.title}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t{/each}\n\t\t\t</ul>\n\t\t</div>\n\t{/if}\n\n\t<Breadcrumb />\n\t<PageContent />\n</div>\n\n<nav class=\"page-toc\">\n\t<h3 class=\"page-toc-title\">On this page</h3>\n\t<ul class=\"page-ul\">\n\t\t{#each $mySections as sec, index}\n\t\t\t<li class=\"page-toc-text\">\n\t\t\t\t<a class:page-visible={index === current} class:page-nonvisible={index !== current} href={sec.ref}>\n\t\t\t\t\t{sec.title}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t{/each}\n\t</ul>\n</nav>\n"],"names":["mySections","writable","insert_hydration","target","em","anchor","ctx","sectioncomponent0_props","sectioncomponent1_props","sectioncomponent2_props","p0","p1","p2","p3","pre0","p4","p5","pre1","p6","pre2","p7","sectioncomponent0_changes","sectioncomponent1_changes","sectioncomponent2_changes","prevLink","nextLink","$mySections","visible","onMount","block","copyPrompt","copyPromptText","copyIcon","evt","copy","$$self","value","set_store_value","img","i","div","append_hydration","ul","t0_value","attr","a","a_href_value","toggle_class","li","dirty","set_data","t0","create_if_block_1","create_if_block","div1","div0","p","button","nav","h3","showDetails","getCurrent","internalSections","previous","current","toggleTocDetails","$$invalidate"],"mappings":"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"}