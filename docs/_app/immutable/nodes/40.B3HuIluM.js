import{s as Sn,A as ze,a as f,e as m,H as ne,f as d,b as h,m as w,d as E,F as se,g as s,h as y,i,B as Be,v as zn,x as re,w as os,t as C,o as P,n as tt,j as q,C as is,D as Bn,E as ue,q as Un,p as Fn}from"../chunks/scheduler.CIEH-92L.js";import{S as Rn,i as Wn,e as Ue,c as H,a as x,m as M,t as D,b as A,d as O}from"../chunks/index.HLF2pGCU.js";import{e as Vt}from"../chunks/each.BLebZWAa.js";import{w as ls}from"../chunks/index.bxqR-5-s.js";import{P as Hn,S as Fe,c as cs,B as ps}from"../chunks/index.D1zh88jY.js";import{N as Re}from"../chunks/Note.DEjaTDAW.js";const J=ls([]);function rs(l){let n;return{c(){n=C("Projections")},l(t){n=P(t,"Projections")},m(t,o){i(t,n,o)},d(t){t&&s(n)}}}function us(l){let n;return{c(){n=C("Including Properties")},l(t){n=P(t,"Including Properties")},m(t,o){i(t,n,o)},d(t){t&&s(n)}}}function fs(l){let n;return{c(){n=C("Only direct properties are allowed")},l(t){n=P(t,"Only direct properties are allowed")},m(t,o){i(t,n,o)},d(t){t&&s(n)}}}function ds(l){let n,t,o="self.declaredType.name",c;return{c(){n=C(`Only the properties that are directly owned by the concept or interface are allowed. For instance,
		`),t=m("code"),t.textContent=o,c=C(" is not a valid property projection.")},l(p){n=P(p,`Only the properties that are directly owned by the concept or interface are allowed. For instance,
		`),t=h(p,"CODE",{"data-svelte-h":!0}),w(t)!=="svelte-16xq0kr"&&(t.textContent=o),c=P(p," is not a valid property projection.")},m(p,k){i(p,n,k),i(p,t,k),i(p,c,k)},p:tt,d(p){p&&(s(n),s(t),s(c))}}}function ms(l){let n,t="self",o;return{c(){n=m("code"),n.textContent=t,o=C(" is optional")},l(c){n=h(c,"CODE",{"data-svelte-h":!0}),w(n)!=="svelte-16oo9ze"&&(n.textContent=t),o=P(c," is optional")},m(c,p){i(c,n,p),i(c,o,p)},p:tt,d(c){c&&(s(n),s(o))}}}function hs(l){let n,t,o="self",c;return{c(){n=C("Because you may only use direct properties, the prefix "),t=m("code"),t.textContent=o,c=C(" may be omitted.")},l(p){n=P(p,"Because you may only use direct properties, the prefix "),t=h(p,"CODE",{"data-svelte-h":!0}),w(t)!=="svelte-16oo9ze"&&(t.textContent=o),c=P(p," may be omitted.")},m(p,k){i(p,n,k),i(p,t,k),i(p,c,k)},p:tt,d(p){p&&(s(n),s(t),s(c))}}}function ks(l){let n;return{c(){n=C("One property, one occurrence in the editor")},l(t){n=P(t,"One property, one occurrence in the editor")},m(t,o){i(t,n,o)},d(t){t&&s(n)}}}function $s(l){let n;return{c(){n=C(`Unfortunately, it is not possible to show the same property of a concept twice in the same editor. The tooling we use to keep the state
		of the underlying model in sync with the view in the running editor does not allow us to do this.`)},l(t){n=P(t,`Unfortunately, it is not possible to show the same property of a concept twice in the same editor. The tooling we use to keep the state
		of the underlying model in sync with the view in the running editor does not allow us to do this.`)},m(t,o){i(t,n,o)},d(t){t&&s(n)}}}function _s(l){let n;return{c(){n=C("Using Named Projections")},l(t){n=P(t,"Using Named Projections")},m(t,o){i(t,n,o)},d(t){t&&s(n)}}}function gs(l){let n;return{c(){n=C("Lists")},l(t){n=P(t,"Lists")},m(t,o){i(t,n,o)},d(t){t&&s(n)}}}function vs(l){let n;return{c(){n=C("Newlines in terminator or separator are ignored")},l(t){n=P(t,"Newlines in terminator or separator are ignored")},m(t,o){i(t,n,o)},d(t){t&&s(n)}}}function ws(l){let n,t,o="horizontal",c,p,k="vertical",r;return{c(){n=C("A terminator or separator should not contain a newline character. Horizontal or vertical layout is purely determined by the keywords "),t=m("code"),t.textContent=o,c=C(`
		and `),p=m("code"),p.textContent=k,r=C(".")},l(u){n=P(u,"A terminator or separator should not contain a newline character. Horizontal or vertical layout is purely determined by the keywords "),t=h(u,"CODE",{"data-svelte-h":!0}),w(t)!=="svelte-3ynsnj"&&(t.textContent=o),c=P(u,`
		and `),p=h(u,"CODE",{"data-svelte-h":!0}),w(p)!=="svelte-1bgqaly"&&(p.textContent=k),r=P(u,".")},m(u,g){i(u,n,g),i(u,t,g),i(u,c,g),i(u,p,g),i(u,r,g)},p:tt,d(u){u&&(s(n),s(t),s(c),s(p),s(r))}}}function bs(l){let n;return{c(){n=C("Tables")},l(t){n=P(t,"Tables")},m(t,o){i(t,n,o)},d(t){t&&s(n)}}}function ys(l){let n;return{c(){n=C(`Note that you only need to include one table projection for the elements for both column and row based tables. Freon will swap the
		entries when needed.`)},l(t){n=P(t,`Note that you only need to include one table projection for the elements for both column and row based tables. Freon will swap the
		entries when needed.`)},m(t,o){i(t,n,o)},d(t){t&&s(n)}}}function Cs(l){let n;return{c(){n=C("Properties within a table are displayed according to their own projection")},l(t){n=P(t,"Properties within a table are displayed according to their own projection")},m(t,o){i(t,n,o)},d(t){t&&s(n)}}}function Ps(l){let n,t,o="name",c,p,k="maximumPayout",r,u,g="EuroLiteral",N;return{c(){n=C("Each of the properties in a table is displayed using its own projection. In this example, "),t=m("code"),t.textContent=o,c=C(` is a string, and will be
		displayed as an editable text, and `),p=m("code"),p.textContent=k,r=C(" is a "),u=m("code"),u.textContent=g,N=C(`
		Note that the properties can be lists themselves, which can be displayed as lists or tables.`)},l(v){n=P(v,"Each of the properties in a table is displayed using its own projection. In this example, "),t=h(v,"CODE",{"data-svelte-h":!0}),w(t)!=="svelte-1x67wg7"&&(t.textContent=o),c=P(v,` is a string, and will be
		displayed as an editable text, and `),p=h(v,"CODE",{"data-svelte-h":!0}),w(p)!=="svelte-19ss4r2"&&(p.textContent=k),r=P(v," is a "),u=h(v,"CODE",{"data-svelte-h":!0}),w(u)!=="svelte-tjyjty"&&(u.textContent=g),N=P(v,`
		Note that the properties can be lists themselves, which can be displayed as lists or tables.`)},m(v,$){i(v,n,$),i(v,t,$),i(v,c,$),i(v,p,$),i(v,r,$),i(v,u,$),i(v,N,$)},p:tt,d(v){v&&(s(n),s(t),s(c),s(p),s(r),s(u),s(N))}}}function Ts(l){let n;return{c(){n=C("Whitespace in headers is ignored")},l(t){n=P(t,"Whitespace in headers is ignored")},m(t,o){i(t,n,o)},d(t){t&&s(n)}}}function Ls(l){let n;return{c(){n=C("The whitespace between the headers is not needed. However, for clarity, it is good style to align the column/row-separators.")},l(t){n=P(t,"The whitespace between the headers is not needed. However, for clarity, it is good style to align the column/row-separators.")},m(t,o){i(t,n,o)},d(t){t&&s(n)}}}function js(l){let n;return{c(){n=C("Optional Projections")},l(t){n=P(t,"Optional Projections")},m(t,o){i(t,n,o)},d(t){t&&s(n)}}}function Es(l){let n;return{c(){n=C("Inherited Projections")},l(t){n=P(t,"Inherited Projections")},m(t,o){i(t,n,o)},d(t){t&&s(n)}}}function Is(l){let n,t,o,c,p,k,r=`A projection is defined using angular brackets, in a style similar to Markdown. The appearance of the definition closely resembles the
	resulting output. Everything within square brackets (<code>[]</code>), except for parts enclosed in <code>\${}</code>, is
	interpreted literally, including the indentation. For more details, refer to the information on
	<a href="/Documentation/Defining_an_Editor/Indentation">Indentation</a>.`,u,g,N,v=`<code class="language-freon"><span class="token comment">// Insurance/src/defs/editor-indentation.edit#L6-L14
</span>
<span class="token class-name">Text</span> &#123;
<span class="token punctuation">[</span>
This is
        literal <span class="token keyword">text</span>
      that is projected <span class="token keyword">in</span> the
                <span class="token keyword">editor</span>
  for every <span class="token keyword">concept</span> <span class="token class-name">of</span> <span class="token keyword">type</span> Text.
<span class="token punctuation">]</span>
&#125;</code>`,$,T,S,R,z,W="When defining a projection for a concept or interface, you will likely need to include its properties. This is done using the special\n	notation <code>${}</code>, which instructs Freon to include a property according to the projection defined for its type.",K,V,Ke="For example, given the following metamodel:",fe,U,B,I=`<code class="language-freon"><span class="token comment">// Insurance/src/defs/language-main.ast#L22-L32
</span>
<span class="token comment">// A BaseProduct defines all the different elements ('parts') that can be
</span><span class="token comment">// used to create a marketable InsuranceProduct.
</span><span class="token keyword">concept</span> <span class="token class-name">BaseProduct</span> &#123;
    name: <span class="token builtin">identifier</span>;               <span class="token comment">// internal name
</span>    isUnderConstruction: <span class="token builtin">boolean</span>;   <span class="token comment">// defines whether this base product is still 'raw'
</span>    theme: <span class="token class-name">InsuranceTheme</span>;          <span class="token comment">// the 'kind' of insurance
</span>    parts: <span class="token class-name">InsurancePart</span><span class="token punctuation">[</span><span class="token punctuation">]</span>;         <span class="token comment">// all parts of this product
</span>    <span class="token comment">// The following properties are present to show the different options for displaying booleans.
</span>    isApprovedLevel1: <span class="token builtin">boolean</span>;
    isApprovedLevel2: <span class="token builtin">boolean</span>;
    isApprovedLevel3: <span class="token builtin">boolean</span>;</code>`,G,L,_=`consider the property <code>self.body</code>, which is of type <code>DocuExpression</code>. It will be displayed based on the projection
	defined for <code>DocuExpression</code>. Meanwhile, <code>self.declaredType</code> is a property of the abstract type
	<code>DocuType</code>. This property will be projected according to the definition of the specific (non-abstract) subtype of
	<code>DocuType</code> encountered at runtime.`,j,b,Y,We=`<code class="language-freon"><span class="token comment">// Insurance/src/defs/editor-main-default.edit#L38-L49
</span>
<span class="token class-name">InsuranceProduct</span> &#123;<span class="token punctuation">[</span>
    Insurance Product $&#123;<span class="token function">name</span>&#125; ( public name: $&#123;<span class="token function">productName</span>&#125; ) USES $&#123;<span class="token function">basedOn <span class="token keyword">horizontal</span> <span class="token keyword">separator</span>[, ]</span>&#125;
        Themes: $&#123;<span class="token function">themes <span class="token keyword">horizontal</span> <span class="token keyword">separator</span>[, ]</span>&#125;
        Premium: $&#123;<span class="token function">advertisedPremium</span>&#125; per $&#123;<span class="token function">nrPremiumDays</span>&#125;
        Insured risks:
            $&#123;<span class="token function">parts <span class="token keyword">vertical</span> <span class="token keyword">terminator</span> [;]</span>&#125;
        Calculation
            <span class="token punctuation">[</span>? Risk adjusted by = $&#123;<span class="token function">riskAdjustment</span>&#125; <span class="token punctuation">]</span>
            calculated premium: $&#123;<span class="token function">calculation</span>&#125;
        <span class="token punctuation">[</span>?Helper functions:
            $&#123;<span class="token function">helpers <span class="token keyword">vertical</span></span>&#125;<span class="token punctuation">]</span>
<span class="token punctuation">]</span>&#125;</code>`,de,F,nt,ae,st,oe,at,Q,Gt,ot,me,tn=`By default, a property you include will be displayed using the projection defined for its type. Freon determines this projection based on
	the precedence specified in the <code>.edit</code> files.`,it,he,nn=`If you want to use a specific projection from a different editor, you can use a <strong>named property projection</strong>. In this case,
	Freon will look for the projection in the editor with the specified name.`,lt,ke,sn=`In the next example, the projection for <code>self.parts:comments</code> will first be searched in the editor named <code>comments</code>.
	If it is not found there, Freon will fall back to the standard precedence order of projections.`,ct,$e,pt,Vn=`<code class="language-freon"><span class="token comment">// Insurance/src/defs/editor-named-proj.edit#L3-L8
</span>
<span class="token class-name">BaseProduct</span> &#123;<span class="token punctuation">[</span>
    <span class="token comment">/* In this projection 'self.parts' is always shown according to the projection */</span>
    <span class="token comment">/* defined for concept InsurancePart in the editor 'comments'.                 */</span>
    Base Products $&#123;<span class="token function"><span class="token variable">self</span>.name</span>&#125; for $&#123;<span class="token function"><span class="token variable">self</span>.theme</span>&#125;
        $&#123;<span class="token variable">self</span>.parts:<span class="token class-name">comments</span>&#125;
<span class="token punctuation">]</span>&#125;</code>`,rt,X,Yt,ut,_e,an=`For a property of type list, you can specify whether it should be projected horizontally or vertically. Both options are optional. If
	neither <code>vertical</code> nor <code>horizontal</code> is specified, the property will be displayed as a vertical list by default.`,ft,ge,on='You can also choose to project a list property as a <a href="/Documentation/Defining_an_Editor/Projections#tables-4">table</a>.',dt,ve,ln="For a list, you can include the following options:",mt,we,cn="<li>A <strong>separator</strong> string, which will appear between each element.</li> <li>A <strong>terminator</strong> string, which will appear after each element.</li> <li>An <strong>initiator</strong> string, which will appear before each element.</li>",ht,be,pn="All of these are optional. The default separator is a single space.",kt,ye,rn=`In the following example, the list <code>parts</code> is displayed vertically with a <code>&#39;;&#39;</code> terminator. The list
	<code>themes</code>
	is displayed horizontally with a <code>&#39;, &#39;</code> separator. The list <code>helpers</code> is shown as a vertical list without any
	separator, terminator, or initiator. In fact, the <code>vertical</code> keyword could be omitted for <code>helpers</code>, as it is the
	default projection for lists.`,$t,Ce,_t,Gn=`<code class="language-freon"><span class="token comment">// Insurance/src/defs/editor-main-default.edit#L38-L49
</span>
<span class="token class-name">InsuranceProduct</span> &#123;<span class="token punctuation">[</span>
    Insurance Product $&#123;<span class="token function">name</span>&#125; ( public name: $&#123;<span class="token function">productName</span>&#125; ) USES $&#123;<span class="token function">basedOn <span class="token keyword">horizontal</span> <span class="token keyword">separator</span>[, ]</span>&#125;
        Themes: $&#123;<span class="token function">themes <span class="token keyword">horizontal</span> <span class="token keyword">separator</span>[, ]</span>&#125;
        Premium: $&#123;<span class="token function">advertisedPremium</span>&#125; per $&#123;<span class="token function">nrPremiumDays</span>&#125;
        Insured risks:
            $&#123;<span class="token function">parts <span class="token keyword">vertical</span> <span class="token keyword">terminator</span> [;]</span>&#125;
        Calculation
            <span class="token punctuation">[</span>? Risk adjusted by = $&#123;<span class="token function">riskAdjustment</span>&#125; <span class="token punctuation">]</span>
            calculated premium: $&#123;<span class="token function">calculation</span>&#125;
        <span class="token punctuation">[</span>?Helper functions:
            $&#123;<span class="token function">helpers <span class="token keyword">vertical</span></span>&#125;<span class="token punctuation">]</span>
<span class="token punctuation">]</span>&#125;</code>`,gt,ie,vt,Z,Jt,wt,Pe,un=`If a property is a list, you can choose to display it as a table. Tables can be either row-based or column-based. In a row-based table,
	each element of the list is displayed in a separate row, while in a column-based table, each element is displayed in a single column. The
	default is row-based.`,bt,Te,fn="Defining a table involves two steps:",yt,Le,dn=`<li>Add the keyword <code>table</code> to the list property you want to display as a table. Optionally, you can also specify either
		<code>rows</code>
		or <code>columns</code>.</li> <li>Define a table-projection for the type of the elements in the list. This projection specifies the table headers and</li> <li>determines how the elements of the list are arranged in rows or columns.</li>`,Ct,le,Pt,je,mn="To project the <code>parts</code> property of concept <code>BaseProduct</code> as a row based table, you can use the following code.",Tt,Ee,Lt,Yn=`<code class="language-freon"><span class="token comment">// Insurance/src/defs/editor-tables.edit#L13-L16
</span>
<span class="token class-name">BaseProduct</span> &#123;<span class="token punctuation">[</span>
    Base Products $&#123;<span class="token function">name</span>&#125; for $&#123;<span class="token function">theme</span>&#125;
        $&#123;parts <span class="token keyword">table</span> rows&#125;
<span class="token punctuation">]</span>&#125;</code>`,jt,Ie,hn=`Given the above example, there should also be a projection tagged <code>table</code> for the concept <code>InsurancePart</code> (the type
	of <code>parts</code>). Below four columns/rows are defined, each with its own header.`,Et,He,It,Jn=`<code class="language-freon"><span class="token comment">// Insurance/src/defs/editor-tables.edit#L6-L11
</span>
<span class="token class-name">InsurancePart</span>&#123;
<span class="token keyword">table</span> <span class="token punctuation">[</span>
    Name    | risk               | pay out          | is approved
    $&#123;<span class="token function">name</span>&#125; | $&#123;<span class="token function">statisticalRisk</span>&#125; | $&#123;<span class="token function">maximumPayOut</span>&#125; | $&#123;<span class="token function">isApproved</span>&#125;
<span class="token punctuation">]</span>
&#125;</code>`,Ht,ce,xt,pe,Mt,ee,Kt,Dt,xe,kn=`When a property is marked optional in the language structure definition (the <code>.ast</code> files), the projection of this property
	should also be optional. This is indicated by <code>[?</code>.`,At,Me,$n=`In the next example both the property <code>riskAdjustment</code> and <code>helpers</code> are only shown if they are present. If they are
	not present, respectively the text <code>Risk adjusted by =</code> or <code>Helper functions:</code> is omitted as well.`,Ot,De,_n="Note that optional projections for non-optional properties are not allowed.",Nt,Ae,qt,Kn=`<code class="language-freon"><span class="token comment">// Insurance/src/defs/editor-main-default.edit#L38-L49
</span>
<span class="token class-name">InsuranceProduct</span> &#123;<span class="token punctuation">[</span>
    Insurance Product $&#123;<span class="token function">name</span>&#125; ( public name: $&#123;<span class="token function">productName</span>&#125; ) USES $&#123;<span class="token function">basedOn <span class="token keyword">horizontal</span> <span class="token keyword">separator</span>[, ]</span>&#125;
        Themes: $&#123;<span class="token function">themes <span class="token keyword">horizontal</span> <span class="token keyword">separator</span>[, ]</span>&#125;
        Premium: $&#123;<span class="token function">advertisedPremium</span>&#125; per $&#123;<span class="token function">nrPremiumDays</span>&#125;
        Insured risks:
            $&#123;<span class="token function">parts <span class="token keyword">vertical</span> <span class="token keyword">terminator</span> [;]</span>&#125;
        Calculation
            <span class="token punctuation">[</span>? Risk adjusted by = $&#123;<span class="token function">riskAdjustment</span>&#125; <span class="token punctuation">]</span>
            calculated premium: $&#123;<span class="token function">calculation</span>&#125;
        <span class="token punctuation">[</span>?Helper functions:
            $&#123;<span class="token function">helpers <span class="token keyword">vertical</span></span>&#125;<span class="token punctuation">]</span>
<span class="token punctuation">]</span>&#125;</code>`,St,te,Qt,zt,Oe,gn=`As concepts may inherit from other concepts, so can the projection definition of a super concept be used in the projection definition of a
	child concept. To indicate the inclusion the syntax <code>[=&gt; SUPER]</code> is used, where <code>SUPER</code> is the name of the super concept.`,Bt,Ne,vn=`For instance, in the UML metamodel both <code>AssociationClass</code> and <code>Class</code> inherit from the abstract
	<code>Classifier</code>. When building an editor for the UML metamodel, one may define the projections as follows. The entries for
	<code>attributes</code>, <code>operations</code>, and <code>states</code> will appear for both child concepts.`,Ut,qe,Ft,Qn=`<code class="language-freon"><span class="token class-name">Classifier</span> &#123;
        <span class="token punctuation">[</span>
        <span class="token punctuation">[</span>?&lt;attributes>  $&#123;<span class="token function"><span class="token variable">self</span>.attributes <span class="token keyword">vertical</span> <span class="token keyword">terminator</span> [;] </span>&#125;<span class="token punctuation">]</span>
        <span class="token punctuation">[</span>?&lt;operations>  $&#123;<span class="token function"><span class="token variable">self</span>.operations <span class="token keyword">vertical</span> <span class="token keyword">terminator</span> [;] </span>&#125;<span class="token punctuation">]</span>
        <span class="token punctuation">[</span>?&lt;states>      $&#123;<span class="token function"><span class="token variable">self</span>.states     <span class="token keyword">vertical</span> <span class="token keyword">separator</span> [;] </span>&#125;<span class="token punctuation">]</span>
        <span class="token punctuation">]</span>
&#125;

<span class="token class-name">AssociationClass</span> &#123;
        <span class="token punctuation">[</span>
        <span class="token punctuation">[</span>?$&#123;<span class="token function"><span class="token variable">self</span>.visibility</span>&#125;<span class="token punctuation">]</span> &lt;associationclass> $&#123;<span class="token function"><span class="token variable">self</span>.name</span>&#125;
        $&#123;<span class="token function"><span class="token variable">self</span>.end1</span>&#125; &lt;-> $&#123;<span class="token function"><span class="token variable">self</span>.end2</span>&#125;
        
        <span class="token punctuation">[</span>=> Classifier <span class="token punctuation">]</span>
        &lt;endassociationclass>
        <span class="token punctuation">]</span>
&#125;

<span class="token class-name">Class</span> &#123;
    <span class="token punctuation">[</span>
    <span class="token punctuation">[</span>?$&#123;<span class="token function">visibility</span>&#125;<span class="token punctuation">]</span> $&#123;<span class="token variable">self</span>.isAbstract <span class="token punctuation">[</span>&lt;<span class="token keyword">abstract</span>><span class="token punctuation">]</span>&#125; &lt;class> $&#123;<span class="token function"><span class="token variable">self</span>.name</span>&#125;
    <span class="token punctuation">[</span>?&lt;specializes>  $&#123;<span class="token function"><span class="token variable">self</span>.generalizations <span class="token keyword">horizontal</span> <span class="token keyword">separator</span> [, ] </span>&#125;<span class="token punctuation">]</span>
    <span class="token punctuation">[</span>?&lt;<span class="token keyword">implements</span>>   $&#123;<span class="token function"><span class="token variable">self</span>.interfaces      <span class="token keyword">horizontal</span> <span class="token keyword">separator</span> [, ] </span>&#125;<span class="token punctuation">]</span>
    
    <span class="token punctuation">[</span>=> Classifier<span class="token punctuation">]</span>
    &lt;endclass>
    <span class="token punctuation">]</span>
&#125;</code>`,Rt,Se,Wt;n=new Hn({props:{prevLink:xn,nextLink:Mn}});function Xn(e){l[1](e)}let wn={tag:"h1",id:"projections-1",$$slots:{default:[rs]},$$scope:{ctx:l}};l[0][0]!==void 0&&(wn.intersecting=l[0][0]),o=new Fe({props:wn}),ze.push(()=>Ue(o,"intersecting",Xn));function Zn(e){l[2](e)}let bn={tag:"h2",id:"including-properties-2",$$slots:{default:[us]},$$scope:{ctx:l}};l[0][1]!==void 0&&(bn.intersecting=l[0][1]),T=new Fe({props:bn}),ze.push(()=>Ue(T,"intersecting",Zn)),F=new Re({props:{$$slots:{content:[ds],header:[fs]},$$scope:{ctx:l}}}),ae=new Re({props:{$$slots:{content:[hs],header:[ms]},$$scope:{ctx:l}}}),oe=new Re({props:{$$slots:{content:[$s],header:[ks]},$$scope:{ctx:l}}});function es(e){l[3](e)}let yn={tag:"h2",id:"using-named-projections-3",$$slots:{default:[_s]},$$scope:{ctx:l}};l[0][2]!==void 0&&(yn.intersecting=l[0][2]),Q=new Fe({props:yn}),ze.push(()=>Ue(Q,"intersecting",es));function ts(e){l[4](e)}let Cn={tag:"h2",id:"lists-4",$$slots:{default:[gs]},$$scope:{ctx:l}};l[0][3]!==void 0&&(Cn.intersecting=l[0][3]),X=new Fe({props:Cn}),ze.push(()=>Ue(X,"intersecting",ts)),ie=new Re({props:{$$slots:{content:[ws],header:[vs]},$$scope:{ctx:l}}});function ns(e){l[5](e)}let Pn={tag:"h2",id:"tables-5",$$slots:{default:[bs]},$$scope:{ctx:l}};l[0][4]!==void 0&&(Pn.intersecting=l[0][4]),Z=new Fe({props:Pn}),ze.push(()=>Ue(Z,"intersecting",ns)),le=new Re({props:{$$slots:{content:[ys]},$$scope:{ctx:l}}}),ce=new Re({props:{$$slots:{content:[Ps],header:[Cs]},$$scope:{ctx:l}}}),pe=new Re({props:{$$slots:{content:[Ls],header:[Ts]},$$scope:{ctx:l}}});function ss(e){l[6](e)}let Tn={tag:"h2",id:"optional-projections-6",$$slots:{default:[js]},$$scope:{ctx:l}};l[0][5]!==void 0&&(Tn.intersecting=l[0][5]),ee=new Fe({props:Tn}),ze.push(()=>Ue(ee,"intersecting",ss));function as(e){l[7](e)}let Ln={tag:"h2",id:"inherited-projections-7",$$slots:{default:[Es]},$$scope:{ctx:l}};return l[0][6]!==void 0&&(Ln.intersecting=l[0][6]),te=new Fe({props:Ln}),ze.push(()=>Ue(te,"intersecting",as)),Se=new Hn({props:{prevLink:xn,nextLink:Mn}}),{c(){H(n.$$.fragment),t=f(),H(o.$$.fragment),p=f(),k=m("p"),k.innerHTML=r,u=f(),g=m("pre"),N=new ne(!1),$=f(),H(T.$$.fragment),R=f(),z=m("p"),z.innerHTML=W,K=f(),V=m("p"),V.textContent=Ke,fe=f(),U=m("pre"),B=new ne(!1),G=f(),L=m("p"),L.innerHTML=_,j=f(),b=m("pre"),Y=new ne(!1),de=f(),H(F.$$.fragment),nt=f(),H(ae.$$.fragment),st=f(),H(oe.$$.fragment),at=f(),H(Q.$$.fragment),ot=f(),me=m("p"),me.innerHTML=tn,it=f(),he=m("p"),he.innerHTML=nn,lt=f(),ke=m("p"),ke.innerHTML=sn,ct=f(),$e=m("pre"),pt=new ne(!1),rt=f(),H(X.$$.fragment),ut=f(),_e=m("p"),_e.innerHTML=an,ft=f(),ge=m("p"),ge.innerHTML=on,dt=f(),ve=m("p"),ve.textContent=ln,mt=f(),we=m("ul"),we.innerHTML=cn,ht=f(),be=m("p"),be.textContent=pn,kt=f(),ye=m("p"),ye.innerHTML=rn,$t=f(),Ce=m("pre"),_t=new ne(!1),gt=f(),H(ie.$$.fragment),vt=f(),H(Z.$$.fragment),wt=f(),Pe=m("p"),Pe.textContent=un,bt=f(),Te=m("p"),Te.textContent=fn,yt=f(),Le=m("ol"),Le.innerHTML=dn,Ct=f(),H(le.$$.fragment),Pt=f(),je=m("p"),je.innerHTML=mn,Tt=f(),Ee=m("pre"),Lt=new ne(!1),jt=f(),Ie=m("p"),Ie.innerHTML=hn,Et=f(),He=m("pre"),It=new ne(!1),Ht=f(),H(ce.$$.fragment),xt=f(),H(pe.$$.fragment),Mt=f(),H(ee.$$.fragment),Dt=f(),xe=m("p"),xe.innerHTML=kn,At=f(),Me=m("p"),Me.innerHTML=$n,Ot=f(),De=m("p"),De.textContent=_n,Nt=f(),Ae=m("pre"),qt=new ne(!1),St=f(),H(te.$$.fragment),zt=f(),Oe=m("p"),Oe.innerHTML=gn,Bt=f(),Ne=m("p"),Ne.innerHTML=vn,Ut=f(),qe=m("pre"),Ft=new ne(!1),Rt=f(),H(Se.$$.fragment),this.h()},l(e){x(n.$$.fragment,e),t=d(e),x(o.$$.fragment,e),p=d(e),k=h(e,"P",{"data-svelte-h":!0}),w(k)!=="svelte-10vy057"&&(k.innerHTML=r),u=d(e),g=h(e,"PRE",{class:!0});var a=E(g);N=se(a,!1),a.forEach(s),$=d(e),x(T.$$.fragment,e),R=d(e),z=h(e,"P",{"data-svelte-h":!0}),w(z)!=="svelte-1b30reu"&&(z.innerHTML=W),K=d(e),V=h(e,"P",{"data-svelte-h":!0}),w(V)!=="svelte-caod8y"&&(V.textContent=Ke),fe=d(e),U=h(e,"PRE",{class:!0});var Ve=E(U);B=se(Ve,!1),Ve.forEach(s),G=d(e),L=h(e,"P",{"data-svelte-h":!0}),w(L)!=="svelte-1xdc8nm"&&(L.innerHTML=_),j=d(e),b=h(e,"PRE",{class:!0});var Ge=E(b);Y=se(Ge,!1),Ge.forEach(s),de=d(e),x(F.$$.fragment,e),nt=d(e),x(ae.$$.fragment,e),st=d(e),x(oe.$$.fragment,e),at=d(e),x(Q.$$.fragment,e),ot=d(e),me=h(e,"P",{"data-svelte-h":!0}),w(me)!=="svelte-6i291t"&&(me.innerHTML=tn),it=d(e),he=h(e,"P",{"data-svelte-h":!0}),w(he)!=="svelte-1kaurq6"&&(he.innerHTML=nn),lt=d(e),ke=h(e,"P",{"data-svelte-h":!0}),w(ke)!=="svelte-1oe5bl"&&(ke.innerHTML=sn),ct=d(e),$e=h(e,"PRE",{class:!0});var Qe=E($e);pt=se(Qe,!1),Qe.forEach(s),rt=d(e),x(X.$$.fragment,e),ut=d(e),_e=h(e,"P",{"data-svelte-h":!0}),w(_e)!=="svelte-pgk96g"&&(_e.innerHTML=an),ft=d(e),ge=h(e,"P",{"data-svelte-h":!0}),w(ge)!=="svelte-1dncubx"&&(ge.innerHTML=on),dt=d(e),ve=h(e,"P",{"data-svelte-h":!0}),w(ve)!=="svelte-1g3neg9"&&(ve.textContent=ln),mt=d(e),we=h(e,"UL",{"data-svelte-h":!0}),w(we)!=="svelte-gdsyiq"&&(we.innerHTML=cn),ht=d(e),be=h(e,"P",{"data-svelte-h":!0}),w(be)!=="svelte-1mflakl"&&(be.textContent=pn),kt=d(e),ye=h(e,"P",{"data-svelte-h":!0}),w(ye)!=="svelte-j91d7p"&&(ye.innerHTML=rn),$t=d(e),Ce=h(e,"PRE",{class:!0});var Xe=E(Ce);_t=se(Xe,!1),Xe.forEach(s),gt=d(e),x(ie.$$.fragment,e),vt=d(e),x(Z.$$.fragment,e),wt=d(e),Pe=h(e,"P",{"data-svelte-h":!0}),w(Pe)!=="svelte-11ak0ai"&&(Pe.textContent=un),bt=d(e),Te=h(e,"P",{"data-svelte-h":!0}),w(Te)!=="svelte-90v6n4"&&(Te.textContent=fn),yt=d(e),Le=h(e,"OL",{"data-svelte-h":!0}),w(Le)!=="svelte-91amke"&&(Le.innerHTML=dn),Ct=d(e),x(le.$$.fragment,e),Pt=d(e),je=h(e,"P",{"data-svelte-h":!0}),w(je)!=="svelte-mo08p6"&&(je.innerHTML=mn),Tt=d(e),Ee=h(e,"PRE",{class:!0});var Ze=E(Ee);Lt=se(Ze,!1),Ze.forEach(s),jt=d(e),Ie=h(e,"P",{"data-svelte-h":!0}),w(Ie)!=="svelte-mdhv0u"&&(Ie.innerHTML=hn),Et=d(e),He=h(e,"PRE",{class:!0});var Ye=E(He);It=se(Ye,!1),Ye.forEach(s),Ht=d(e),x(ce.$$.fragment,e),xt=d(e),x(pe.$$.fragment,e),Mt=d(e),x(ee.$$.fragment,e),Dt=d(e),xe=h(e,"P",{"data-svelte-h":!0}),w(xe)!=="svelte-3od8cw"&&(xe.innerHTML=kn),At=d(e),Me=h(e,"P",{"data-svelte-h":!0}),w(Me)!=="svelte-19w12fw"&&(Me.innerHTML=$n),Ot=d(e),De=h(e,"P",{"data-svelte-h":!0}),w(De)!=="svelte-18q8xl4"&&(De.textContent=_n),Nt=d(e),Ae=h(e,"PRE",{class:!0});var Je=E(Ae);qt=se(Je,!1),Je.forEach(s),St=d(e),x(te.$$.fragment,e),zt=d(e),Oe=h(e,"P",{"data-svelte-h":!0}),w(Oe)!=="svelte-1ctmntp"&&(Oe.innerHTML=gn),Bt=d(e),Ne=h(e,"P",{"data-svelte-h":!0}),w(Ne)!=="svelte-nzgsku"&&(Ne.innerHTML=vn),Ut=d(e),qe=h(e,"PRE",{class:!0});var et=E(qe);Ft=se(et,!1),et.forEach(s),Rt=d(e),x(Se.$$.fragment,e),this.h()},h(){N.a=null,y(g,"class","language-freon"),B.a=null,y(U,"class","language-freon"),Y.a=null,y(b,"class","language-freon"),pt.a=null,y($e,"class","language-freon"),_t.a=null,y(Ce,"class","language-freon"),Lt.a=null,y(Ee,"class","language-freon"),It.a=null,y(He,"class","language-freon"),qt.a=null,y(Ae,"class","language-freon"),Ft.a=null,y(qe,"class","language-freon")},m(e,a){M(n,e,a),i(e,t,a),M(o,e,a),i(e,p,a),i(e,k,a),i(e,u,a),i(e,g,a),N.m(v,g),i(e,$,a),M(T,e,a),i(e,R,a),i(e,z,a),i(e,K,a),i(e,V,a),i(e,fe,a),i(e,U,a),B.m(I,U),i(e,G,a),i(e,L,a),i(e,j,a),i(e,b,a),Y.m(We,b),i(e,de,a),M(F,e,a),i(e,nt,a),M(ae,e,a),i(e,st,a),M(oe,e,a),i(e,at,a),M(Q,e,a),i(e,ot,a),i(e,me,a),i(e,it,a),i(e,he,a),i(e,lt,a),i(e,ke,a),i(e,ct,a),i(e,$e,a),pt.m(Vn,$e),i(e,rt,a),M(X,e,a),i(e,ut,a),i(e,_e,a),i(e,ft,a),i(e,ge,a),i(e,dt,a),i(e,ve,a),i(e,mt,a),i(e,we,a),i(e,ht,a),i(e,be,a),i(e,kt,a),i(e,ye,a),i(e,$t,a),i(e,Ce,a),_t.m(Gn,Ce),i(e,gt,a),M(ie,e,a),i(e,vt,a),M(Z,e,a),i(e,wt,a),i(e,Pe,a),i(e,bt,a),i(e,Te,a),i(e,yt,a),i(e,Le,a),i(e,Ct,a),M(le,e,a),i(e,Pt,a),i(e,je,a),i(e,Tt,a),i(e,Ee,a),Lt.m(Yn,Ee),i(e,jt,a),i(e,Ie,a),i(e,Et,a),i(e,He,a),It.m(Jn,He),i(e,Ht,a),M(ce,e,a),i(e,xt,a),M(pe,e,a),i(e,Mt,a),M(ee,e,a),i(e,Dt,a),i(e,xe,a),i(e,At,a),i(e,Me,a),i(e,Ot,a),i(e,De,a),i(e,Nt,a),i(e,Ae,a),qt.m(Kn,Ae),i(e,St,a),M(te,e,a),i(e,zt,a),i(e,Oe,a),i(e,Bt,a),i(e,Ne,a),i(e,Ut,a),i(e,qe,a),Ft.m(Qn,qe),i(e,Rt,a),M(Se,e,a),Wt=!0},p(e,[a]){const Ve={};a&512&&(Ve.$$scope={dirty:a,ctx:e}),!c&&a&1&&(c=!0,Ve.intersecting=e[0][0],Be(()=>c=!1)),o.$set(Ve);const Ge={};a&512&&(Ge.$$scope={dirty:a,ctx:e}),!S&&a&1&&(S=!0,Ge.intersecting=e[0][1],Be(()=>S=!1)),T.$set(Ge);const Qe={};a&512&&(Qe.$$scope={dirty:a,ctx:e}),F.$set(Qe);const Xe={};a&512&&(Xe.$$scope={dirty:a,ctx:e}),ae.$set(Xe);const Ze={};a&512&&(Ze.$$scope={dirty:a,ctx:e}),oe.$set(Ze);const Ye={};a&512&&(Ye.$$scope={dirty:a,ctx:e}),!Gt&&a&1&&(Gt=!0,Ye.intersecting=e[0][2],Be(()=>Gt=!1)),Q.$set(Ye);const Je={};a&512&&(Je.$$scope={dirty:a,ctx:e}),!Yt&&a&1&&(Yt=!0,Je.intersecting=e[0][3],Be(()=>Yt=!1)),X.$set(Je);const et={};a&512&&(et.$$scope={dirty:a,ctx:e}),ie.$set(et);const Xt={};a&512&&(Xt.$$scope={dirty:a,ctx:e}),!Jt&&a&1&&(Jt=!0,Xt.intersecting=e[0][4],Be(()=>Jt=!1)),Z.$set(Xt);const jn={};a&512&&(jn.$$scope={dirty:a,ctx:e}),le.$set(jn);const En={};a&512&&(En.$$scope={dirty:a,ctx:e}),ce.$set(En);const In={};a&512&&(In.$$scope={dirty:a,ctx:e}),pe.$set(In);const Zt={};a&512&&(Zt.$$scope={dirty:a,ctx:e}),!Kt&&a&1&&(Kt=!0,Zt.intersecting=e[0][5],Be(()=>Kt=!1)),ee.$set(Zt);const en={};a&512&&(en.$$scope={dirty:a,ctx:e}),!Qt&&a&1&&(Qt=!0,en.intersecting=e[0][6],Be(()=>Qt=!1)),te.$set(en)},i(e){Wt||(D(n.$$.fragment,e),D(o.$$.fragment,e),D(T.$$.fragment,e),D(F.$$.fragment,e),D(ae.$$.fragment,e),D(oe.$$.fragment,e),D(Q.$$.fragment,e),D(X.$$.fragment,e),D(ie.$$.fragment,e),D(Z.$$.fragment,e),D(le.$$.fragment,e),D(ce.$$.fragment,e),D(pe.$$.fragment,e),D(ee.$$.fragment,e),D(te.$$.fragment,e),D(Se.$$.fragment,e),Wt=!0)},o(e){A(n.$$.fragment,e),A(o.$$.fragment,e),A(T.$$.fragment,e),A(F.$$.fragment,e),A(ae.$$.fragment,e),A(oe.$$.fragment,e),A(Q.$$.fragment,e),A(X.$$.fragment,e),A(ie.$$.fragment,e),A(Z.$$.fragment,e),A(le.$$.fragment,e),A(ce.$$.fragment,e),A(pe.$$.fragment,e),A(ee.$$.fragment,e),A(te.$$.fragment,e),A(Se.$$.fragment,e),Wt=!1},d(e){e&&(s(t),s(p),s(k),s(u),s(g),s($),s(R),s(z),s(K),s(V),s(fe),s(U),s(G),s(L),s(j),s(b),s(de),s(nt),s(st),s(at),s(ot),s(me),s(it),s(he),s(lt),s(ke),s(ct),s($e),s(rt),s(ut),s(_e),s(ft),s(ge),s(dt),s(ve),s(mt),s(we),s(ht),s(be),s(kt),s(ye),s($t),s(Ce),s(gt),s(vt),s(wt),s(Pe),s(bt),s(Te),s(yt),s(Le),s(Ct),s(Pt),s(je),s(Tt),s(Ee),s(jt),s(Ie),s(Et),s(He),s(Ht),s(xt),s(Mt),s(Dt),s(xe),s(At),s(Me),s(Ot),s(De),s(Nt),s(Ae),s(St),s(zt),s(Oe),s(Bt),s(Ne),s(Ut),s(qe),s(Rt)),O(n,e),O(o,e),O(T,e),O(F,e),O(ae,e),O(oe,e),O(Q,e),O(X,e),O(ie,e),O(Z,e),O(le,e),O(ce,e),O(pe,e),O(ee,e),O(te,e),O(Se,e)}}}let xn="/Documentation/Defining_an_Editor",Mn="/Documentation/Defining_an_Editor/Indentation";function Hs(l,n,t){let o;zn(l,J,$=>t(8,o=$)),re(J,o=[{title:"Projections",visible:!1,ref:"#projections-1"},{title:"Including Properties",visible:!1,ref:"#including-properties-2"},{title:"Using Named Projections",visible:!1,ref:"#using-named-projections-3"},{title:"Lists",visible:!1,ref:"#lists-4"},{title:"Tables",visible:!1,ref:"#tables-5"},{title:"Optional Projections",visible:!1,ref:"#optional-projections-6"},{title:"Inherited Projections",visible:!1,ref:"#inherited-projections-7"}],o);let c=[];os(()=>{document.querySelectorAll("pre").forEach(T=>{const S=document.createElement("div");S.className="copy-prompt";const R=document.createElement("p");R.innerHTML="👆 Click to copy",R.className="copy-prompt-p";const z=document.createElement("img");z.src="/icons/copy-icon.svg",z.className="copy-prompt-img",S.appendChild(z),S.appendChild(R),T.appendChild(S),T.querySelector(".copy-prompt > p").addEventListener("click",W=>{cs(T.querySelector("code").textContent),T.querySelector(".copy-prompt > p").innerHTML="Copied!",setTimeout(()=>{T.querySelector(".copy-prompt > p").innerHTML="👆 Click to copy"},1e3)})})});function p($){l.$$.not_equal(c[0],$)&&(c[0]=$,t(0,c))}function k($){l.$$.not_equal(c[1],$)&&(c[1]=$,t(0,c))}function r($){l.$$.not_equal(c[2],$)&&(c[2]=$,t(0,c))}function u($){l.$$.not_equal(c[3],$)&&(c[3]=$,t(0,c))}function g($){l.$$.not_equal(c[4],$)&&(c[4]=$,t(0,c))}function N($){l.$$.not_equal(c[5],$)&&(c[5]=$,t(0,c))}function v($){l.$$.not_equal(c[6],$)&&(c[6]=$,t(0,c))}return l.$$.update=()=>{l.$$.dirty&1&&re(J,o[0].visible=c[0],o),l.$$.dirty&1&&re(J,o[1].visible=c[1],o),l.$$.dirty&1&&re(J,o[2].visible=c[2],o),l.$$.dirty&1&&re(J,o[3].visible=c[3],o),l.$$.dirty&1&&re(J,o[4].visible=c[4],o),l.$$.dirty&1&&re(J,o[5].visible=c[5],o),l.$$.dirty&1&&re(J,o[6].visible=c[6],o)},[c,p,k,r,u,g,N,v]}class xs extends Rn{constructor(n){super(),Wn(this,n,Hs,Is,Sn,{})}}function Dn(l,n,t){const o=l.slice();return o[6]=n[t],o[8]=t,o}function An(l,n,t){const o=l.slice();return o[6]=n[t],o[8]=t,o}function Ms(l){let n,t;return{c(){n=m("img"),this.h()},l(o){n=h(o,"IMG",{class:!0,src:!0,alt:!0}),this.h()},h(){y(n,"class","page-toc-small-img"),Fn(n.src,t="/icons/down-arrow.png")||y(n,"src",t),y(n,"alt","arrow down")},m(o,c){i(o,n,c)},d(o){o&&s(n)}}}function Ds(l){let n,t;return{c(){n=m("img"),this.h()},l(o){n=h(o,"IMG",{class:!0,src:!0,alt:!0}),this.h()},h(){y(n,"class","page-toc-small-img"),Fn(n.src,t="/icons/upload.png")||y(n,"src",t),y(n,"alt","arrow up")},m(o,c){i(o,n,c)},d(o){o&&s(n)}}}function On(l){let n,t,o=Vt(l[0]),c=[];for(let p=0;p<o.length;p+=1)c[p]=Nn(An(l,o,p));return{c(){n=m("div"),t=m("ul");for(let p=0;p<c.length;p+=1)c[p].c();this.h()},l(p){n=h(p,"DIV",{class:!0});var k=E(n);t=h(k,"UL",{class:!0});var r=E(t);for(let u=0;u<c.length;u+=1)c[u].l(r);r.forEach(s),k.forEach(s),this.h()},h(){y(t,"class","page-ul"),y(n,"class","toc-details")},m(p,k){i(p,n,k),q(n,t);for(let r=0;r<c.length;r+=1)c[r]&&c[r].m(t,null)},p(p,k){if(k&5){o=Vt(p[0]);let r;for(r=0;r<o.length;r+=1){const u=An(p,o,r);c[r]?c[r].p(u,k):(c[r]=Nn(u),c[r].c(),c[r].m(t,null))}for(;r<c.length;r+=1)c[r].d(1);c.length=o.length}},d(p){p&&s(n),Bn(c,p)}}}function Nn(l){let n,t,o=l[6].title+"",c,p,k;return{c(){n=m("li"),t=m("a"),c=C(o),k=f(),this.h()},l(r){n=h(r,"LI",{class:!0});var u=E(n);t=h(u,"A",{href:!0});var g=E(t);c=P(g,o),g.forEach(s),k=d(u),u.forEach(s),this.h()},h(){y(t,"href",p=l[6].ref),ue(t,"page-visible",l[8]===l[2]),ue(t,"page-nonvisible",l[8]!==l[2]),y(n,"class","page-toc-text")},m(r,u){i(r,n,u),q(n,t),q(t,c),q(n,k)},p(r,u){u&1&&o!==(o=r[6].title+"")&&Un(c,o),u&1&&p!==(p=r[6].ref)&&y(t,"href",p),u&4&&ue(t,"page-visible",r[8]===r[2]),u&4&&ue(t,"page-nonvisible",r[8]!==r[2])},d(r){r&&s(n)}}}function qn(l){let n,t,o=l[6].title+"",c,p,k;return{c(){n=m("li"),t=m("a"),c=C(o),k=f(),this.h()},l(r){n=h(r,"LI",{class:!0});var u=E(n);t=h(u,"A",{href:!0});var g=E(t);c=P(g,o),g.forEach(s),k=d(u),u.forEach(s),this.h()},h(){y(t,"href",p=l[6].ref),ue(t,"page-visible",l[8]===l[2]),ue(t,"page-nonvisible",l[8]!==l[2]),y(n,"class","page-toc-text")},m(r,u){i(r,n,u),q(n,t),q(t,c),q(n,k)},p(r,u){u&1&&o!==(o=r[6].title+"")&&Un(c,o),u&1&&p!==(p=r[6].ref)&&y(t,"href",p),u&4&&ue(t,"page-visible",r[8]===r[2]),u&4&&ue(t,"page-nonvisible",r[8]!==r[2])},d(r){r&&s(n)}}}function As(l){let n,t,o,c="On this page ...",p,k,r,u,g,N,v,$,T,S,R="On this page",z,W,K,V,Ke;function fe(_,j){return _[1]?Ds:Ms}let U=fe(l),B=U(l),I=l[1]&&On(l);g=new ps({}),v=new xs({});let G=Vt(l[0]),L=[];for(let _=0;_<G.length;_+=1)L[_]=qn(Dn(l,G,_));return{c(){n=m("div"),t=m("div"),o=m("p"),o.textContent=c,p=f(),k=m("button"),B.c(),r=f(),I&&I.c(),u=f(),H(g.$$.fragment),N=f(),H(v.$$.fragment),$=f(),T=m("nav"),S=m("h3"),S.textContent=R,z=f(),W=m("ul");for(let _=0;_<L.length;_+=1)L[_].c();this.h()},l(_){n=h(_,"DIV",{class:!0});var j=E(n);t=h(j,"DIV",{class:!0});var b=E(t);o=h(b,"P",{class:!0,"data-svelte-h":!0}),w(o)!=="svelte-1929lhs"&&(o.textContent=c),p=d(b),k=h(b,"BUTTON",{class:!0});var Y=E(k);B.l(Y),Y.forEach(s),b.forEach(s),r=d(j),I&&I.l(j),u=d(j),x(g.$$.fragment,j),N=d(j),x(v.$$.fragment,j),j.forEach(s),$=d(_),T=h(_,"NAV",{class:!0});var We=E(T);S=h(We,"H3",{class:!0,"data-svelte-h":!0}),w(S)!=="svelte-1hgt7fi"&&(S.textContent=R),z=d(We),W=h(We,"UL",{class:!0});var de=E(W);for(let F=0;F<L.length;F+=1)L[F].l(de);de.forEach(s),We.forEach(s),this.h()},h(){y(o,"class","page-toc-small-title"),y(k,"class","page-toc-small-expand-button"),y(t,"class","page-toc-small"),y(n,"class","page-main"),y(S,"class","page-toc-title"),y(W,"class","page-ul"),y(T,"class","page-toc")},m(_,j){i(_,n,j),q(n,t),q(t,o),q(t,p),q(t,k),B.m(k,null),q(n,r),I&&I.m(n,null),q(n,u),M(g,n,null),q(n,N),M(v,n,null),i(_,$,j),i(_,T,j),q(T,S),q(T,z),q(T,W);for(let b=0;b<L.length;b+=1)L[b]&&L[b].m(W,null);K=!0,V||(Ke=is(k,"click",l[4]),V=!0)},p(_,[j]){if(U!==(U=fe(_))&&(B.d(1),B=U(_),B&&(B.c(),B.m(k,null))),_[1]?I?I.p(_,j):(I=On(_),I.c(),I.m(n,u)):I&&(I.d(1),I=null),j&5){G=Vt(_[0]);let b;for(b=0;b<G.length;b+=1){const Y=Dn(_,G,b);L[b]?L[b].p(Y,j):(L[b]=qn(Y),L[b].c(),L[b].m(W,null))}for(;b<L.length;b+=1)L[b].d(1);L.length=G.length}},i(_){K||(D(g.$$.fragment,_),D(v.$$.fragment,_),K=!0)},o(_){A(g.$$.fragment,_),A(v.$$.fragment,_),K=!1},d(_){_&&(s(n),s($),s(T)),B.d(),I&&I.d(),O(g),O(v),Bn(L,_),V=!1,Ke()}}}function Os(l,n,t){let o,c;zn(l,J,g=>t(0,c=g));let p=!1;function k(g){let N=o;for(let v=0;v<g.length;v++)if(g[v].visible)return v;return N}function r(){t(1,p=!p)}const u=()=>{r()};return l.$$.update=()=>{l.$$.dirty&1&&t(2,o=k(c))},[c,p,o,r,u]}class Fs extends Rn{constructor(n){super(),Wn(this,n,Os,As,Sn,{})}}export{Fs as component};
//# sourceMappingURL=40.B3HuIluM.js.map
