import{S as ue,i as he,s as fe,e as r,t as n,k as C,c as l,a as i,h as a,d as s,m as S,b as oe,g as c,H as t,J as X}from"../../../../chunks/vendor-0dc77bd0.js";function de(re){let f,L,O,p,j,x,H,G,g,N,$,y,I,M,P,m,le=`<code class="language-ts"><span class="token comment">// docu-project/defs/editor-expressions-default.edit#L27-L31</span>

FunctionCallExpression <span class="token punctuation">&#123;</span>
    <span class="token punctuation">[</span>$<span class="token punctuation">&#123;</span>funcDefinition<span class="token punctuation">&#125;</span> <span class="token punctuation">(</span> $<span class="token punctuation">&#123;</span>args horizontal separator<span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">)</span><span class="token punctuation">]</span>
    referenceShortcut <span class="token operator">=</span> $<span class="token punctuation">&#123;</span>funcDefinition<span class="token punctuation">&#125;</span>
    trigger <span class="token operator">=</span> <span class="token string">"calc"</span>
<span class="token punctuation">&#125;</span></code>`,F,u,W,v,q,z,w,J,A,R,h,B,b,K,Q,T,U,V,D,E,ie=`<code class="language-ts"><span class="token comment">// docu-project/defs/editor-expressions-default.edit#L18-L20</span>

PlusExpression <span class="token punctuation">&#123;</span>
    <span class="token builtin">symbol</span> <span class="token operator">=</span> <span class="token string">"+"</span>
<span class="token punctuation">&#125;</span></code>`;return{c(){f=r("h1"),L=n("Reference Shortcuts, Symbols, and Triggers"),O=C(),p=r("p"),j=n("The projection for "),x=r("code"),H=n("FunctionCallExpression"),G=n(", shows how to define a "),g=r("strong"),N=n("trigger"),$=n(`.
The trigger is a string of characters that is used within the editor to trigger the creation
of an instance of concept `),y=r("code"),I=n("FunctionCallExpression"),M=n("."),P=C(),m=r("pre"),F=C(),u=r("p"),W=n("The example also shows how to define a "),v=r("strong"),q=n("reference shortcut"),z=n(`. This option can only be used for reference properties.
When such a property is created, normally the user would have to first select the type `),w=r("code"),J=n("FunctionCallExpression"),A=n(`,
only after selecting this, the user is able to enter the name of the referred element. The reference shortcut
indicates that the user will be able to select the name of the referred element without the intermediate step.`),R=C(),h=r("p"),B=n("In the next example, a "),b=r("strong"),K=n("symbol"),Q=n(" is defined for the operator of the binary expression "),T=r("code"),U=n("PlusExpression"),V=n("."),D=C(),E=r("pre"),this.h()},l(e){f=l(e,"H1",{});var o=i(f);L=a(o,"Reference Shortcuts, Symbols, and Triggers"),o.forEach(s),O=S(e),p=l(e,"P",{});var d=i(p);j=a(d,"The projection for "),x=l(d,"CODE",{});var Y=i(x);H=a(Y,"FunctionCallExpression"),Y.forEach(s),G=a(d,", shows how to define a "),g=l(d,"STRONG",{});var Z=i(g);N=a(Z,"trigger"),Z.forEach(s),$=a(d,`.
The trigger is a string of characters that is used within the editor to trigger the creation
of an instance of concept `),y=l(d,"CODE",{});var ee=i(y);I=a(ee,"FunctionCallExpression"),ee.forEach(s),M=a(d,"."),d.forEach(s),P=S(e),m=l(e,"PRE",{class:!0});var pe=i(m);pe.forEach(s),F=S(e),u=l(e,"P",{});var k=i(u);W=a(k,"The example also shows how to define a "),v=l(k,"STRONG",{});var te=i(v);q=a(te,"reference shortcut"),te.forEach(s),z=a(k,`. This option can only be used for reference properties.
When such a property is created, normally the user would have to first select the type `),w=l(k,"CODE",{});var se=i(w);J=a(se,"FunctionCallExpression"),se.forEach(s),A=a(k,`,
only after selecting this, the user is able to enter the name of the referred element. The reference shortcut
indicates that the user will be able to select the name of the referred element without the intermediate step.`),k.forEach(s),R=S(e),h=l(e,"P",{});var _=i(h);B=a(_,"In the next example, a "),b=l(_,"STRONG",{});var ne=i(b);K=a(ne,"symbol"),ne.forEach(s),Q=a(_," is defined for the operator of the binary expression "),T=l(_,"CODE",{});var ae=i(T);U=a(ae,"PlusExpression"),ae.forEach(s),V=a(_,"."),_.forEach(s),D=S(e),E=l(e,"PRE",{class:!0});var ce=i(E);ce.forEach(s),this.h()},h(){oe(m,"class","language-ts"),oe(E,"class","language-ts")},m(e,o){c(e,f,o),t(f,L),c(e,O,o),c(e,p,o),t(p,j),t(p,x),t(x,H),t(p,G),t(p,g),t(g,N),t(p,$),t(p,y),t(y,I),t(p,M),c(e,P,o),c(e,m,o),m.innerHTML=le,c(e,F,o),c(e,u,o),t(u,W),t(u,v),t(v,q),t(u,z),t(u,w),t(w,J),t(u,A),c(e,R,o),c(e,h,o),t(h,B),t(h,b),t(b,K),t(h,Q),t(h,T),t(T,U),t(h,V),c(e,D,o),c(e,E,o),E.innerHTML=ie},p:X,i:X,o:X,d(e){e&&s(f),e&&s(O),e&&s(p),e&&s(P),e&&s(m),e&&s(F),e&&s(u),e&&s(R),e&&s(h),e&&s(D),e&&s(E)}}}class Ee extends ue{constructor(f){super();he(this,f,null,de,fe,{})}}export{Ee as default};
