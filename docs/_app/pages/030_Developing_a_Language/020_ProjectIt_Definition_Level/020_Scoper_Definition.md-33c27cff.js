import{S as Ze,i as et,s as tt,e as l,t as a,k as m,j as nt,c as p,a as c,g as o,d as t,n as d,m as st,b as ae,f as i,F as n,o as at,x as ot,u as it,v as lt}from"../../../chunks/vendor-0216fdcb.js";import{N as pt}from"../../../chunks/Note-fe348b75.js";/* empty css                                                         */function ct(z){let r;return{c(){r=a("Each model unit is a namespace.")},l(f){r=o(f,"Each model unit is a namespace.")},m(f,y){i(f,r,y)},d(f){f&&t(r)}}}function rt(z){let r;return{c(){r=a("On all Levels of Customizations model units are always considered to be namespaces.")},l(f){r=o(f,"On all Levels of Customizations model units are always considered to be namespaces.")},m(f,y){i(f,r,y)},d(f){f&&t(r)}}}function ft(z){let r,f,y,_,oe,L,ie,le,B,b,pe,N,ce,re,g,$,fe,q,I,ue,G,h,me,O,de,he,F,ve,ye,U,k,Je=`<code class="language-ts"><span class="token comment">// tutorial-language/defs/LanguageDefinition.scope#L3-L3</span>

isnamespace <span class="token punctuation">&#123;</span> EntityModelUnit<span class="token punctuation">,</span> Entity<span class="token punctuation">,</span> EntityFunction <span class="token punctuation">&#125;</span></code>`,J,D,_e,K,E,Q,C,be,V,u,Ee,H,we,ke,M,Te,Ae,j,xe,Le,R,$e,Ie,W,T,Ke=`<code class="language-ts"><span class="token comment">// tutorial-language/defs/LanguageDefinition.scope#L5-L7</span>

Entity <span class="token punctuation">&#123;</span>
    namespace_addition <span class="token operator">=</span> self<span class="token punctuation">.</span>baseEntity<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,X,P,De,Z,w,Ce,Y,Pe,Se,ee,A,Qe=`<code class="language-ts"><span class="token comment">// tutorial-language/defs/LanguageDefinition.scope#L15-L17</span>

AppliedFeature <span class="token punctuation">&#123;</span>
	scope <span class="token operator">=</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span> container <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,te;return E=new pt({props:{$$slots:{content:[rt],header:[ct]},$$scope:{ctx:z}}}),{c(){r=l("h1"),f=a("The Scoper Definition"),y=m(),_=l("p"),oe=a("For now, the scoper definition does not support our "),L=l("a"),ie=a("three-level approach"),le=a(`.
You can manually code your own scoper on the 3rd level, but it is not possible to combine this with the
scopers on the 1st and 2nd levels.`),B=m(),b=l("p"),pe=a(`This tutorial
describes the possibilities of defining a scoper in the scoper definition file (with extension `),N=l("code"),ce=a(".scope"),re=a(")."),g=m(),$=l("p"),fe=a(`In the scoper definition you provide the information necessary to determine which names are visible from a certain
element of your user\u2019s model.`),q=m(),I=l("h2"),ue=a("Namespaces"),G=m(),h=l("p"),me=a("In the scoper definition you can mark a list of concepts to be "),O=l("strong"),de=a("namespaces"),he=a(". Any "),F=l("em"),ve=a("namespace"),ye=a(` has its own
set of visible names. Any namespace shadows the visible names from its surrounding namespace (using lexical scope).
The default scoper simply regards the model of your user as the only namespace.`),U=m(),k=l("pre"),J=m(),D=l("p"),_e=a(`Interfaces can be namespaces as well.
Any instance of a concept that implements the namespace interface is a
namespace, but only the properties of the interface will be visible.`),K=m(),nt(E.$$.fragment),Q=m(),C=l("h2"),be=a("Namespace Additions"),V=m(),u=l("p"),Ee=a(`The standard namespaces can be added to. In that case, the visible elements from the addition are included.
By indicating an addition to a namespace you can, for instance, support inheritance. In the following example,
`),H=l("code"),we=a("baseEntity"),ke=a(" is in the language structure definition ("),M=l("code"),Te=a(".ast"),Ae=a(` file) defined to be the
super type of the `),j=l("code"),xe=a("Entity"),Le=a(" concept. The names visible in the "),R=l("code"),$e=a("baseEntity"),Ie=a(`
are included in the namespace by defining the namespace-addition.`),W=m(),T=l("pre"),X=m(),P=l("h2"),De=a("Alternative Scopes"),Z=m(),w=l("p"),Ce=a(`You can also indicate that a different namespace altogether should be used. In the following example,
the elements visible in
an `),Y=l("code"),Pe=a("AppliedFeature"),Se=a(" are determined based on the type of its container, i.e. the type of its parent in the AST."),ee=m(),A=l("pre"),this.h()},l(e){r=p(e,"H1",{});var s=c(r);f=o(s,"The Scoper Definition"),s.forEach(t),y=d(e),_=p(e,"P",{});var x=c(_);oe=o(x,"For now, the scoper definition does not support our "),L=p(x,"A",{href:!0});var Ne=c(L);ie=o(Ne,"three-level approach"),Ne.forEach(t),le=o(x,`.
You can manually code your own scoper on the 3rd level, but it is not possible to combine this with the
scopers on the 1st and 2nd levels.`),x.forEach(t),B=d(e),b=p(e,"P",{});var ne=c(b);pe=o(ne,`This tutorial
describes the possibilities of defining a scoper in the scoper definition file (with extension `),N=p(ne,"CODE",{});var Oe=c(N);ce=o(Oe,".scope"),Oe.forEach(t),re=o(ne,")."),ne.forEach(t),g=d(e),$=p(e,"P",{});var Fe=c($);fe=o(Fe,`In the scoper definition you provide the information necessary to determine which names are visible from a certain
element of your user\u2019s model.`),Fe.forEach(t),q=d(e),I=p(e,"H2",{});var He=c(I);ue=o(He,"Namespaces"),He.forEach(t),G=d(e),h=p(e,"P",{});var S=c(h);me=o(S,"In the scoper definition you can mark a list of concepts to be "),O=p(S,"STRONG",{});var Me=c(O);de=o(Me,"namespaces"),Me.forEach(t),he=o(S,". Any "),F=p(S,"EM",{});var je=c(F);ve=o(je,"namespace"),je.forEach(t),ye=o(S,` has its own
set of visible names. Any namespace shadows the visible names from its surrounding namespace (using lexical scope).
The default scoper simply regards the model of your user as the only namespace.`),S.forEach(t),U=d(e),k=p(e,"PRE",{class:!0});var Ve=c(k);Ve.forEach(t),J=d(e),D=p(e,"P",{});var Re=c(D);_e=o(Re,`Interfaces can be namespaces as well.
Any instance of a concept that implements the namespace interface is a
namespace, but only the properties of the interface will be visible.`),Re.forEach(t),K=d(e),st(E.$$.fragment,e),Q=d(e),C=p(e,"H2",{});var Ye=c(C);be=o(Ye,"Namespace Additions"),Ye.forEach(t),V=d(e),u=p(e,"P",{});var v=c(u);Ee=o(v,`The standard namespaces can be added to. In that case, the visible elements from the addition are included.
By indicating an addition to a namespace you can, for instance, support inheritance. In the following example,
`),H=p(v,"CODE",{});var ze=c(H);we=o(ze,"baseEntity"),ze.forEach(t),ke=o(v," is in the language structure definition ("),M=p(v,"CODE",{});var Be=c(M);Te=o(Be,".ast"),Be.forEach(t),Ae=o(v,` file) defined to be the
super type of the `),j=p(v,"CODE",{});var ge=c(j);xe=o(ge,"Entity"),ge.forEach(t),Le=o(v," concept. The names visible in the "),R=p(v,"CODE",{});var qe=c(R);$e=o(qe,"baseEntity"),qe.forEach(t),Ie=o(v,`
are included in the namespace by defining the namespace-addition.`),v.forEach(t),W=d(e),T=p(e,"PRE",{class:!0});var We=c(T);We.forEach(t),X=d(e),P=p(e,"H2",{});var Ge=c(P);De=o(Ge,"Alternative Scopes"),Ge.forEach(t),Z=d(e),w=p(e,"P",{});var se=c(w);Ce=o(se,`You can also indicate that a different namespace altogether should be used. In the following example,
the elements visible in
an `),Y=p(se,"CODE",{});var Ue=c(Y);Pe=o(Ue,"AppliedFeature"),Ue.forEach(t),Se=o(se," are determined based on the type of its container, i.e. the type of its parent in the AST."),se.forEach(t),ee=d(e),A=p(e,"PRE",{class:!0});var Xe=c(A);Xe.forEach(t),this.h()},h(){ae(L,"href","/010_Intro/050_Three_Levels_of_Customization"),ae(k,"class","language-ts"),ae(T,"class","language-ts"),ae(A,"class","language-ts")},m(e,s){i(e,r,s),n(r,f),i(e,y,s),i(e,_,s),n(_,oe),n(_,L),n(L,ie),n(_,le),i(e,B,s),i(e,b,s),n(b,pe),n(b,N),n(N,ce),n(b,re),i(e,g,s),i(e,$,s),n($,fe),i(e,q,s),i(e,I,s),n(I,ue),i(e,G,s),i(e,h,s),n(h,me),n(h,O),n(O,de),n(h,he),n(h,F),n(F,ve),n(h,ye),i(e,U,s),i(e,k,s),k.innerHTML=Je,i(e,J,s),i(e,D,s),n(D,_e),i(e,K,s),at(E,e,s),i(e,Q,s),i(e,C,s),n(C,be),i(e,V,s),i(e,u,s),n(u,Ee),n(u,H),n(H,we),n(u,ke),n(u,M),n(M,Te),n(u,Ae),n(u,j),n(j,xe),n(u,Le),n(u,R),n(R,$e),n(u,Ie),i(e,W,s),i(e,T,s),T.innerHTML=Ke,i(e,X,s),i(e,P,s),n(P,De),i(e,Z,s),i(e,w,s),n(w,Ce),n(w,Y),n(Y,Pe),n(w,Se),i(e,ee,s),i(e,A,s),A.innerHTML=Qe,te=!0},p(e,[s]){const x={};s&1&&(x.$$scope={dirty:s,ctx:e}),E.$set(x)},i(e){te||(ot(E.$$.fragment,e),te=!0)},o(e){it(E.$$.fragment,e),te=!1},d(e){e&&t(r),e&&t(y),e&&t(_),e&&t(B),e&&t(b),e&&t(g),e&&t($),e&&t(q),e&&t(I),e&&t(G),e&&t(h),e&&t(U),e&&t(k),e&&t(J),e&&t(D),e&&t(K),lt(E,e),e&&t(Q),e&&t(C),e&&t(V),e&&t(u),e&&t(W),e&&t(T),e&&t(X),e&&t(P),e&&t(Z),e&&t(w),e&&t(ee),e&&t(A)}}}class ht extends Ze{constructor(r){super();et(this,r,null,ft,tt,{})}}export{ht as default};
