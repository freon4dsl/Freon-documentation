import{S as tr,i as or,s as ar,e as r,t as o,k as b,j as Ra,c as l,a as n,g as a,d as t,n as g,m as Ga,b as N,f as s,F as e,o as Ja,x as Ka,u as Qa,v as Va}from"../../chunks/vendor-0216fdcb.js";import{N as Xa}from"../../chunks/Note-fe348b75.js";/* empty css                                                      */function rr(q){let _,u,I,E,f,w,L;return{c(){_=o("You can use your own names for "),u=r("i"),I=o("defs"),E=o(" and "),f=r("i"),w=o("picode"),L=o(".")},l(h){_=a(h,"You can use your own names for "),u=l(h,"I",{});var y=n(u);I=a(y,"defs"),y.forEach(t),E=a(h," and "),f=l(h,"I",{});var j=n(f);w=a(j,"picode"),j.forEach(t),L=a(h,".")},m(h,y){s(h,_,y),s(h,u,y),e(u,I),s(h,E,y),s(h,f,y),e(f,w),s(h,L,y)},d(h){h&&t(_),h&&t(u),h&&t(E),h&&t(f),h&&t(L)}}}function lr(q){let _,u,I,E,f,w,L,h,y,j,p,$,k,C,O,c;return{c(){_=o("The "),u=r("i"),I=o("defs"),E=o(" and "),f=r("i"),w=o("picode"),L=o(`
  folders can have any name as long as both the `),h=r("code"),y=o("generate"),j=o(" script in "),p=r("code"),$=o("package.json"),k=o(`, and the configuration of
  the web application in the file `),C=r("code"),O=o("~/src/webapp/WebappConfiguration.ts"),c=o(", are adjusted.")},l(d){_=a(d,"The "),u=l(d,"I",{});var P=n(u);I=a(P,"defs"),P.forEach(t),E=a(d," and "),f=l(d,"I",{});var S=n(f);w=a(S,"picode"),S.forEach(t),L=a(d,`
  folders can have any name as long as both the `),h=l(d,"CODE",{});var X=n(h);y=a(X,"generate"),X.forEach(t),j=a(d," script in "),p=l(d,"CODE",{});var Z=n(p);$=a(Z,"package.json"),Z.forEach(t),k=a(d,`, and the configuration of
  the web application in the file `),C=l(d,"CODE",{});var ee=n(C);O=a(ee,"~/src/webapp/WebappConfiguration.ts"),ee.forEach(t),c=a(d,", are adjusted.")},m(d,P){s(d,_,P),s(d,u,P),e(u,I),s(d,E,P),s(d,f,P),e(f,w),s(d,L,P),s(d,h,P),e(h,y),s(d,j,P),s(d,p,P),e(p,$),s(d,k,P),s(d,C,P),e(C,O),s(d,c,P)},d(d){d&&t(_),d&&t(u),d&&t(E),d&&t(f),d&&t(L),d&&t(h),d&&t(j),d&&t(p),d&&t(k),d&&t(C),d&&t(c)}}}function nr(q){let _,u,I,E;return{c(){_=o("Be careful with handmade changes in "),u=r("i"),I=o("picode"),E=o(".")},l(f){_=a(f,"Be careful with handmade changes in "),u=l(f,"I",{});var w=n(u);I=a(w,"picode"),w.forEach(t),E=a(f,".")},m(f,w){s(f,_,w),s(f,u,w),e(u,I),s(f,E,w)},d(f){f&&t(_),f&&t(u),f&&t(E)}}}function ir(q){let _,u,I,E,f,w,L,h,y,j;return{c(){_=o("The contents of all folders in "),u=r("i"),I=o("picode"),E=o(` is divided into files (usually TypeScript classes) 
that are contained directly in the folder, and files
that are contained in the subfolder `),f=r("i"),w=o("gen"),L=o(`. The latter are always removed before regeneration, so be careful
not to add important code to the `),h=r("i"),y=o("gen"),j=o(` folder.
Code that is contained directly in each folder is not changed upon regeneration.`)},l(p){_=a(p,"The contents of all folders in "),u=l(p,"I",{});var $=n(u);I=a($,"picode"),$.forEach(t),E=a(p,` is divided into files (usually TypeScript classes) 
that are contained directly in the folder, and files
that are contained in the subfolder `),f=l(p,"I",{});var k=n(f);w=a(k,"gen"),k.forEach(t),L=a(p,`. The latter are always removed before regeneration, so be careful
not to add important code to the `),h=l(p,"I",{});var C=n(h);y=a(C,"gen"),C.forEach(t),j=a(p,` folder.
Code that is contained directly in each folder is not changed upon regeneration.`)},m(p,$){s(p,_,$),s(p,u,$),e(u,I),s(p,E,$),s(p,f,$),e(f,w),s(p,L,$),s(p,h,$),e(h,y),s(p,j,$)},d(p){p&&t(_),p&&t(u),p&&t(E),p&&t(f),p&&t(L),p&&t(h),p&&t(j)}}}function sr(q){let _,u,I,E,f,w,L,h,y,j,p,$,k,C,O,c,d,P,S,X,Z,ee,R,te,Ee,_t,Et,wt,W,bt,we,T,be,gt,yt,ge,jt,Pt,ye,It,$t,je,Lt,Tt,oe,Ct,Mt,kt,Pe,ae,Ie,Dt,At,xt,$e,re,Le,Nt,Ot,St,Te,A,Ce,Wt,Ht,Me,zt,Yt,le,Ft,Ut,Bt,ke,H,De,qt,Rt,ne,Gt,Jt,Kt,Ae,ie,xe,Qt,Vt,Xt,Ne,z,Oe,Zt,eo,se,to,oo,ao,Se,de,We,ro,lo,no,He,ce,ze,io,so,co,Ye,fe,Fe,fo,ho,po,Ue,Y,Be,uo,mo,he,vo,_o,Eo,qe,pe,Re,wo,bo,go,Ge,G,yo,Je,jo,Po,rt,x,Io,Ke,$o,Lo,Qe,To,Co,lt,F,nt,ue,Mo,it,me,ko,st,U,Do,Ve,Ao,xo,dt,J,Za='<code class="language-ts">    yarn model<span class="token operator">-</span>server</code>',ct,M,No,Xe,Oo,So,Ze,Wo,Ho,K,zo,Yo,ft,ve,Fo,ht;return W=new Xa({props:{$$slots:{content:[lr],header:[rr]},$$scope:{ctx:q}}}),F=new Xa({props:{$$slots:{content:[ir],header:[nr]},$$scope:{ctx:q}}}),{c(){_=r("h1"),u=o("Project Structure"),I=b(),E=r("p"),f=o(`This description of the project structure of a ProjectIt project is based on
the `),w=r("a"),L=o("ProjectIt-example"),h=o(` project which
you can clone from github.`),y=b(),j=r("p"),p=o("The source code (in "),$=r("code"),k=o("~/src"),C=o(") in a ProjectIt project is organised into the following subfolders."),O=b(),c=r("ul"),d=r("li"),P=r("p"),S=r("em"),X=o("defs"),Z=o(": the language definition files."),ee=b(),R=r("li"),te=r("p"),Ee=r("em"),_t=o("picode"),Et=o(": the generated source code."),wt=b(),Ra(W.$$.fragment),bt=b(),we=r("li"),T=r("p"),be=r("em"),gt=o("picode/editor"),yt=o(`: code for the editor. This folder contains two files that will not be overwritten
at regeneration: `),ge=r("code"),jt=o("Custom<yourLanguageName>Actions.ts"),Pt=o("and "),ye=r("code"),It=o("Custom<yourLanguageName>Projection.ts"),$t=o(`.
(`),je=r("code"),Lt=o("<yourLanguageName>"),Tt=o(` will be replaced by the name you have given your language in the .ast files.)
These two files are the placeholders for any `),oe=r("a"),Ct=o("third-level customization"),Mt=o(` that you
would like to do.`),kt=b(),Pe=r("li"),ae=r("p"),Ie=r("em"),Dt=o("picode/environment"),At=o(": code that provides the coupling between all parts of the generated workbench."),xt=b(),$e=r("li"),re=r("p"),Le=r("em"),Nt=o("picode/language"),Ot=o(": code that implements the language structure."),St=b(),Te=r("li"),A=r("p"),Ce=r("em"),Wt=o("picode/projectit"),Ht=o(`: code that enables the language engineer to configure the workbench.
This folder contains one file that will not be overwritten at regeneration: `),Me=r("code"),zt=o("ProjectitConfiguration.ts"),Yt=o(`.
Here you can configure any `),le=r("a"),Ft=o("third-level customization"),Ut=o(` that you want the
generated code to take into account.`),Bt=b(),ke=r("li"),H=r("p"),De=r("em"),qt=o("picode/reader"),Rt=o(": a parser that is able to read "),ne=r("a"),Gt=o("model units"),Jt=o(`
from a text string or file.`),Kt=b(),Ae=r("li"),ie=r("p"),xe=r("em"),Qt=o("picode/scoper"),Vt=o(": code for that determines which elements are visible for a certain element in the user\u2019s model."),Xt=b(),Ne=r("li"),z=r("p"),Oe=r("em"),Zt=o("picode/stdlib"),eo=o(`: code that implements some standard elements of your language, for instance
`),se=r("a"),to=o("limited concepts"),oo=o("."),ao=b(),Se=r("li"),de=r("p"),We=r("em"),ro=o("picode/typer"),lo=o(": code that that determines which type is associated with a certain element in the user\u2019s model."),no=b(),He=r("li"),ce=r("p"),ze=r("em"),io=o("picode/utils"),so=o(": a default implementation of a visitor for your user\u2019s model."),co=b(),Ye=r("li"),fe=r("p"),Fe=r("em"),fo=o("picode/validator"),ho=o(": code that determines whether or not certain parts of your user\u2019s model contain errors."),po=b(),Ue=r("li"),Y=r("p"),Be=r("em"),uo=o("picode/writer"),mo=o(": code that is able to write your user\u2019s "),he=r("a"),vo=o("model units"),_o=o(`
in string format to a file.`),Eo=b(),qe=r("li"),pe=r("p"),Re=r("em"),wo=o("webapp"),bo=o(": source code for the web-application used for all generated languages."),go=b(),Ge=r("li"),G=r("p"),yo=o("Note worthy is the file "),Je=r("code"),jo=o("picode/webapp/WebappConfiguration.ts"),Po=o(`. This file holds the references to the generated language
workbench and the web address of the server which stores your user\u2019s models.`),rt=b(),x=r("p"),Io=o("Another folder that can be found in the project is "),Ke=r("code"),$o=o("~/modelstore"),Lo=o(`. This is the folder where
the server stores all models, and it is created at the moment that the server is started.
Each model is stored in a separate folder in which you can find its
modelunits as `),Qe=r("code"),To=o(".json"),Co=o(" files."),lt=b(),Ra(F.$$.fragment),nt=b(),ue=r("h2"),Mo=o("The Webapp and Server"),it=b(),me=r("p"),ko=o(`For the language environment to function, more is needed than the code for the editor, validator and such.
In particular,
there is a need for a server which can hold and provide stored users models, and for a small web application that
is able to show the editor, errors message, models that are available form the server, and so on.`),st=b(),U=r("p"),Do=o("Therefore, we provide a minimal "),Ve=r("em"),Ao=o("server"),xo=o(` that stores your user models in a json format.
You can start it through the commandline:`),dt=b(),J=r("pre"),ct=b(),M=r("p"),No=o("A simple "),Xe=r("em"),Oo=o("web application"),So=o(` where you can see your language in action is also provided.
The code can be found in `),Ze=r("code"),Wo=o("~/webapp"),Ho=o(`. It was created
using `),K=r("a"),zo=o("Svelte"),Yo=o("."),ft=b(),ve=r("p"),Fo=o(`Note that both the server, and the web application are provided for your convenience. We assume
that when ProjectIt is used in a larger context, these two parts will be interchanged with
suitable choices made by the language engineer and team.`),this.h()},l(i){_=l(i,"H1",{});var m=n(_);u=a(m,"Project Structure"),m.forEach(t),I=g(i),E=l(i,"P",{});var Q=n(E);f=a(Q,`This description of the project structure of a ProjectIt project is based on
the `),w=l(Q,"A",{href:!0,target:!0});var et=n(w);L=a(et,"ProjectIt-example"),et.forEach(t),h=a(Q,` project which
you can clone from github.`),Q.forEach(t),y=g(i),j=l(i,"P",{});var pt=n(j);p=a(pt,"The source code (in "),$=l(pt,"CODE",{});var Xo=n($);k=a(Xo,"~/src"),Xo.forEach(t),C=a(pt,") in a ProjectIt project is organised into the following subfolders."),pt.forEach(t),O=g(i),c=l(i,"UL",{});var v=n(c);d=l(v,"LI",{});var Zo=n(d);P=l(Zo,"P",{});var Uo=n(P);S=l(Uo,"EM",{});var ea=n(S);X=a(ea,"defs"),ea.forEach(t),Z=a(Uo,": the language definition files."),Uo.forEach(t),Zo.forEach(t),ee=g(v),R=l(v,"LI",{});var ut=n(R);te=l(ut,"P",{});var Bo=n(te);Ee=l(Bo,"EM",{});var ta=n(Ee);_t=a(ta,"picode"),ta.forEach(t),Et=a(Bo,": the generated source code."),Bo.forEach(t),wt=g(ut),Ga(W.$$.fragment,ut),ut.forEach(t),bt=g(v),we=l(v,"LI",{});var oa=n(we);T=l(oa,"P",{});var D=n(T);be=l(D,"EM",{});var aa=n(be);gt=a(aa,"picode/editor"),aa.forEach(t),yt=a(D,`: code for the editor. This folder contains two files that will not be overwritten
at regeneration: `),ge=l(D,"CODE",{});var ra=n(ge);jt=a(ra,"Custom<yourLanguageName>Actions.ts"),ra.forEach(t),Pt=a(D,"and "),ye=l(D,"CODE",{});var la=n(ye);It=a(la,"Custom<yourLanguageName>Projection.ts"),la.forEach(t),$t=a(D,`.
(`),je=l(D,"CODE",{});var na=n(je);Lt=a(na,"<yourLanguageName>"),na.forEach(t),Tt=a(D,` will be replaced by the name you have given your language in the .ast files.)
These two files are the placeholders for any `),oe=l(D,"A",{href:!0});var ia=n(oe);Ct=a(ia,"third-level customization"),ia.forEach(t),Mt=a(D,` that you
would like to do.`),D.forEach(t),oa.forEach(t),kt=g(v),Pe=l(v,"LI",{});var sa=n(Pe);ae=l(sa,"P",{});var qo=n(ae);Ie=l(qo,"EM",{});var da=n(Ie);Dt=a(da,"picode/environment"),da.forEach(t),At=a(qo,": code that provides the coupling between all parts of the generated workbench."),qo.forEach(t),sa.forEach(t),xt=g(v),$e=l(v,"LI",{});var ca=n($e);re=l(ca,"P",{});var Ro=n(re);Le=l(Ro,"EM",{});var fa=n(Le);Nt=a(fa,"picode/language"),fa.forEach(t),Ot=a(Ro,": code that implements the language structure."),Ro.forEach(t),ca.forEach(t),St=g(v),Te=l(v,"LI",{});var ha=n(Te);A=l(ha,"P",{});var V=n(A);Ce=l(V,"EM",{});var pa=n(Ce);Wt=a(pa,"picode/projectit"),pa.forEach(t),Ht=a(V,`: code that enables the language engineer to configure the workbench.
This folder contains one file that will not be overwritten at regeneration: `),Me=l(V,"CODE",{});var ua=n(Me);zt=a(ua,"ProjectitConfiguration.ts"),ua.forEach(t),Yt=a(V,`.
Here you can configure any `),le=l(V,"A",{href:!0});var ma=n(le);Ft=a(ma,"third-level customization"),ma.forEach(t),Ut=a(V,` that you want the
generated code to take into account.`),V.forEach(t),ha.forEach(t),Bt=g(v),ke=l(v,"LI",{});var va=n(ke);H=l(va,"P",{});var tt=n(H);De=l(tt,"EM",{});var _a=n(De);qt=a(_a,"picode/reader"),_a.forEach(t),Rt=a(tt,": a parser that is able to read "),ne=l(tt,"A",{href:!0});var Ea=n(ne);Gt=a(Ea,"model units"),Ea.forEach(t),Jt=a(tt,`
from a text string or file.`),tt.forEach(t),va.forEach(t),Kt=g(v),Ae=l(v,"LI",{});var wa=n(Ae);ie=l(wa,"P",{});var Go=n(ie);xe=l(Go,"EM",{});var ba=n(xe);Qt=a(ba,"picode/scoper"),ba.forEach(t),Vt=a(Go,": code for that determines which elements are visible for a certain element in the user\u2019s model."),Go.forEach(t),wa.forEach(t),Xt=g(v),Ne=l(v,"LI",{});var ga=n(Ne);z=l(ga,"P",{});var ot=n(z);Oe=l(ot,"EM",{});var ya=n(Oe);Zt=a(ya,"picode/stdlib"),ya.forEach(t),eo=a(ot,`: code that implements some standard elements of your language, for instance
`),se=l(ot,"A",{href:!0});var ja=n(se);to=a(ja,"limited concepts"),ja.forEach(t),oo=a(ot,"."),ot.forEach(t),ga.forEach(t),ao=g(v),Se=l(v,"LI",{});var Pa=n(Se);de=l(Pa,"P",{});var Jo=n(de);We=l(Jo,"EM",{});var Ia=n(We);ro=a(Ia,"picode/typer"),Ia.forEach(t),lo=a(Jo,": code that that determines which type is associated with a certain element in the user\u2019s model."),Jo.forEach(t),Pa.forEach(t),no=g(v),He=l(v,"LI",{});var $a=n(He);ce=l($a,"P",{});var Ko=n(ce);ze=l(Ko,"EM",{});var La=n(ze);io=a(La,"picode/utils"),La.forEach(t),so=a(Ko,": a default implementation of a visitor for your user\u2019s model."),Ko.forEach(t),$a.forEach(t),co=g(v),Ye=l(v,"LI",{});var Ta=n(Ye);fe=l(Ta,"P",{});var Qo=n(fe);Fe=l(Qo,"EM",{});var Ca=n(Fe);fo=a(Ca,"picode/validator"),Ca.forEach(t),ho=a(Qo,": code that determines whether or not certain parts of your user\u2019s model contain errors."),Qo.forEach(t),Ta.forEach(t),po=g(v),Ue=l(v,"LI",{});var Ma=n(Ue);Y=l(Ma,"P",{});var at=n(Y);Be=l(at,"EM",{});var ka=n(Be);uo=a(ka,"picode/writer"),ka.forEach(t),mo=a(at,": code that is able to write your user\u2019s "),he=l(at,"A",{href:!0});var Da=n(he);vo=a(Da,"model units"),Da.forEach(t),_o=a(at,`
in string format to a file.`),at.forEach(t),Ma.forEach(t),Eo=g(v),qe=l(v,"LI",{});var Aa=n(qe);pe=l(Aa,"P",{});var Vo=n(pe);Re=l(Vo,"EM",{});var xa=n(Re);wo=a(xa,"webapp"),xa.forEach(t),bo=a(Vo,": source code for the web-application used for all generated languages."),Vo.forEach(t),Aa.forEach(t),go=g(v),Ge=l(v,"LI",{});var Na=n(Ge);G=l(Na,"P",{});var mt=n(G);yo=a(mt,"Note worthy is the file "),Je=l(mt,"CODE",{});var Oa=n(Je);jo=a(Oa,"picode/webapp/WebappConfiguration.ts"),Oa.forEach(t),Po=a(mt,`. This file holds the references to the generated language
workbench and the web address of the server which stores your user\u2019s models.`),mt.forEach(t),Na.forEach(t),v.forEach(t),rt=g(i),x=l(i,"P",{});var _e=n(x);Io=a(_e,"Another folder that can be found in the project is "),Ke=l(_e,"CODE",{});var Sa=n(Ke);$o=a(Sa,"~/modelstore"),Sa.forEach(t),Lo=a(_e,`. This is the folder where
the server stores all models, and it is created at the moment that the server is started.
Each model is stored in a separate folder in which you can find its
modelunits as `),Qe=l(_e,"CODE",{});var Wa=n(Qe);To=a(Wa,".json"),Wa.forEach(t),Co=a(_e," files."),_e.forEach(t),lt=g(i),Ga(F.$$.fragment,i),nt=g(i),ue=l(i,"H2",{});var Ha=n(ue);Mo=a(Ha,"The Webapp and Server"),Ha.forEach(t),it=g(i),me=l(i,"P",{});var za=n(me);ko=a(za,`For the language environment to function, more is needed than the code for the editor, validator and such.
In particular,
there is a need for a server which can hold and provide stored users models, and for a small web application that
is able to show the editor, errors message, models that are available form the server, and so on.`),za.forEach(t),st=g(i),U=l(i,"P",{});var vt=n(U);Do=a(vt,"Therefore, we provide a minimal "),Ve=l(vt,"EM",{});var Ya=n(Ve);Ao=a(Ya,"server"),Ya.forEach(t),xo=a(vt,` that stores your user models in a json format.
You can start it through the commandline:`),vt.forEach(t),dt=g(i),J=l(i,"PRE",{class:!0});var er=n(J);er.forEach(t),ct=g(i),M=l(i,"P",{});var B=n(M);No=a(B,"A simple "),Xe=l(B,"EM",{});var Fa=n(Xe);Oo=a(Fa,"web application"),Fa.forEach(t),So=a(B,` where you can see your language in action is also provided.
The code can be found in `),Ze=l(B,"CODE",{});var Ua=n(Ze);Wo=a(Ua,"~/webapp"),Ua.forEach(t),Ho=a(B,`. It was created
using `),K=l(B,"A",{href:!0,target:!0});var Ba=n(K);zo=a(Ba,"Svelte"),Ba.forEach(t),Yo=a(B,"."),B.forEach(t),ft=g(i),ve=l(i,"P",{});var qa=n(ve);Fo=a(qa,`Note that both the server, and the web application are provided for your convenience. We assume
that when ProjectIt is used in a larger context, these two parts will be interchanged with
suitable choices made by the language engineer and team.`),qa.forEach(t),this.h()},h(){N(w,"href","https://github.com/projectit-org/ProjectIt-example"),N(w,"target","_blank"),N(oe,"href","/030_Developing_a_Language/030_API_Level"),N(le,"href","/030_Developing_a_Language/030_API_Level"),N(ne,"href","/010_Intro/030_Models_and_Model_Units"),N(se,"href","/030_Developing_a_Language/010_Default_Level"),N(he,"href","/010_Intro/030_Models_and_Model_Units"),N(J,"class","language-ts"),N(K,"href","https://svelte.dev/"),N(K,"target","_blank")},m(i,m){s(i,_,m),e(_,u),s(i,I,m),s(i,E,m),e(E,f),e(E,w),e(w,L),e(E,h),s(i,y,m),s(i,j,m),e(j,p),e(j,$),e($,k),e(j,C),s(i,O,m),s(i,c,m),e(c,d),e(d,P),e(P,S),e(S,X),e(P,Z),e(c,ee),e(c,R),e(R,te),e(te,Ee),e(Ee,_t),e(te,Et),e(R,wt),Ja(W,R,null),e(c,bt),e(c,we),e(we,T),e(T,be),e(be,gt),e(T,yt),e(T,ge),e(ge,jt),e(T,Pt),e(T,ye),e(ye,It),e(T,$t),e(T,je),e(je,Lt),e(T,Tt),e(T,oe),e(oe,Ct),e(T,Mt),e(c,kt),e(c,Pe),e(Pe,ae),e(ae,Ie),e(Ie,Dt),e(ae,At),e(c,xt),e(c,$e),e($e,re),e(re,Le),e(Le,Nt),e(re,Ot),e(c,St),e(c,Te),e(Te,A),e(A,Ce),e(Ce,Wt),e(A,Ht),e(A,Me),e(Me,zt),e(A,Yt),e(A,le),e(le,Ft),e(A,Ut),e(c,Bt),e(c,ke),e(ke,H),e(H,De),e(De,qt),e(H,Rt),e(H,ne),e(ne,Gt),e(H,Jt),e(c,Kt),e(c,Ae),e(Ae,ie),e(ie,xe),e(xe,Qt),e(ie,Vt),e(c,Xt),e(c,Ne),e(Ne,z),e(z,Oe),e(Oe,Zt),e(z,eo),e(z,se),e(se,to),e(z,oo),e(c,ao),e(c,Se),e(Se,de),e(de,We),e(We,ro),e(de,lo),e(c,no),e(c,He),e(He,ce),e(ce,ze),e(ze,io),e(ce,so),e(c,co),e(c,Ye),e(Ye,fe),e(fe,Fe),e(Fe,fo),e(fe,ho),e(c,po),e(c,Ue),e(Ue,Y),e(Y,Be),e(Be,uo),e(Y,mo),e(Y,he),e(he,vo),e(Y,_o),e(c,Eo),e(c,qe),e(qe,pe),e(pe,Re),e(Re,wo),e(pe,bo),e(c,go),e(c,Ge),e(Ge,G),e(G,yo),e(G,Je),e(Je,jo),e(G,Po),s(i,rt,m),s(i,x,m),e(x,Io),e(x,Ke),e(Ke,$o),e(x,Lo),e(x,Qe),e(Qe,To),e(x,Co),s(i,lt,m),Ja(F,i,m),s(i,nt,m),s(i,ue,m),e(ue,Mo),s(i,it,m),s(i,me,m),e(me,ko),s(i,st,m),s(i,U,m),e(U,Do),e(U,Ve),e(Ve,Ao),e(U,xo),s(i,dt,m),s(i,J,m),J.innerHTML=Za,s(i,ct,m),s(i,M,m),e(M,No),e(M,Xe),e(Xe,Oo),e(M,So),e(M,Ze),e(Ze,Wo),e(M,Ho),e(M,K),e(K,zo),e(M,Yo),s(i,ft,m),s(i,ve,m),e(ve,Fo),ht=!0},p(i,[m]){const Q={};m&1&&(Q.$$scope={dirty:m,ctx:i}),W.$set(Q);const et={};m&1&&(et.$$scope={dirty:m,ctx:i}),F.$set(et)},i(i){ht||(Ka(W.$$.fragment,i),Ka(F.$$.fragment,i),ht=!0)},o(i){Qa(W.$$.fragment,i),Qa(F.$$.fragment,i),ht=!1},d(i){i&&t(_),i&&t(I),i&&t(E),i&&t(y),i&&t(j),i&&t(O),i&&t(c),Va(W),i&&t(rt),i&&t(x),i&&t(lt),Va(F,i),i&&t(nt),i&&t(ue),i&&t(it),i&&t(me),i&&t(st),i&&t(U),i&&t(dt),i&&t(J),i&&t(ct),i&&t(M),i&&t(ft),i&&t(ve)}}}class hr extends tr{constructor(_){super();or(this,_,null,sr,ar,{})}}export{hr as default};
