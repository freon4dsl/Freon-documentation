import{S as br,i as yr,s as Lr,e as r,t as o,k as w,w as cr,c as l,a as n,h as a,d as t,m as g,x as fr,b as j,g as s,H as e,y as hr,q as ur,o as pr,B as mr}from"../../chunks/vendor-0dc77bd0.js";import{N as vr}from"../../chunks/Note-b0db7989.js";/* empty css                                                      */function Pr(R){let _,m,T,E,f,b,C;return{c(){_=o("You can use your own names for "),m=r("i"),T=o("defs"),E=o(" and "),f=r("i"),b=o("picode"),C=o(".")},l(h){_=a(h,"You can use your own names for "),m=l(h,"I",{});var y=n(m);T=a(y,"defs"),y.forEach(t),E=a(h," and "),f=l(h,"I",{});var L=n(f);b=a(L,"picode"),L.forEach(t),C=a(h,".")},m(h,y){s(h,_,y),s(h,m,y),e(m,T),s(h,E,y),s(h,f,y),e(f,b),s(h,C,y)},d(h){h&&t(_),h&&t(m),h&&t(E),h&&t(f),h&&t(C)}}}function Tr(R){let _,m,T,E,f,b,C,h,y,L,u,I,A,$,H,c;return{c(){_=o("The "),m=r("i"),T=o("defs"),E=o(" and "),f=r("i"),b=o("picode"),C=o(`
  folders can have any name as long as both the `),h=r("code"),y=o("generate"),L=o(" script in "),u=r("code"),I=o("package.json"),A=o(`, and the configuration of
  the web application in the file `),$=r("code"),H=o("~/src/webapp/WebappConfiguration.ts"),c=o(", are adjusted.")},l(d){_=a(d,"The "),m=l(d,"I",{});var P=n(m);T=a(P,"defs"),P.forEach(t),E=a(d," and "),f=l(d,"I",{});var z=n(f);b=a(z,"picode"),z.forEach(t),C=a(d,`
  folders can have any name as long as both the `),h=l(d,"CODE",{});var ae=n(h);y=a(ae,"generate"),ae.forEach(t),L=a(d," script in "),u=l(d,"CODE",{});var re=n(u);I=a(re,"package.json"),re.forEach(t),A=a(d,`, and the configuration of
  the web application in the file `),$=l(d,"CODE",{});var le=n($);H=a(le,"~/src/webapp/WebappConfiguration.ts"),le.forEach(t),c=a(d,", are adjusted.")},m(d,P){s(d,_,P),s(d,m,P),e(m,T),s(d,E,P),s(d,f,P),e(f,b),s(d,C,P),s(d,h,P),e(h,y),s(d,L,P),s(d,u,P),e(u,I),s(d,A,P),s(d,$,P),e($,H),s(d,c,P)},d(d){d&&t(_),d&&t(m),d&&t(E),d&&t(f),d&&t(C),d&&t(h),d&&t(L),d&&t(u),d&&t(A),d&&t($),d&&t(c)}}}function Ir(R){let _,m,T,E;return{c(){_=o("Be careful with handmade changes in "),m=r("i"),T=o("picode"),E=o(".")},l(f){_=a(f,"Be careful with handmade changes in "),m=l(f,"I",{});var b=n(m);T=a(b,"picode"),b.forEach(t),E=a(f,".")},m(f,b){s(f,_,b),s(f,m,b),e(m,T),s(f,E,b)},d(f){f&&t(_),f&&t(m),f&&t(E)}}}function Cr(R){let _,m,T,E,f,b,C,h,y,L;return{c(){_=o("The contents of all folders in "),m=r("i"),T=o("picode"),E=o(` is divided into files (usually TypeScript classes) 
that are contained directly in the folder, and files
that are contained in the subfolder `),f=r("i"),b=o("gen"),C=o(`. The latter are always removed before regeneration, so be careful
not to add important code to the `),h=r("i"),y=o("gen"),L=o(` folder.
Code that is contained directly in each folder is not changed upon regeneration.`)},l(u){_=a(u,"The contents of all folders in "),m=l(u,"I",{});var I=n(m);T=a(I,"picode"),I.forEach(t),E=a(u,` is divided into files (usually TypeScript classes) 
that are contained directly in the folder, and files
that are contained in the subfolder `),f=l(u,"I",{});var A=n(f);b=a(A,"gen"),A.forEach(t),C=a(u,`. The latter are always removed before regeneration, so be careful
not to add important code to the `),h=l(u,"I",{});var $=n(h);y=a($,"gen"),$.forEach(t),L=a(u,` folder.
Code that is contained directly in each folder is not changed upon regeneration.`)},m(u,I){s(u,_,I),s(u,m,I),e(m,T),s(u,E,I),s(u,f,I),e(f,b),s(u,C,I),s(u,h,I),e(h,y),s(u,L,I)},d(u){u&&t(_),u&&t(m),u&&t(E),u&&t(f),u&&t(C),u&&t(h),u&&t(L)}}}function Mr(R){let _,m,T,E,f,b,C,h,y,L,u,I,A,$,H,c,d,P,z,ae,re,le,V,ne,Le,Tt,It,Ct,F,Mt,Pe,N,Te,$t,jt,Ie,kt,At,ie,Dt,Nt,xt,Ce,se,Me,Ot,St,Ht,$e,M,je,zt,Ft,ke,Wt,Yt,Ae,Ut,Bt,De,qt,Gt,de,Rt,Vt,Jt,Ne,ce,xe,Kt,Qt,Xt,Oe,W,Se,Zt,eo,fe,to,oo,ao,He,he,ze,ro,lo,no,Fe,Y,We,io,so,ue,co,fo,ho,Ye,x,Ue,uo,po,Be,mo,vo,pe,_o,Eo,wo,qe,me,Ge,go,bo,yo,Re,O,Ve,Lo,Po,Je,To,Io,ve,Co,Mo,$o,Ke,U,Qe,jo,ko,_e,Ao,Do,No,Xe,Ee,Ze,xo,Oo,So,et,J,Ho,tt,zo,Fo,ft,S,Wo,ot,Yo,Uo,at,Bo,qo,ht,B,ut,we,Go,pt,ge,Ro,mt,q,Vo,rt,Jo,Ko,vt,K,_r='<code class="language-bash">    <span class="token function">yarn</span> model-server</code>',_t,k,Qo,lt,Xo,Zo,nt,ea,ta,Q,oa,aa,Et,X,Er='<code class="language-bash">    <span class="token function">yarn</span> dev</code>',wt,be,ra,gt;return F=new vr({props:{$$slots:{content:[Tr],header:[Pr]},$$scope:{ctx:R}}}),B=new vr({props:{$$slots:{content:[Cr],header:[Ir]},$$scope:{ctx:R}}}),{c(){_=r("h1"),m=o("Project Structure"),T=w(),E=r("p"),f=o(`This description of the project structure of a Freon project is based on
the `),b=r("a"),C=o("ProjectIt-example"),h=o(` project which
you can clone from GitHub.`),y=w(),L=r("p"),u=o("The source code (in "),I=r("code"),A=o("~/src"),$=o(") in a Freon project is organised into the following subfolders."),H=w(),c=r("ul"),d=r("li"),P=r("p"),z=r("em"),ae=o("defs"),re=o(": the language definition files."),le=w(),V=r("li"),ne=r("p"),Le=r("em"),Tt=o("picode"),It=o(": the generated source code."),Ct=w(),cr(F.$$.fragment),Mt=w(),Pe=r("li"),N=r("p"),Te=r("em"),$t=o("picode/config"),jt=o(`: code that provides the coupling between all parts of the generated workbench.
This folder contains one file that will not be overwritten at regeneration: `),Ie=r("code"),kt=o("ProjectitConfiguration.ts"),At=o(`.
Here you can configure any `),ie=r("a"),Dt=o("third-level customization"),Nt=o(` that you want the
generated code to take into account.`),xt=w(),Ce=r("li"),se=r("p"),Me=r("em"),Ot=o("picode/diagrams"),St=o(`: a number of UML diagrams generated from the language structure including an UML
class diagram of the AST, an overview of all inheritance in the language, and one diagram per .ast file.
You can find all of them both in
ordinary HTML and in Markdown format. In the future we plan to make the generation customizable.`),Ht=w(),$e=r("li"),M=r("p"),je=r("em"),zt=o("picode/editor"),Ft=o(`: code for the editor. This folder contains two files that will not be overwritten
at regeneration: `),ke=r("code"),Wt=o("Custom<yourLanguageName>Actions.ts"),Yt=o("and "),Ae=r("code"),Ut=o("Custom<yourLanguageName>Projection.ts"),Bt=o(`.
(`),De=r("code"),qt=o("<yourLanguageName>"),Gt=o(` will be replaced by the name you have given your language in the .ast files.)
These two files are the placeholders for any `),de=r("a"),Rt=o("third-level customization"),Vt=o(` that you
would like to do.`),Jt=w(),Ne=r("li"),ce=r("p"),xe=r("em"),Kt=o("picode/language"),Qt=o(": code that implements the language structure."),Xt=w(),Oe=r("li"),W=r("p"),Se=r("em"),Zt=o("picode/reader"),eo=o(": a parser that is able to read "),fe=r("a"),to=o("model units"),oo=o(`
from a text string or file.`),ao=w(),He=r("li"),he=r("p"),ze=r("em"),ro=o("picode/scoper"),lo=o(": code for that determines which elements are visible for a certain element in the user\u2019s model."),no=w(),Fe=r("li"),Y=r("p"),We=r("em"),io=o("picode/stdlib"),so=o(`: code that implements some standard elements of your language, for instance
`),ue=r("a"),co=o("limited concepts"),fo=o("."),ho=w(),Ye=r("li"),x=r("p"),Ue=r("em"),uo=o("picode/typer"),po=o(`: code that that determines which type is associated with a certain element in the
user\u2019s model. The file `),Be=r("code"),mo=o("Custom<yourLanguageName>TyperPart.ts"),vo=o(" is the placeholder for any "),pe=r("a"),_o=o("third-level customization"),Eo=o(` that you
would like to do.`),wo=w(),qe=r("li"),me=r("p"),Ge=r("em"),go=o("picode/utils"),bo=o(": a default implementation of a visitor for your user\u2019s model."),yo=w(),Re=r("li"),O=r("p"),Ve=r("em"),Lo=o("picode/validator"),Po=o(`: code that determines whether or not certain parts of your user\u2019s model contain
errors. The file `),Je=r("code"),To=o("Custom<yourLanguageName>Validator.ts"),Io=o(" is the placeholder for any "),ve=r("a"),Co=o("third-level customization"),Mo=o(` that you
would like to do.`),$o=w(),Ke=r("li"),U=r("p"),Qe=r("em"),jo=o("picode/writer"),ko=o(": code that is able to write your user\u2019s "),_e=r("a"),Ao=o("model units"),Do=o(`
in string format to a file.`),No=w(),Xe=r("li"),Ee=r("p"),Ze=r("em"),xo=o("webapp"),Oo=o(": source code for the web-application used for all generated languages."),So=w(),et=r("li"),J=r("p"),Ho=o("Noteworthy is the file "),tt=r("code"),zo=o("picode/webapp/config/WebappConfiguration.ts"),Fo=o(`. This file holds the references to the generated language
workbench and the web address of the server which stores your user\u2019s models.`),ft=w(),S=r("p"),Wo=o("Another folder that can be found in the project is "),ot=r("code"),Yo=o("~/modelstore"),Uo=o(`. This is the folder where
the server stores all models, and it is created at the moment that the server is started.
Each model is stored in a separate folder in which you can find its
modelunits as `),at=r("code"),Bo=o(".json"),qo=o(" files."),ht=w(),cr(B.$$.fragment),ut=w(),we=r("h2"),Go=o("The Webapp and Server"),pt=w(),ge=r("p"),Ro=o(`For the language environment to function, more is needed than the code for the editor, validator and such.
In particular,
there is a need for a server which can hold and provide stored users models, and for a small web application that
is able to show the editor, errors message, models that are available form the server, and so on.`),mt=w(),q=r("p"),Vo=o("Therefore, we provide a minimal "),rt=r("em"),Jo=o("server"),Ko=o(` that stores your user models in a json format.
You can start it through the commandline:`),vt=w(),K=r("pre"),_t=w(),k=r("p"),Qo=o("A simple "),lt=r("em"),Xo=o("web application"),Zo=o(` where you can see your language in action is also provided.
The code can be found in `),nt=r("code"),ea=o("~/webapp"),ta=o(`. It was created
using `),Q=r("a"),oa=o("Svelte"),aa=o(`.
You can start it through the commandline:`),Et=w(),X=r("pre"),wt=w(),be=r("p"),ra=o(`Note that both the server, and the web application are provided for your convenience. We assume
that when Freon is used in a larger context, these two parts will be interchanged with
suitable choices made by the language engineer and team.`),this.h()},l(i){_=l(i,"H1",{});var p=n(_);m=a(p,"Project Structure"),p.forEach(t),T=g(i),E=l(i,"P",{});var Z=n(E);f=a(Z,`This description of the project structure of a Freon project is based on
the `),b=l(Z,"A",{href:!0,target:!0});var it=n(b);C=a(it,"ProjectIt-example"),it.forEach(t),h=a(Z,` project which
you can clone from GitHub.`),Z.forEach(t),y=g(i),L=l(i,"P",{});var bt=n(L);u=a(bt,"The source code (in "),I=l(bt,"CODE",{});var ha=n(I);A=a(ha,"~/src"),ha.forEach(t),$=a(bt,") in a Freon project is organised into the following subfolders."),bt.forEach(t),H=g(i),c=l(i,"UL",{});var v=n(c);d=l(v,"LI",{});var ua=n(d);P=l(ua,"P",{});var la=n(P);z=l(la,"EM",{});var pa=n(z);ae=a(pa,"defs"),pa.forEach(t),re=a(la,": the language definition files."),la.forEach(t),ua.forEach(t),le=g(v),V=l(v,"LI",{});var yt=n(V);ne=l(yt,"P",{});var na=n(ne);Le=l(na,"EM",{});var ma=n(Le);Tt=a(ma,"picode"),ma.forEach(t),It=a(na,": the generated source code."),na.forEach(t),Ct=g(yt),fr(F.$$.fragment,yt),yt.forEach(t),Mt=g(v),Pe=l(v,"LI",{});var va=n(Pe);N=l(va,"P",{});var ee=n(N);Te=l(ee,"EM",{});var _a=n(Te);$t=a(_a,"picode/config"),_a.forEach(t),jt=a(ee,`: code that provides the coupling between all parts of the generated workbench.
This folder contains one file that will not be overwritten at regeneration: `),Ie=l(ee,"CODE",{});var Ea=n(Ie);kt=a(Ea,"ProjectitConfiguration.ts"),Ea.forEach(t),At=a(ee,`.
Here you can configure any `),ie=l(ee,"A",{href:!0});var wa=n(ie);Dt=a(wa,"third-level customization"),wa.forEach(t),Nt=a(ee,` that you want the
generated code to take into account.`),ee.forEach(t),va.forEach(t),xt=g(v),Ce=l(v,"LI",{});var ga=n(Ce);se=l(ga,"P",{});var ia=n(se);Me=l(ia,"EM",{});var ba=n(Me);Ot=a(ba,"picode/diagrams"),ba.forEach(t),St=a(ia,`: a number of UML diagrams generated from the language structure including an UML
class diagram of the AST, an overview of all inheritance in the language, and one diagram per .ast file.
You can find all of them both in
ordinary HTML and in Markdown format. In the future we plan to make the generation customizable.`),ia.forEach(t),ga.forEach(t),Ht=g(v),$e=l(v,"LI",{});var ya=n($e);M=l(ya,"P",{});var D=n(M);je=l(D,"EM",{});var La=n(je);zt=a(La,"picode/editor"),La.forEach(t),Ft=a(D,`: code for the editor. This folder contains two files that will not be overwritten
at regeneration: `),ke=l(D,"CODE",{});var Pa=n(ke);Wt=a(Pa,"Custom<yourLanguageName>Actions.ts"),Pa.forEach(t),Yt=a(D,"and "),Ae=l(D,"CODE",{});var Ta=n(Ae);Ut=a(Ta,"Custom<yourLanguageName>Projection.ts"),Ta.forEach(t),Bt=a(D,`.
(`),De=l(D,"CODE",{});var Ia=n(De);qt=a(Ia,"<yourLanguageName>"),Ia.forEach(t),Gt=a(D,` will be replaced by the name you have given your language in the .ast files.)
These two files are the placeholders for any `),de=l(D,"A",{href:!0});var Ca=n(de);Rt=a(Ca,"third-level customization"),Ca.forEach(t),Vt=a(D,` that you
would like to do.`),D.forEach(t),ya.forEach(t),Jt=g(v),Ne=l(v,"LI",{});var Ma=n(Ne);ce=l(Ma,"P",{});var sa=n(ce);xe=l(sa,"EM",{});var $a=n(xe);Kt=a($a,"picode/language"),$a.forEach(t),Qt=a(sa,": code that implements the language structure."),sa.forEach(t),Ma.forEach(t),Xt=g(v),Oe=l(v,"LI",{});var ja=n(Oe);W=l(ja,"P",{});var st=n(W);Se=l(st,"EM",{});var ka=n(Se);Zt=a(ka,"picode/reader"),ka.forEach(t),eo=a(st,": a parser that is able to read "),fe=l(st,"A",{href:!0});var Aa=n(fe);to=a(Aa,"model units"),Aa.forEach(t),oo=a(st,`
from a text string or file.`),st.forEach(t),ja.forEach(t),ao=g(v),He=l(v,"LI",{});var Da=n(He);he=l(Da,"P",{});var da=n(he);ze=l(da,"EM",{});var Na=n(ze);ro=a(Na,"picode/scoper"),Na.forEach(t),lo=a(da,": code for that determines which elements are visible for a certain element in the user\u2019s model."),da.forEach(t),Da.forEach(t),no=g(v),Fe=l(v,"LI",{});var xa=n(Fe);Y=l(xa,"P",{});var dt=n(Y);We=l(dt,"EM",{});var Oa=n(We);io=a(Oa,"picode/stdlib"),Oa.forEach(t),so=a(dt,`: code that implements some standard elements of your language, for instance
`),ue=l(dt,"A",{href:!0});var Sa=n(ue);co=a(Sa,"limited concepts"),Sa.forEach(t),fo=a(dt,"."),dt.forEach(t),xa.forEach(t),ho=g(v),Ye=l(v,"LI",{});var Ha=n(Ye);x=l(Ha,"P",{});var te=n(x);Ue=l(te,"EM",{});var za=n(Ue);uo=a(za,"picode/typer"),za.forEach(t),po=a(te,`: code that that determines which type is associated with a certain element in the
user\u2019s model. The file `),Be=l(te,"CODE",{});var Fa=n(Be);mo=a(Fa,"Custom<yourLanguageName>TyperPart.ts"),Fa.forEach(t),vo=a(te," is the placeholder for any "),pe=l(te,"A",{href:!0});var Wa=n(pe);_o=a(Wa,"third-level customization"),Wa.forEach(t),Eo=a(te,` that you
would like to do.`),te.forEach(t),Ha.forEach(t),wo=g(v),qe=l(v,"LI",{});var Ya=n(qe);me=l(Ya,"P",{});var ca=n(me);Ge=l(ca,"EM",{});var Ua=n(Ge);go=a(Ua,"picode/utils"),Ua.forEach(t),bo=a(ca,": a default implementation of a visitor for your user\u2019s model."),ca.forEach(t),Ya.forEach(t),yo=g(v),Re=l(v,"LI",{});var Ba=n(Re);O=l(Ba,"P",{});var oe=n(O);Ve=l(oe,"EM",{});var qa=n(Ve);Lo=a(qa,"picode/validator"),qa.forEach(t),Po=a(oe,`: code that determines whether or not certain parts of your user\u2019s model contain
errors. The file `),Je=l(oe,"CODE",{});var Ga=n(Je);To=a(Ga,"Custom<yourLanguageName>Validator.ts"),Ga.forEach(t),Io=a(oe," is the placeholder for any "),ve=l(oe,"A",{href:!0});var Ra=n(ve);Co=a(Ra,"third-level customization"),Ra.forEach(t),Mo=a(oe,` that you
would like to do.`),oe.forEach(t),Ba.forEach(t),$o=g(v),Ke=l(v,"LI",{});var Va=n(Ke);U=l(Va,"P",{});var ct=n(U);Qe=l(ct,"EM",{});var Ja=n(Qe);jo=a(Ja,"picode/writer"),Ja.forEach(t),ko=a(ct,": code that is able to write your user\u2019s "),_e=l(ct,"A",{href:!0});var Ka=n(_e);Ao=a(Ka,"model units"),Ka.forEach(t),Do=a(ct,`
in string format to a file.`),ct.forEach(t),Va.forEach(t),No=g(v),Xe=l(v,"LI",{});var Qa=n(Xe);Ee=l(Qa,"P",{});var fa=n(Ee);Ze=l(fa,"EM",{});var Xa=n(Ze);xo=a(Xa,"webapp"),Xa.forEach(t),Oo=a(fa,": source code for the web-application used for all generated languages."),fa.forEach(t),Qa.forEach(t),So=g(v),et=l(v,"LI",{});var Za=n(et);J=l(Za,"P",{});var Lt=n(J);Ho=a(Lt,"Noteworthy is the file "),tt=l(Lt,"CODE",{});var er=n(tt);zo=a(er,"picode/webapp/config/WebappConfiguration.ts"),er.forEach(t),Fo=a(Lt,`. This file holds the references to the generated language
workbench and the web address of the server which stores your user\u2019s models.`),Lt.forEach(t),Za.forEach(t),v.forEach(t),ft=g(i),S=l(i,"P",{});var ye=n(S);Wo=a(ye,"Another folder that can be found in the project is "),ot=l(ye,"CODE",{});var tr=n(ot);Yo=a(tr,"~/modelstore"),tr.forEach(t),Uo=a(ye,`. This is the folder where
the server stores all models, and it is created at the moment that the server is started.
Each model is stored in a separate folder in which you can find its
modelunits as `),at=l(ye,"CODE",{});var or=n(at);Bo=a(or,".json"),or.forEach(t),qo=a(ye," files."),ye.forEach(t),ht=g(i),fr(B.$$.fragment,i),ut=g(i),we=l(i,"H2",{});var ar=n(we);Go=a(ar,"The Webapp and Server"),ar.forEach(t),pt=g(i),ge=l(i,"P",{});var rr=n(ge);Ro=a(rr,`For the language environment to function, more is needed than the code for the editor, validator and such.
In particular,
there is a need for a server which can hold and provide stored users models, and for a small web application that
is able to show the editor, errors message, models that are available form the server, and so on.`),rr.forEach(t),mt=g(i),q=l(i,"P",{});var Pt=n(q);Vo=a(Pt,"Therefore, we provide a minimal "),rt=l(Pt,"EM",{});var lr=n(rt);Jo=a(lr,"server"),lr.forEach(t),Ko=a(Pt,` that stores your user models in a json format.
You can start it through the commandline:`),Pt.forEach(t),vt=g(i),K=l(i,"PRE",{class:!0});var wr=n(K);wr.forEach(t),_t=g(i),k=l(i,"P",{});var G=n(k);Qo=a(G,"A simple "),lt=l(G,"EM",{});var nr=n(lt);Xo=a(nr,"web application"),nr.forEach(t),Zo=a(G,` where you can see your language in action is also provided.
The code can be found in `),nt=l(G,"CODE",{});var ir=n(nt);ea=a(ir,"~/webapp"),ir.forEach(t),ta=a(G,`. It was created
using `),Q=l(G,"A",{href:!0,target:!0});var sr=n(Q);oa=a(sr,"Svelte"),sr.forEach(t),aa=a(G,`.
You can start it through the commandline:`),G.forEach(t),Et=g(i),X=l(i,"PRE",{class:!0});var gr=n(X);gr.forEach(t),wt=g(i),be=l(i,"P",{});var dr=n(be);ra=a(dr,`Note that both the server, and the web application are provided for your convenience. We assume
that when Freon is used in a larger context, these two parts will be interchanged with
suitable choices made by the language engineer and team.`),dr.forEach(t),this.h()},h(){j(b,"href","https://github.com/projectit-org/ProjectIt-example"),j(b,"target","_blank"),j(ie,"href","/030_Developing_a_Language/030_API_Level"),j(de,"href","/030_Developing_a_Language/030_API_Level"),j(fe,"href","/010_Intro/030_Models_and_Model_Units"),j(ue,"href","/030_Developing_a_Language/010_Default_Level"),j(pe,"href","/030_Developing_a_Language/030_API_Level"),j(ve,"href","/030_Developing_a_Language/030_API_Level"),j(_e,"href","/010_Intro/030_Models_and_Model_Units"),j(K,"class","language-bash"),j(Q,"href","https://svelte.dev/"),j(Q,"target","_blank"),j(X,"class","language-bash")},m(i,p){s(i,_,p),e(_,m),s(i,T,p),s(i,E,p),e(E,f),e(E,b),e(b,C),e(E,h),s(i,y,p),s(i,L,p),e(L,u),e(L,I),e(I,A),e(L,$),s(i,H,p),s(i,c,p),e(c,d),e(d,P),e(P,z),e(z,ae),e(P,re),e(c,le),e(c,V),e(V,ne),e(ne,Le),e(Le,Tt),e(ne,It),e(V,Ct),hr(F,V,null),e(c,Mt),e(c,Pe),e(Pe,N),e(N,Te),e(Te,$t),e(N,jt),e(N,Ie),e(Ie,kt),e(N,At),e(N,ie),e(ie,Dt),e(N,Nt),e(c,xt),e(c,Ce),e(Ce,se),e(se,Me),e(Me,Ot),e(se,St),e(c,Ht),e(c,$e),e($e,M),e(M,je),e(je,zt),e(M,Ft),e(M,ke),e(ke,Wt),e(M,Yt),e(M,Ae),e(Ae,Ut),e(M,Bt),e(M,De),e(De,qt),e(M,Gt),e(M,de),e(de,Rt),e(M,Vt),e(c,Jt),e(c,Ne),e(Ne,ce),e(ce,xe),e(xe,Kt),e(ce,Qt),e(c,Xt),e(c,Oe),e(Oe,W),e(W,Se),e(Se,Zt),e(W,eo),e(W,fe),e(fe,to),e(W,oo),e(c,ao),e(c,He),e(He,he),e(he,ze),e(ze,ro),e(he,lo),e(c,no),e(c,Fe),e(Fe,Y),e(Y,We),e(We,io),e(Y,so),e(Y,ue),e(ue,co),e(Y,fo),e(c,ho),e(c,Ye),e(Ye,x),e(x,Ue),e(Ue,uo),e(x,po),e(x,Be),e(Be,mo),e(x,vo),e(x,pe),e(pe,_o),e(x,Eo),e(c,wo),e(c,qe),e(qe,me),e(me,Ge),e(Ge,go),e(me,bo),e(c,yo),e(c,Re),e(Re,O),e(O,Ve),e(Ve,Lo),e(O,Po),e(O,Je),e(Je,To),e(O,Io),e(O,ve),e(ve,Co),e(O,Mo),e(c,$o),e(c,Ke),e(Ke,U),e(U,Qe),e(Qe,jo),e(U,ko),e(U,_e),e(_e,Ao),e(U,Do),e(c,No),e(c,Xe),e(Xe,Ee),e(Ee,Ze),e(Ze,xo),e(Ee,Oo),e(c,So),e(c,et),e(et,J),e(J,Ho),e(J,tt),e(tt,zo),e(J,Fo),s(i,ft,p),s(i,S,p),e(S,Wo),e(S,ot),e(ot,Yo),e(S,Uo),e(S,at),e(at,Bo),e(S,qo),s(i,ht,p),hr(B,i,p),s(i,ut,p),s(i,we,p),e(we,Go),s(i,pt,p),s(i,ge,p),e(ge,Ro),s(i,mt,p),s(i,q,p),e(q,Vo),e(q,rt),e(rt,Jo),e(q,Ko),s(i,vt,p),s(i,K,p),K.innerHTML=_r,s(i,_t,p),s(i,k,p),e(k,Qo),e(k,lt),e(lt,Xo),e(k,Zo),e(k,nt),e(nt,ea),e(k,ta),e(k,Q),e(Q,oa),e(k,aa),s(i,Et,p),s(i,X,p),X.innerHTML=Er,s(i,wt,p),s(i,be,p),e(be,ra),gt=!0},p(i,[p]){const Z={};p&1&&(Z.$$scope={dirty:p,ctx:i}),F.$set(Z);const it={};p&1&&(it.$$scope={dirty:p,ctx:i}),B.$set(it)},i(i){gt||(ur(F.$$.fragment,i),ur(B.$$.fragment,i),gt=!0)},o(i){pr(F.$$.fragment,i),pr(B.$$.fragment,i),gt=!1},d(i){i&&t(_),i&&t(T),i&&t(E),i&&t(y),i&&t(L),i&&t(H),i&&t(c),mr(F),i&&t(ft),i&&t(S),i&&t(ht),mr(B,i),i&&t(ut),i&&t(we),i&&t(pt),i&&t(ge),i&&t(mt),i&&t(q),i&&t(vt),i&&t(K),i&&t(_t),i&&t(k),i&&t(Et),i&&t(X),i&&t(wt),i&&t(be)}}}class Ar extends br{constructor(_){super();yr(this,_,null,Mr,Lr,{})}}export{Ar as default};
