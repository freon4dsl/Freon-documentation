import{S as Hl,i as Sl,s as Ol,e as l,t as o,k as p,w as me,c as n,a as s,h as a,d as r,m as d,x as _e,b as _,g as h,H as e,y as ge,q as ve,o as we,B as Ee}from"../../chunks/vendor-0dc77bd0.js";import{N as Pt}from"../../chunks/Note-b0db7989.js";import{F as ml}from"../../chunks/Figure-4dd15a94.js";/* empty css                                                      *//* empty css                                                        */function Al(E){let c;return{c(){c=o("Open browser at localhost")},l(i){c=a(i,"Open browser at localhost")},m(i,g){h(i,c,g)},d(i){i&&r(c)}}}function Dl(E){let c,i,g,v;return{c(){c=o("The last command opens your preferred browser with the generated editor for the language `Entity` on\n`"),i=l("a"),g=o("http://localhost:5000/"),v=o(`\`. If Chrome is not
your preferred browser, please open the above page in Chrome, because we cannot
ensure that the editor functions as it should in other browsers."`),this.h()},l(u){c=a(u,"The last command opens your preferred browser with the generated editor for the language `Entity` on\n`"),i=n(u,"A",{href:!0,target:!0});var m=s(i);g=a(m,"http://localhost:5000/"),m.forEach(r),v=a(u,`\`. If Chrome is not
your preferred browser, please open the above page in Chrome, because we cannot
ensure that the editor functions as it should in other browsers."`),this.h()},h(){_(i,"href","http://localhost:5000/"),_(i,"target","_blank")},m(u,m){h(u,c,m),h(u,i,m),e(i,g),h(u,v,m)},d(u){u&&r(c),u&&r(i),u&&r(v)}}}function Fl(E){let c;return{c(){c=o("Use Help Menu")},l(i){c=a(i,"Use Help Menu")},m(i,g){h(i,c,g)},d(i){i&&r(c)}}}function Ml(E){let c,i,g,v;return{c(){c=o("If you are having trouble using the editor, have a look at the key-bindings under the "),i=l("em"),g=o("Help"),v=o(" menu.")},l(u){c=a(u,"If you are having trouble using the editor, have a look at the key-bindings under the "),i=n(u,"EM",{});var m=s(i);g=a(m,"Help"),m.forEach(r),v=a(u," menu.")},m(u,m){h(u,c,m),h(u,i,m),e(i,g),h(u,v,m)},d(u){u&&r(c),u&&r(i),u&&r(v)}}}function Nl(E){let c;return{c(){c=o("Only the language structure is required")},l(i){c=a(i,"Only the language structure is required")},m(i,g){h(i,c,g)},d(i){i&&r(c)}}}function Ul(E){let c;return{c(){c=o(`To start, you only need to define the language structure,
    defaults will be generated for the editor, scoper, typer, and validator. This is called the first
    level of customization.`)},l(i){c=a(i,`To start, you only need to define the language structure,
    defaults will be generated for the editor, scoper, typer, and validator. This is called the first
    level of customization.`)},m(i,g){h(i,c,g)},d(i){i&&r(c)}}}function Rl(E){let c;return{c(){c=o("Open browser at localhost")},l(i){c=a(i,"Open browser at localhost")},m(i,g){h(i,c,g)},d(i){i&&r(c)}}}function Gl(E){let c,i,g,v;return{c(){c=o("The last command opens your preferred browser with the generated editor for the language\n    `Entity` on `"),i=l("a"),g=o("http://localhost:3000/"),v=o(`\`. 
    If Chrome is not your preferred browser, please open the above page in Chrome, because we 
    cannot ensure that the editor functions as it should in other browsers.`),this.h()},l(u){c=a(u,"The last command opens your preferred browser with the generated editor for the language\n    `Entity` on `"),i=n(u,"A",{href:!0,target:!0});var m=s(i);g=a(m,"http://localhost:3000/"),m.forEach(r),v=a(u,`\`. 
    If Chrome is not your preferred browser, please open the above page in Chrome, because we 
    cannot ensure that the editor functions as it should in other browsers.`),this.h()},h(){_(i,"href","http://localhost:3000/"),_(i,"target","_blank")},m(u,m){h(u,c,m),h(u,i,m),e(i,g),h(u,v,m)},d(u){u&&r(c),u&&r(i),u&&r(v)}}}function Wl(E){let c;return{c(){c=o("Use Help Menu")},l(i){c=a(i,"Use Help Menu")},m(i,g){h(i,c,g)},d(i){i&&r(c)}}}function Yl(E){let c,i,g,v;return{c(){c=o("If you are having trouble using the editor, have a look at the key-bindings under the "),i=l("em"),g=o("Help"),v=o(" menu.")},l(u){c=a(u,"If you are having trouble using the editor, have a look at the key-bindings under the "),i=n(u,"EM",{});var m=s(i);g=a(m,"Help"),m.forEach(r),v=a(u," menu.")},m(u,m){h(u,c,m),h(u,i,m),e(i,g),h(u,v,m)},d(u){u&&r(c),u&&r(i),u&&r(v)}}}function ql(E){let c,i,g,v,u,m,dr,mr,B,_r,gr,z,vr,wr,Lt,be,Er,Ct,ye,br,xt,$e,yr,Tt,b,ze,I,$r,Je,jr,kr,J,Ir,Pr,je,Lr,Cr,xr,K,Ke,Tr,Hr,ke,_l='<code class="language-bash"><span class="token function">yarn</span> <span class="token function">install</span></code>',Sr,Q,Qe,Or,Ar,Ie,gl='<code class="language-bash"><span class="token function">yarn</span> generate</code>',Dr,V,Ve,Fr,Mr,Pe,vl='<code class="language-bash"><span class="token function">yarn</span> model-server</code>',Nr,X,Xe,Ur,Rr,Le,wl=`<code class="language-bash"><span class="token function">yarn</span> prepare-app   <span class="token comment"># Needed to generate the runtime CSS files.</span>
<span class="token function">yarn</span> dev</code>`,Ht,O,St,Ce,Ze,Gr,Ot,A,At,xe,Wr,Dt,D,Yr,Te,qr,Br,Ft,j,et,P,zr,tt,Jr,Kr,Z,Qr,Vr,He,Xr,Zr,eo,ee,rt,to,ro,Se,El='<code class="language-bash"><span class="token function">yarn</span> <span class="token function">install</span></code>',oo,ot,L,ao,at,lo,no,lt,so,io,nt,fo,ho,co,st,$,uo,it,po,mo,ft,_o,go,ht,vo,wo,Oe,Eo,bo,Mt,F,Nt,Ae,w,yo,ct,$o,jo,ut,ko,Io,pt,Po,Lo,dt,Co,xo,mt,To,Ho,_t,So,Oo,Ut,te,Rt,De,re,Ao,gt,Do,Fo,Gt,oe,bl='<code class="language-bash">    <span class="token function">yarn</span> generate</code>',Wt,x,ae,le,Mo,vt,No,Uo,Ro,ne,Go,se,ie,Wo,wt,Yo,qo,Bo,Fe,yl='<code class="language-bash"><span class="token function">yarn</span> model-server</code>',zo,fe,Et,Jo,Ko,Me,$l=`<code class="language-bash"><span class="token function">yarn</span> prepare-app   <span class="token comment"># Needed to generate the runtime CSS files.</span>
<span class="token function">yarn</span> dev</code>`,Yt,M,qt,Ne,bt,Qo,Bt,N,zt,Ue,Vo,Jt,Re,Xo,Kt,k,S,Zo,he,ea,ta,yt,ra,oa,aa,ce,la,Ge,na,sa,ia,ue,fa,We,ha,ca,ua,pe,pa,Ye,da,ma,Qt,U,_a,de,ga,va,Vt;return O=new Pt({props:{$$slots:{content:[Dl],header:[Al]},$$scope:{ctx:E}}}),A=new Pt({props:{$$slots:{content:[Ml],header:[Fl]},$$scope:{ctx:E}}}),F=new Pt({props:{$$slots:{content:[Ul],header:[Nl]},$$scope:{ctx:E}}}),te=new ml({props:{imageName:"packagejsonadjustment.png",caption:"Screenshot of package.json",figureNumber:1}}),ne=new ml({props:{imageName:"webappconfiguration.png",caption:"Screenshot of WebappConfiguration",figureNumber:2}}),M=new Pt({props:{$$slots:{content:[Gl],header:[Rl]},$$scope:{ctx:E}}}),N=new Pt({props:{$$slots:{content:[Yl],header:[Wl]},$$scope:{ctx:E}}}),{c(){c=l("h1"),i=o("Installing and Using Freon"),g=p(),v=l("p"),u=o("Be sure to have "),m=l("a"),dr=o("node.js"),mr=o(`
and `),B=l("a"),_r=o("yarn"),gr=o(`
running. We are typically using the latest versions of all,
although older versions likely work just as well.
You could also try and use `),z=l("a"),vr=o("npm"),wr=o(" instead of yarn."),Lt=p(),be=l("p"),Er=o(`There are two ways to start with Freon, either use our
Example project or use our Template project.`),Ct=p(),ye=l("h2"),br=o("Start with the Example Project"),xt=p(),$e=l("p"),yr=o(`The simplest manner to start working with Freon is to clone the example project from GitHub.
In the following the root of your project will be indicated with \u2019~\u2018.`),Tt=p(),b=l("ul"),ze=l("li"),I=l("p"),$r=o("Clone branch "),Je=l("code"),jr=o("master"),kr=o(" from "),J=l("a"),Ir=o("https://github.com/projectit-org/ProjectIt-example"),Pr=o(` in your preferred IDE.
(For an explanation of the content of the project see
`),je=l("a"),Lr=o("Project_Structure"),Cr=o(")."),xr=p(),K=l("li"),Ke=l("p"),Tr=o("Next, install all necessary packages by running:"),Hr=p(),ke=l("pre"),Sr=p(),Q=l("li"),Qe=l("p"),Or=o("Run the generator and see the generated files appearing in the folder ~/src/picode:"),Ar=p(),Ie=l("pre"),Dr=p(),V=l("li"),Ve=l("p"),Fr=o("Start the server (note that anything that is saved in the editor will be stored in ~/modelstore):"),Mr=p(),Pe=l("pre"),Nr=p(),X=l("li"),Xe=l("p"),Ur=o("Open another (bash) terminal, and start the generated editor from it:"),Rr=p(),Le=l("pre"),Ht=p(),me(O.$$.fragment),St=p(),Ce=l("ul"),Ze=l("li"),Gr=o("Try out the editor"),Ot=p(),me(A.$$.fragment),At=p(),xe=l("h2"),Wr=o("Start with the Template project"),Dt=p(),D=l("p"),Yr=o(`Another way to start working with Freon is to clone our template project from GitHub. The template
project provides a shell for the generated editor that enables the user to work with multiple models and
`),Te=l("a"),qr=o("model units"),Br=o(`.
In the following the root of the project will be indicated with \u2019~\u2018.`),Ft=p(),j=l("ul"),et=l("li"),P=l("p"),zr=o("Clone branch "),tt=l("code"),Jr=o("master"),Kr=o(" from "),Z=l("a"),Qr=o("https://github.com/projectit-org/ProjectIt-template"),Vr=o(`.
(For an explanation of the content of the project see
`),He=l("a"),Xr=o("Project_Structure"),Zr=o(")."),eo=p(),ee=l("li"),rt=l("p"),to=o("Next, install all necessary packages by running:"),ro=p(),Se=l("pre"),oo=p(),ot=l("li"),L=l("p"),ao=o("Create a folder for your language in "),at=l("code"),lo=o("~/src"),no=o(`, to hold the definition files for your language.
We usually call it `),lt=l("em"),so=o("defs"),io=o(", but any name will do. (Here the name "),nt=l("em"),fo=o("defs"),ho=o(" will be used.)"),co=p(),st=l("li"),$=l("p"),uo=o(`Create a language definition file which defines the structure of your language. The
extension of this file must be `),it=l("code"),po=o(".ast"),mo=o(`. You can, for instance, copy
`),ft=l("code"),_o=o("EntityLanguage.ast"),go=o(" from the Freon example to your own "),ht=l("code"),vo=o("defs"),wo=o(`-folder. Or, you can follow the
tutorial on `),Oe=l("a"),Eo=o("language structure definition"),bo=o("."),Mt=p(),me(F.$$.fragment),Nt=p(),Ae=l("ul"),w=l("li"),yo=o("Next, adjust the "),ct=l("code"),$o=o("scripts"),jo=o(" entry in the "),ut=l("em"),ko=o("package.json"),Io=o(" file. The "),pt=l("code"),Po=o("generate"),Lo=o(`
script should include your `),dt=l("em"),Co=o("defs"),xo=o(` folder as well as the folder where you want the
generated code to be stored.
In the following screenshot, we use `),mt=l("code"),To=o("~/src/defs"),Ho=o(" and "),_t=l("code"),So=o("~/src/picode"),Oo=o(", respectively."),Ut=p(),me(te.$$.fragment),Rt=p(),De=l("ul"),re=l("li"),Ao=o(`Run the generator and see the generated files appearing in the folder where you
decided to store the generated code (in the screenshot we used `),gt=l("code"),Do=o("src/picode"),Fo=o("):"),Gt=p(),oe=l("pre"),Wt=p(),x=l("ul"),ae=l("li"),le=l("p"),Mo=o(`Adjust the configuration of the web application by changing the two lines in the file
`),vt=l("code"),No=o("~/src/webapp/config/WebappConfiguration.ts"),Uo=o("."),Ro=p(),me(ne.$$.fragment),Go=p(),se=l("li"),ie=l("p"),Wo=o("Start the server (note that anything that is saved in the editor will be stored in "),wt=l("code"),Yo=o("~/modelstore"),qo=o("):"),Bo=p(),Fe=l("pre"),zo=p(),fe=l("li"),Et=l("p"),Jo=o("Open another (bash) terminal, and start the generated editor from it:"),Ko=p(),Me=l("pre"),Yt=p(),me(M.$$.fragment),qt=p(),Ne=l("ul"),bt=l("li"),Qo=o("Try out the editor"),Bt=p(),me(N.$$.fragment),zt=p(),Ue=l("h2"),Vo=o("Next steps"),Jt=p(),Re=l("p"),Xo=o("Now you are ready for a closer look at Freon. You can for instance:"),Kt=p(),k=l("ul"),S=l("li"),Zo=o(`Have a look at how the example language is defined by browsing through the language definition
files in the `),he=l("a"),ea=o("ProjectIt Example project"),ta=o(`.
You can find them in `),yt=l("code"),ra=o("~/src/defs"),oa=o("."),aa=p(),ce=l("li"),la=o("Read "),Ge=l("a"),na=o("Developing a language"),sa=o(" to see how you can create your own language."),ia=p(),ue=l("li"),fa=o("Have a look at the "),We=l("a"),ha=o("structure"),ca=o(" of the generated project."),ua=p(),pe=l("li"),pa=o("See what the different options there are for calling the "),Ye=l("a"),da=o("Freon generator"),ma=o("."),Qt=p(),U=l("p"),_a=o(`If you are working with Webstorm, you might consider installing the
plugin `),de=l("a"),ga=o("Awesome Console"),va=o(`.
This plugin redirects a click on an error message in the console to the correct position in any of the language definition files.`),this.h()},l(t){c=n(t,"H1",{});var f=s(c);i=a(f,"Installing and Using Freon"),f.forEach(r),g=d(t),v=n(t,"P",{});var C=s(v);u=a(C,"Be sure to have "),m=n(C,"A",{href:!0,target:!0});var $t=s(m);dr=a($t,"node.js"),$t.forEach(r),mr=a(C,`
and `),B=n(C,"A",{href:!0,target:!0});var jt=s(B);_r=a(jt,"yarn"),jt.forEach(r),gr=a(C,`
running. We are typically using the latest versions of all,
although older versions likely work just as well.
You could also try and use `),z=n(C,"A",{href:!0,target:!0});var kt=s(z);vr=a(kt,"npm"),kt.forEach(r),wr=a(C," instead of yarn."),C.forEach(r),Lt=d(t),be=n(t,"P",{});var It=s(be);Er=a(It,`There are two ways to start with Freon, either use our
Example project or use our Template project.`),It.forEach(r),Ct=d(t),ye=n(t,"H2",{});var wa=s(ye);br=a(wa,"Start with the Example Project"),wa.forEach(r),xt=d(t),$e=n(t,"P",{});var Ea=s($e);yr=a(Ea,`The simplest manner to start working with Freon is to clone the example project from GitHub.
In the following the root of your project will be indicated with \u2019~\u2018.`),Ea.forEach(r),Tt=d(t),b=n(t,"UL",{});var T=s(b);ze=n(T,"LI",{});var ba=s(ze);I=n(ba,"P",{});var R=s(I);$r=a(R,"Clone branch "),Je=n(R,"CODE",{});var ya=s(Je);jr=a(ya,"master"),ya.forEach(r),kr=a(R," from "),J=n(R,"A",{href:!0,target:!0});var $a=s(J);Ir=a($a,"https://github.com/projectit-org/ProjectIt-example"),$a.forEach(r),Pr=a(R,` in your preferred IDE.
(For an explanation of the content of the project see
`),je=n(R,"A",{href:!0});var ja=s(je);Lr=a(ja,"Project_Structure"),ja.forEach(r),Cr=a(R,")."),R.forEach(r),ba.forEach(r),xr=d(T),K=n(T,"LI",{});var Xt=s(K);Ke=n(Xt,"P",{});var ka=s(Ke);Tr=a(ka,"Next, install all necessary packages by running:"),ka.forEach(r),Hr=d(Xt),ke=n(Xt,"PRE",{class:!0});var jl=s(ke);jl.forEach(r),Xt.forEach(r),Sr=d(T),Q=n(T,"LI",{});var Zt=s(Q);Qe=n(Zt,"P",{});var Ia=s(Qe);Or=a(Ia,"Run the generator and see the generated files appearing in the folder ~/src/picode:"),Ia.forEach(r),Ar=d(Zt),Ie=n(Zt,"PRE",{class:!0});var kl=s(Ie);kl.forEach(r),Zt.forEach(r),Dr=d(T),V=n(T,"LI",{});var er=s(V);Ve=n(er,"P",{});var Pa=s(Ve);Fr=a(Pa,"Start the server (note that anything that is saved in the editor will be stored in ~/modelstore):"),Pa.forEach(r),Mr=d(er),Pe=n(er,"PRE",{class:!0});var Il=s(Pe);Il.forEach(r),er.forEach(r),Nr=d(T),X=n(T,"LI",{});var tr=s(X);Xe=n(tr,"P",{});var La=s(Xe);Ur=a(La,"Open another (bash) terminal, and start the generated editor from it:"),La.forEach(r),Rr=d(tr),Le=n(tr,"PRE",{class:!0});var Pl=s(Le);Pl.forEach(r),tr.forEach(r),T.forEach(r),Ht=d(t),_e(O.$$.fragment,t),St=d(t),Ce=n(t,"UL",{});var Ca=s(Ce);Ze=n(Ca,"LI",{});var xa=s(Ze);Gr=a(xa,"Try out the editor"),xa.forEach(r),Ca.forEach(r),Ot=d(t),_e(A.$$.fragment,t),At=d(t),xe=n(t,"H2",{});var Ta=s(xe);Wr=a(Ta,"Start with the Template project"),Ta.forEach(r),Dt=d(t),D=n(t,"P",{});var rr=s(D);Yr=a(rr,`Another way to start working with Freon is to clone our template project from GitHub. The template
project provides a shell for the generated editor that enables the user to work with multiple models and
`),Te=n(rr,"A",{href:!0});var Ha=s(Te);qr=a(Ha,"model units"),Ha.forEach(r),Br=a(rr,`.
In the following the root of the project will be indicated with \u2019~\u2018.`),rr.forEach(r),Ft=d(t),j=n(t,"UL",{});var G=s(j);et=n(G,"LI",{});var Sa=s(et);P=n(Sa,"P",{});var W=s(P);zr=a(W,"Clone branch "),tt=n(W,"CODE",{});var Oa=s(tt);Jr=a(Oa,"master"),Oa.forEach(r),Kr=a(W," from "),Z=n(W,"A",{href:!0,target:!0});var Aa=s(Z);Qr=a(Aa,"https://github.com/projectit-org/ProjectIt-template"),Aa.forEach(r),Vr=a(W,`.
(For an explanation of the content of the project see
`),He=n(W,"A",{href:!0});var Da=s(He);Xr=a(Da,"Project_Structure"),Da.forEach(r),Zr=a(W,")."),W.forEach(r),Sa.forEach(r),eo=d(G),ee=n(G,"LI",{});var or=s(ee);rt=n(or,"P",{});var Fa=s(rt);to=a(Fa,"Next, install all necessary packages by running:"),Fa.forEach(r),ro=d(or),Se=n(or,"PRE",{class:!0});var Ll=s(Se);Ll.forEach(r),or.forEach(r),oo=d(G),ot=n(G,"LI",{});var Ma=s(ot);L=n(Ma,"P",{});var Y=s(L);ao=a(Y,"Create a folder for your language in "),at=n(Y,"CODE",{});var Na=s(at);lo=a(Na,"~/src"),Na.forEach(r),no=a(Y,`, to hold the definition files for your language.
We usually call it `),lt=n(Y,"EM",{});var Ua=s(lt);so=a(Ua,"defs"),Ua.forEach(r),io=a(Y,", but any name will do. (Here the name "),nt=n(Y,"EM",{});var Ra=s(nt);fo=a(Ra,"defs"),Ra.forEach(r),ho=a(Y," will be used.)"),Y.forEach(r),Ma.forEach(r),co=d(G),st=n(G,"LI",{});var Ga=s(st);$=n(Ga,"P",{});var H=s($);uo=a(H,`Create a language definition file which defines the structure of your language. The
extension of this file must be `),it=n(H,"CODE",{});var Wa=s(it);po=a(Wa,".ast"),Wa.forEach(r),mo=a(H,`. You can, for instance, copy
`),ft=n(H,"CODE",{});var Ya=s(ft);_o=a(Ya,"EntityLanguage.ast"),Ya.forEach(r),go=a(H," from the Freon example to your own "),ht=n(H,"CODE",{});var qa=s(ht);vo=a(qa,"defs"),qa.forEach(r),wo=a(H,`-folder. Or, you can follow the
tutorial on `),Oe=n(H,"A",{href:!0});var Ba=s(Oe);Eo=a(Ba,"language structure definition"),Ba.forEach(r),bo=a(H,"."),H.forEach(r),Ga.forEach(r),G.forEach(r),Mt=d(t),_e(F.$$.fragment,t),Nt=d(t),Ae=n(t,"UL",{});var za=s(Ae);w=n(za,"LI",{});var y=s(w);yo=a(y,"Next, adjust the "),ct=n(y,"CODE",{});var Ja=s(ct);$o=a(Ja,"scripts"),Ja.forEach(r),jo=a(y," entry in the "),ut=n(y,"EM",{});var Ka=s(ut);ko=a(Ka,"package.json"),Ka.forEach(r),Io=a(y," file. The "),pt=n(y,"CODE",{});var Qa=s(pt);Po=a(Qa,"generate"),Qa.forEach(r),Lo=a(y,`
script should include your `),dt=n(y,"EM",{});var Va=s(dt);Co=a(Va,"defs"),Va.forEach(r),xo=a(y,` folder as well as the folder where you want the
generated code to be stored.
In the following screenshot, we use `),mt=n(y,"CODE",{});var Xa=s(mt);To=a(Xa,"~/src/defs"),Xa.forEach(r),Ho=a(y," and "),_t=n(y,"CODE",{});var Za=s(_t);So=a(Za,"~/src/picode"),Za.forEach(r),Oo=a(y,", respectively."),y.forEach(r),za.forEach(r),Ut=d(t),_e(te.$$.fragment,t),Rt=d(t),De=n(t,"UL",{});var el=s(De);re=n(el,"LI",{});var ar=s(re);Ao=a(ar,`Run the generator and see the generated files appearing in the folder where you
decided to store the generated code (in the screenshot we used `),gt=n(ar,"CODE",{});var tl=s(gt);Do=a(tl,"src/picode"),tl.forEach(r),Fo=a(ar,"):"),ar.forEach(r),el.forEach(r),Gt=d(t),oe=n(t,"PRE",{class:!0});var Cl=s(oe);Cl.forEach(r),Wt=d(t),x=n(t,"UL",{});var qe=s(x);ae=n(qe,"LI",{});var lr=s(ae);le=n(lr,"P",{});var nr=s(le);Mo=a(nr,`Adjust the configuration of the web application by changing the two lines in the file
`),vt=n(nr,"CODE",{});var rl=s(vt);No=a(rl,"~/src/webapp/config/WebappConfiguration.ts"),rl.forEach(r),Uo=a(nr,"."),nr.forEach(r),Ro=d(lr),_e(ne.$$.fragment,lr),lr.forEach(r),Go=d(qe),se=n(qe,"LI",{});var sr=s(se);ie=n(sr,"P",{});var ir=s(ie);Wo=a(ir,"Start the server (note that anything that is saved in the editor will be stored in "),wt=n(ir,"CODE",{});var ol=s(wt);Yo=a(ol,"~/modelstore"),ol.forEach(r),qo=a(ir,"):"),ir.forEach(r),Bo=d(sr),Fe=n(sr,"PRE",{class:!0});var xl=s(Fe);xl.forEach(r),sr.forEach(r),zo=d(qe),fe=n(qe,"LI",{});var fr=s(fe);Et=n(fr,"P",{});var al=s(Et);Jo=a(al,"Open another (bash) terminal, and start the generated editor from it:"),al.forEach(r),Ko=d(fr),Me=n(fr,"PRE",{class:!0});var Tl=s(Me);Tl.forEach(r),fr.forEach(r),qe.forEach(r),Yt=d(t),_e(M.$$.fragment,t),qt=d(t),Ne=n(t,"UL",{});var ll=s(Ne);bt=n(ll,"LI",{});var nl=s(bt);Qo=a(nl,"Try out the editor"),nl.forEach(r),ll.forEach(r),Bt=d(t),_e(N.$$.fragment,t),zt=d(t),Ue=n(t,"H2",{});var sl=s(Ue);Vo=a(sl,"Next steps"),sl.forEach(r),Jt=d(t),Re=n(t,"P",{});var il=s(Re);Xo=a(il,"Now you are ready for a closer look at Freon. You can for instance:"),il.forEach(r),Kt=d(t),k=n(t,"UL",{});var q=s(k);S=n(q,"LI",{});var Be=s(S);Zo=a(Be,`Have a look at how the example language is defined by browsing through the language definition
files in the `),he=n(Be,"A",{href:!0,target:!0});var fl=s(he);ea=a(fl,"ProjectIt Example project"),fl.forEach(r),ta=a(Be,`.
You can find them in `),yt=n(Be,"CODE",{});var hl=s(yt);ra=a(hl,"~/src/defs"),hl.forEach(r),oa=a(Be,"."),Be.forEach(r),aa=d(q),ce=n(q,"LI",{});var hr=s(ce);la=a(hr,"Read "),Ge=n(hr,"A",{href:!0});var cl=s(Ge);na=a(cl,"Developing a language"),cl.forEach(r),sa=a(hr," to see how you can create your own language."),hr.forEach(r),ia=d(q),ue=n(q,"LI",{});var cr=s(ue);fa=a(cr,"Have a look at the "),We=n(cr,"A",{href:!0});var ul=s(We);ha=a(ul,"structure"),ul.forEach(r),ca=a(cr," of the generated project."),cr.forEach(r),ua=d(q),pe=n(q,"LI",{});var ur=s(pe);pa=a(ur,"See what the different options there are for calling the "),Ye=n(ur,"A",{href:!0});var pl=s(Ye);da=a(pl,"Freon generator"),pl.forEach(r),ma=a(ur,"."),ur.forEach(r),q.forEach(r),Qt=d(t),U=n(t,"P",{});var pr=s(U);_a=a(pr,`If you are working with Webstorm, you might consider installing the
plugin `),de=n(pr,"A",{href:!0,target:!0});var dl=s(de);ga=a(dl,"Awesome Console"),dl.forEach(r),va=a(pr,`.
This plugin redirects a click on an error message in the console to the correct position in any of the language definition files.`),pr.forEach(r),this.h()},h(){_(m,"href","https://nodejs.org/"),_(m,"target","_blank"),_(B,"href","https://yarnpkg.com/"),_(B,"target","_blank"),_(z,"href","https://www.npmjs.com/"),_(z,"target","_blank"),_(J,"href","https://github.com/projectit-org/ProjectIt-example"),_(J,"target","_blank"),_(je,"href","/020_Getting_Started/020_Project_Structure"),_(ke,"class","language-bash"),_(Ie,"class","language-bash"),_(Pe,"class","language-bash"),_(Le,"class","language-bash"),_(Te,"href","/010_Intro/030_Models_and_Model_Units"),_(Z,"href","https://github.com/projectit-org/ProjectIt-template"),_(Z,"target","_blank"),_(He,"href","/020_Getting_Started/020_Project_Structure"),_(Se,"class","language-bash"),_(Oe,"href","/030_Developing_a_Language/010_Default_Level"),_(oe,"class","language-bash"),_(Fe,"class","language-bash"),_(Me,"class","language-bash"),_(he,"href","https://github.com/projectit-org/ProjectIt-example"),_(he,"target","_blank"),_(Ge,"href","/030_Developing_a_Language"),_(We,"href","/020_Getting_Started/020_Project_Structure"),_(Ye,"href","/020_Getting_Started/030_Calling_the_Generator"),_(de,"href","https://plugins.jetbrains.com/plugin/7677-awesome-console"),_(de,"target","_blank")},m(t,f){h(t,c,f),e(c,i),h(t,g,f),h(t,v,f),e(v,u),e(v,m),e(m,dr),e(v,mr),e(v,B),e(B,_r),e(v,gr),e(v,z),e(z,vr),e(v,wr),h(t,Lt,f),h(t,be,f),e(be,Er),h(t,Ct,f),h(t,ye,f),e(ye,br),h(t,xt,f),h(t,$e,f),e($e,yr),h(t,Tt,f),h(t,b,f),e(b,ze),e(ze,I),e(I,$r),e(I,Je),e(Je,jr),e(I,kr),e(I,J),e(J,Ir),e(I,Pr),e(I,je),e(je,Lr),e(I,Cr),e(b,xr),e(b,K),e(K,Ke),e(Ke,Tr),e(K,Hr),e(K,ke),ke.innerHTML=_l,e(b,Sr),e(b,Q),e(Q,Qe),e(Qe,Or),e(Q,Ar),e(Q,Ie),Ie.innerHTML=gl,e(b,Dr),e(b,V),e(V,Ve),e(Ve,Fr),e(V,Mr),e(V,Pe),Pe.innerHTML=vl,e(b,Nr),e(b,X),e(X,Xe),e(Xe,Ur),e(X,Rr),e(X,Le),Le.innerHTML=wl,h(t,Ht,f),ge(O,t,f),h(t,St,f),h(t,Ce,f),e(Ce,Ze),e(Ze,Gr),h(t,Ot,f),ge(A,t,f),h(t,At,f),h(t,xe,f),e(xe,Wr),h(t,Dt,f),h(t,D,f),e(D,Yr),e(D,Te),e(Te,qr),e(D,Br),h(t,Ft,f),h(t,j,f),e(j,et),e(et,P),e(P,zr),e(P,tt),e(tt,Jr),e(P,Kr),e(P,Z),e(Z,Qr),e(P,Vr),e(P,He),e(He,Xr),e(P,Zr),e(j,eo),e(j,ee),e(ee,rt),e(rt,to),e(ee,ro),e(ee,Se),Se.innerHTML=El,e(j,oo),e(j,ot),e(ot,L),e(L,ao),e(L,at),e(at,lo),e(L,no),e(L,lt),e(lt,so),e(L,io),e(L,nt),e(nt,fo),e(L,ho),e(j,co),e(j,st),e(st,$),e($,uo),e($,it),e(it,po),e($,mo),e($,ft),e(ft,_o),e($,go),e($,ht),e(ht,vo),e($,wo),e($,Oe),e(Oe,Eo),e($,bo),h(t,Mt,f),ge(F,t,f),h(t,Nt,f),h(t,Ae,f),e(Ae,w),e(w,yo),e(w,ct),e(ct,$o),e(w,jo),e(w,ut),e(ut,ko),e(w,Io),e(w,pt),e(pt,Po),e(w,Lo),e(w,dt),e(dt,Co),e(w,xo),e(w,mt),e(mt,To),e(w,Ho),e(w,_t),e(_t,So),e(w,Oo),h(t,Ut,f),ge(te,t,f),h(t,Rt,f),h(t,De,f),e(De,re),e(re,Ao),e(re,gt),e(gt,Do),e(re,Fo),h(t,Gt,f),h(t,oe,f),oe.innerHTML=bl,h(t,Wt,f),h(t,x,f),e(x,ae),e(ae,le),e(le,Mo),e(le,vt),e(vt,No),e(le,Uo),e(ae,Ro),ge(ne,ae,null),e(x,Go),e(x,se),e(se,ie),e(ie,Wo),e(ie,wt),e(wt,Yo),e(ie,qo),e(se,Bo),e(se,Fe),Fe.innerHTML=yl,e(x,zo),e(x,fe),e(fe,Et),e(Et,Jo),e(fe,Ko),e(fe,Me),Me.innerHTML=$l,h(t,Yt,f),ge(M,t,f),h(t,qt,f),h(t,Ne,f),e(Ne,bt),e(bt,Qo),h(t,Bt,f),ge(N,t,f),h(t,zt,f),h(t,Ue,f),e(Ue,Vo),h(t,Jt,f),h(t,Re,f),e(Re,Xo),h(t,Kt,f),h(t,k,f),e(k,S),e(S,Zo),e(S,he),e(he,ea),e(S,ta),e(S,yt),e(yt,ra),e(S,oa),e(k,aa),e(k,ce),e(ce,la),e(ce,Ge),e(Ge,na),e(ce,sa),e(k,ia),e(k,ue),e(ue,fa),e(ue,We),e(We,ha),e(ue,ca),e(k,ua),e(k,pe),e(pe,pa),e(pe,Ye),e(Ye,da),e(pe,ma),h(t,Qt,f),h(t,U,f),e(U,_a),e(U,de),e(de,ga),e(U,va),Vt=!0},p(t,[f]){const C={};f&1&&(C.$$scope={dirty:f,ctx:t}),O.$set(C);const $t={};f&1&&($t.$$scope={dirty:f,ctx:t}),A.$set($t);const jt={};f&1&&(jt.$$scope={dirty:f,ctx:t}),F.$set(jt);const kt={};f&1&&(kt.$$scope={dirty:f,ctx:t}),M.$set(kt);const It={};f&1&&(It.$$scope={dirty:f,ctx:t}),N.$set(It)},i(t){Vt||(ve(O.$$.fragment,t),ve(A.$$.fragment,t),ve(F.$$.fragment,t),ve(te.$$.fragment,t),ve(ne.$$.fragment,t),ve(M.$$.fragment,t),ve(N.$$.fragment,t),Vt=!0)},o(t){we(O.$$.fragment,t),we(A.$$.fragment,t),we(F.$$.fragment,t),we(te.$$.fragment,t),we(ne.$$.fragment,t),we(M.$$.fragment,t),we(N.$$.fragment,t),Vt=!1},d(t){t&&r(c),t&&r(g),t&&r(v),t&&r(Lt),t&&r(be),t&&r(Ct),t&&r(ye),t&&r(xt),t&&r($e),t&&r(Tt),t&&r(b),t&&r(Ht),Ee(O,t),t&&r(St),t&&r(Ce),t&&r(Ot),Ee(A,t),t&&r(At),t&&r(xe),t&&r(Dt),t&&r(D),t&&r(Ft),t&&r(j),t&&r(Mt),Ee(F,t),t&&r(Nt),t&&r(Ae),t&&r(Ut),Ee(te,t),t&&r(Rt),t&&r(De),t&&r(Gt),t&&r(oe),t&&r(Wt),t&&r(x),Ee(ne),t&&r(Yt),Ee(M,t),t&&r(qt),t&&r(Ne),t&&r(Bt),Ee(N,t),t&&r(zt),t&&r(Ue),t&&r(Jt),t&&r(Re),t&&r(Kt),t&&r(k),t&&r(Qt),t&&r(U)}}}class Vl extends Hl{constructor(c){super();Sl(this,c,null,ql,Ol,{})}}export{Vl as default};
