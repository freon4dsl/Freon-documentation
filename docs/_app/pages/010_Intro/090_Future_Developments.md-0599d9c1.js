import{S as Qe,i as Re,s as Ve,e as i,t,k as p,c as o,a as s,h as r,d as a,m as c,a2 as Xe,b as w,g as L,H as e,J as je}from"../../chunks/vendor-492729b6.js";function Ye(Oe){let _,Q,B,v,R,g,Te,V,H,n,y,X,S,Y,Z,$,h,A,ee,te,j,re,ae,T,le,ie,W,oe,se,ne,b,fe,C,he,me,ue,I,de,D,pe,ce,_e,m,ve,F,ge,Ee,M,we,ye,k,be,Ie,Me,P,ke,J,Pe,Le,xe,q,Se,G,x,Ae;return{c(){_=i("h1"),Q=t("Wish List for Future Developments"),B=p(),v=i("p"),R=t(`In the future we want to extend ProjectIt with the following features. There is no order
in this list, nor is there any guarantee that the features will be build. We take on a
task at the moment the need for it arises (or, simply when
we like doing it `),g=i("img"),V=t(")."),H=p(),n=i("ul"),y=i("li"),X=t("Support "),S=i("em"),Y=t("libraries"),Z=t(` for language development, like a library with definitions for different
types of expressions.`),$=p(),h=i("li"),A=i("em"),ee=t("Third level adaptability"),te=t(" per concept for the "),j=i("em"),re=t("scoper"),ae=t(", the "),T=i("em"),le=t("unparser"),ie=t(", and the "),W=i("em"),oe=t("parser"),se=t("."),ne=p(),b=i("li"),fe=t("Create an "),C=i("em"),he=t("interpreter generator"),me=t("."),ue=p(),I=i("li"),de=t("Provide a coupling to a "),D=i("em"),pe=t("model-to-model generator"),ce=t("."),_e=p(),m=i("li"),ve=t("Add an "),F=i("em"),ge=t("importer"),Ee=t(" for "),M=i("a"),we=t("Jetbrains MPS"),ye=t(`
structure models.
(We already have a prototype based on
the `),k=i("a"),be=t("MPS Analyser"),Ie=t(`
from Meinte Broersma.)`),Me=p(),P=i("li"),ke=t("Create a "),J=i("em"),Pe=t("diagrammatic view"),Le=t(" of the language structure definition."),xe=p(),q=i("li"),Se=t("\u2026"),G=p(),x=i("p"),Ae=t("If you are using ProjectIt, and are missing a specific feature, please let us know through info AT projectit.org."),this.h()},l(l){_=o(l,"H1",{});var u=s(_);Q=r(u,"Wish List for Future Developments"),u.forEach(a),B=c(l),v=o(l,"P",{});var U=s(v);R=r(U,`In the future we want to extend ProjectIt with the following features. There is no order
in this list, nor is there any guarantee that the features will be build. We take on a
task at the moment the need for it arises (or, simply when
we like doing it `),g=o(U,"IMG",{src:!0,alt:!0,width:!0,height:!0}),V=r(U,")."),U.forEach(a),H=c(l),n=o(l,"UL",{});var f=s(n);y=o(f,"LI",{});var z=s(y);X=r(z,"Support "),S=o(z,"EM",{});var We=s(S);Y=r(We,"libraries"),We.forEach(a),Z=r(z,` for language development, like a library with definitions for different
types of expressions.`),z.forEach(a),$=c(f),h=o(f,"LI",{});var d=s(h);A=o(d,"EM",{});var Ce=s(A);ee=r(Ce,"Third level adaptability"),Ce.forEach(a),te=r(d," per concept for the "),j=o(d,"EM",{});var De=s(j);re=r(De,"scoper"),De.forEach(a),ae=r(d,", the "),T=o(d,"EM",{});var Fe=s(T);le=r(Fe,"unparser"),Fe.forEach(a),ie=r(d,", and the "),W=o(d,"EM",{});var Je=s(W);oe=r(Je,"parser"),Je.forEach(a),se=r(d,"."),d.forEach(a),ne=c(f),b=o(f,"LI",{});var K=s(b);fe=r(K,"Create an "),C=o(K,"EM",{});var qe=s(C);he=r(qe,"interpreter generator"),qe.forEach(a),me=r(K,"."),K.forEach(a),ue=c(f),I=o(f,"LI",{});var N=s(I);de=r(N,"Provide a coupling to a "),D=o(N,"EM",{});var Be=s(D);pe=r(Be,"model-to-model generator"),Be.forEach(a),ce=r(N,"."),N.forEach(a),_e=c(f),m=o(f,"LI",{});var E=s(m);ve=r(E,"Add an "),F=o(E,"EM",{});var He=s(F);ge=r(He,"importer"),He.forEach(a),Ee=r(E," for "),M=o(E,"A",{href:!0,target:!0});var Ge=s(M);we=r(Ge,"Jetbrains MPS"),Ge.forEach(a),ye=r(E,`
structure models.
(We already have a prototype based on
the `),k=o(E,"A",{href:!0,target:!0});var Ue=s(k);be=r(Ue,"MPS Analyser"),Ue.forEach(a),Ie=r(E,`
from Meinte Broersma.)`),E.forEach(a),Me=c(f),P=o(f,"LI",{});var O=s(P);ke=r(O,"Create a "),J=o(O,"EM",{});var ze=s(J);Pe=r(ze,"diagrammatic view"),ze.forEach(a),Le=r(O," of the language structure definition."),O.forEach(a),xe=c(f),q=o(f,"LI",{});var Ke=s(q);Se=r(Ke,"\u2026"),Ke.forEach(a),f.forEach(a),G=c(l),x=o(l,"P",{});var Ne=s(x);Ae=r(Ne,"If you are using ProjectIt, and are missing a specific feature, please let us know through info AT projectit.org."),Ne.forEach(a),this.h()},h(){Xe(g.src,Te="/images/smile.png")||w(g,"src",Te),w(g,"alt","SMILE"),w(g,"width","20"),w(g,"height","20"),w(M,"href","https://www.jetbrains.com/mps/"),w(M,"target","_blank"),w(k,"href","https://github.com/dslmeinte/mps-open-source/tree/master/mps-analyser"),w(k,"target","_blank")},m(l,u){L(l,_,u),e(_,Q),L(l,B,u),L(l,v,u),e(v,R),e(v,g),e(v,V),L(l,H,u),L(l,n,u),e(n,y),e(y,X),e(y,S),e(S,Y),e(y,Z),e(n,$),e(n,h),e(h,A),e(A,ee),e(h,te),e(h,j),e(j,re),e(h,ae),e(h,T),e(T,le),e(h,ie),e(h,W),e(W,oe),e(h,se),e(n,ne),e(n,b),e(b,fe),e(b,C),e(C,he),e(b,me),e(n,ue),e(n,I),e(I,de),e(I,D),e(D,pe),e(I,ce),e(n,_e),e(n,m),e(m,ve),e(m,F),e(F,ge),e(m,Ee),e(m,M),e(M,we),e(m,ye),e(m,k),e(k,be),e(m,Ie),e(n,Me),e(n,P),e(P,ke),e(P,J),e(J,Pe),e(P,Le),e(n,xe),e(n,q),e(q,Se),L(l,G,u),L(l,x,u),e(x,Ae)},p:je,i:je,o:je,d(l){l&&a(_),l&&a(B),l&&a(v),l&&a(H),l&&a(n),l&&a(G),l&&a(x)}}}class $e extends Qe{constructor(_){super();Re(this,_,null,Ye,Ve,{})}}export{$e as default};
