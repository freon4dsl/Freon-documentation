import{S as je,i as Be,s as Ge,e as o,t as n,k as _,c as a,a as s,h as l,d as i,m as c,b,g as h,H as e,J as we}from"../../chunks/vendor-0dc77bd0.js";function Ke(Ve){let u,R,B,D,U,G,f,p,L,W,X,I,Y,Z,$,v,y,ee,te,O,ie,ne,le,m,w,oe,ae,P,se,fe,re,E,x,he,de,z,_e,ce,ue,g,A,pe,ve,H,me,Ee,K,F,ge,M,C,Te,N,T,De,S,Le,ye;return{c(){u=o("h1"),R=n("The Five Definition Files"),B=_(),D=o("p"),U=n("A Freon language definition can have five parts:"),G=_(),f=o("ol"),p=o("li"),L=o("a"),W=n("The language structure"),X=n(", or abstract syntax tree (AST) is defined in files with extension "),I=o("code"),Y=n(".ast"),Z=n("."),$=_(),v=o("li"),y=o("a"),ee=n("The concrete syntax"),te=n(" of the language (CST), or editor definition, is defined in files with extension "),O=o("code"),ie=n(".edit"),ne=n("."),le=_(),m=o("li"),w=o("a"),oe=n("The scoping"),ae=n(" is defined in files with extension "),P=o("code"),se=n(".scope"),fe=n("."),re=_(),E=o("li"),x=o("a"),he=n("The typing"),de=n(" is defined in files with extension "),z=o("code"),_e=n(".type"),ce=n("."),ue=_(),g=o("li"),A=o("a"),pe=n("The validation"),ve=n(" is defined in files with extension "),H=o("code"),me=n(".valid"),Ee=n("."),K=_(),F=o("p"),ge=n(`And yes, you can use multiple files to define one of the parts. For instance, Freon will combine
multiple .ast files into one AST definition, and multiple .scope files into one scope definition.`),M=_(),C=o("h2"),Te=n("Step-by-step Creation of the Language"),N=_(),T=o("p"),De=n(`There is no need to write all the five definition files right from the start. The only one that is
mandatory is the language structure (.ast). Freon will generate defaults for all the other elements.
This is what we call the Default Level of the `),S=o("a"),Le=n("three levels of customization"),ye=n("."),this.h()},l(t){u=a(t,"H1",{});var r=s(u);R=l(r,"The Five Definition Files"),r.forEach(i),B=c(t),D=a(t,"P",{});var xe=s(D);U=l(xe,"A Freon language definition can have five parts:"),xe.forEach(i),G=c(t),f=a(t,"OL",{});var d=s(f);p=a(d,"LI",{});var k=s(p);L=a(k,"A",{href:!0});var Ae=s(L);W=l(Ae,"The language structure"),Ae.forEach(i),X=l(k,", or abstract syntax tree (AST) is defined in files with extension "),I=a(k,"CODE",{});var Fe=s(I);Y=l(Fe,".ast"),Fe.forEach(i),Z=l(k,"."),k.forEach(i),$=c(d),v=a(d,"LI",{});var q=s(v);y=a(q,"A",{href:!0});var Ce=s(y);ee=l(Ce,"The concrete syntax"),Ce.forEach(i),te=l(q," of the language (CST), or editor definition, is defined in files with extension "),O=a(q,"CODE",{});var Se=s(O);ie=l(Se,".edit"),Se.forEach(i),ne=l(q,"."),q.forEach(i),le=c(d),m=a(d,"LI",{});var J=s(m);w=a(J,"A",{href:!0});var be=s(w);oe=l(be,"The scoping"),be.forEach(i),ae=l(J," is defined in files with extension "),P=a(J,"CODE",{});var Ie=s(P);se=l(Ie,".scope"),Ie.forEach(i),fe=l(J,"."),J.forEach(i),re=c(d),E=a(d,"LI",{});var V=s(E);x=a(V,"A",{href:!0});var Oe=s(x);he=l(Oe,"The typing"),Oe.forEach(i),de=l(V," is defined in files with extension "),z=a(V,"CODE",{});var Pe=s(z);_e=l(Pe,".type"),Pe.forEach(i),ce=l(V,"."),V.forEach(i),ue=c(d),g=a(d,"LI",{});var j=s(g);A=a(j,"A",{href:!0});var ze=s(A);pe=l(ze,"The validation"),ze.forEach(i),ve=l(j," is defined in files with extension "),H=a(j,"CODE",{});var He=s(H);me=l(He,".valid"),He.forEach(i),Ee=l(j,"."),j.forEach(i),d.forEach(i),K=c(t),F=a(t,"P",{});var ke=s(F);ge=l(ke,`And yes, you can use multiple files to define one of the parts. For instance, Freon will combine
multiple .ast files into one AST definition, and multiple .scope files into one scope definition.`),ke.forEach(i),M=c(t),C=a(t,"H2",{});var qe=s(C);Te=l(qe,"Step-by-step Creation of the Language"),qe.forEach(i),N=c(t),T=a(t,"P",{});var Q=s(T);De=l(Q,`There is no need to write all the five definition files right from the start. The only one that is
mandatory is the language structure (.ast). Freon will generate defaults for all the other elements.
This is what we call the Default Level of the `),S=a(Q,"A",{href:!0});var Je=s(S);Le=l(Je,"three levels of customization"),Je.forEach(i),ye=l(Q,"."),Q.forEach(i),this.h()},h(){b(L,"href","/030_Developing_a_Language/010_Default_Level"),b(y,"href","/030_Developing_a_Language/020_Definition_Level/010_Editor_Definition"),b(w,"href","/030_Developing_a_Language/020_Definition_Level/020_Scoper_Definition"),b(x,"href","/030_Developing_a_Language/020_Definition_Level/030_Typer_Definition"),b(A,"href","/030_Developing_a_Language/020_Definition_Level/040_Validator_Definition"),b(S,"href","/010_Intro/050_Three_Levels_of_Customization")},m(t,r){h(t,u,r),e(u,R),h(t,B,r),h(t,D,r),e(D,U),h(t,G,r),h(t,f,r),e(f,p),e(p,L),e(L,W),e(p,X),e(p,I),e(I,Y),e(p,Z),e(f,$),e(f,v),e(v,y),e(y,ee),e(v,te),e(v,O),e(O,ie),e(v,ne),e(f,le),e(f,m),e(m,w),e(w,oe),e(m,ae),e(m,P),e(P,se),e(m,fe),e(f,re),e(f,E),e(E,x),e(x,he),e(E,de),e(E,z),e(z,_e),e(E,ce),e(f,ue),e(f,g),e(g,A),e(A,pe),e(g,ve),e(g,H),e(H,me),e(g,Ee),h(t,K,r),h(t,F,r),e(F,ge),h(t,M,r),h(t,C,r),e(C,Te),h(t,N,r),h(t,T,r),e(T,De),e(T,S),e(S,Le),e(T,ye)},p:we,i:we,o:we,d(t){t&&i(u),t&&i(B),t&&i(D),t&&i(G),t&&i(f),t&&i(K),t&&i(F),t&&i(M),t&&i(C),t&&i(N),t&&i(T)}}}class Ne extends je{constructor(u){super();Be(this,u,null,Ke,Ge,{})}}export{Ne as default};
