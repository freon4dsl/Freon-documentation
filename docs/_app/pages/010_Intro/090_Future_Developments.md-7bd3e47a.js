import{S as Qe,i as Re,s as Ve,e as o,t,k as p,c as i,a as n,h as r,d as a,m as c,a2 as Xe,b as w,g as A,H as e,J as Fe}from"../../chunks/vendor-0dc77bd0.js";function Ye(Oe){let v,Q,z,_,R,g,Te,V,B,s,b,X,S,Y,Z,$,f,P,ee,te,F,re,ae,T,le,oe,W,ie,ne,se,y,me,j,fe,he,de,M,ue,C,pe,ce,ve,h,_e,D,ge,Ee,k,we,be,I,ye,Me,ke,L,Ie,J,Le,Ae,xe,q,Se,H,x,Pe;return{c(){v=o("h1"),Q=t("Wish List for Future Developments"),z=p(),_=o("p"),R=t(`In the future we want to extend Freon with the following features. There is no order
in this list, nor is there any guarantee that the features will be build. We take on a
task at the moment the need for it arises (or, simply when
we like doing it `),g=o("img"),V=t(")."),B=p(),s=o("ul"),b=o("li"),X=t("Support "),S=o("em"),Y=t("libraries"),Z=t(` for language development, like a library with definitions for different
types of expressions.`),$=p(),f=o("li"),P=o("em"),ee=t("Third level adaptability"),te=t(" per concept for the "),F=o("em"),re=t("scoper"),ae=t(", the "),T=o("em"),le=t("unparser"),oe=t(", and the "),W=o("em"),ie=t("parser"),ne=t("."),se=p(),y=o("li"),me=t("Create an "),j=o("em"),fe=t("interpreter generator"),he=t(`. A beta version of an interpreter included. More
documentation will follow.`),de=p(),M=o("li"),ue=t("Provide a coupling to a "),C=o("em"),pe=t("model-to-model generator"),ce=t("."),ve=p(),h=o("li"),_e=t("Add an "),D=o("em"),ge=t("importer"),Ee=t(" for "),k=o("a"),we=t("Jetbrains MPS"),be=t(`
structure models.
(We already have a prototype based on
the `),I=o("a"),ye=t("MPS Analyser"),Me=t(`
from Meinte Boersma.)`),ke=p(),L=o("li"),Ie=t("Improve the "),J=o("em"),Le=t("diagrammatic view"),Ae=t(" of the language definition and make the generation customizable."),xe=p(),q=o("li"),Se=t("\u2026"),H=p(),x=o("p"),Pe=t("If you are using Freon, and are missing a specific feature, please let us know through info AT projectit.org."),this.h()},l(l){v=i(l,"H1",{});var d=n(v);Q=r(d,"Wish List for Future Developments"),d.forEach(a),z=c(l),_=i(l,"P",{});var G=n(_);R=r(G,`In the future we want to extend Freon with the following features. There is no order
in this list, nor is there any guarantee that the features will be build. We take on a
task at the moment the need for it arises (or, simply when
we like doing it `),g=i(G,"IMG",{src:!0,alt:!0,width:!0,height:!0}),V=r(G,")."),G.forEach(a),B=c(l),s=i(l,"UL",{});var m=n(s);b=i(m,"LI",{});var U=n(b);X=r(U,"Support "),S=i(U,"EM",{});var We=n(S);Y=r(We,"libraries"),We.forEach(a),Z=r(U,` for language development, like a library with definitions for different
types of expressions.`),U.forEach(a),$=c(m),f=i(m,"LI",{});var u=n(f);P=i(u,"EM",{});var je=n(P);ee=r(je,"Third level adaptability"),je.forEach(a),te=r(u," per concept for the "),F=i(u,"EM",{});var Ce=n(F);re=r(Ce,"scoper"),Ce.forEach(a),ae=r(u,", the "),T=i(u,"EM",{});var De=n(T);le=r(De,"unparser"),De.forEach(a),oe=r(u,", and the "),W=i(u,"EM",{});var Je=n(W);ie=r(Je,"parser"),Je.forEach(a),ne=r(u,"."),u.forEach(a),se=c(m),y=i(m,"LI",{});var K=n(y);me=r(K,"Create an "),j=i(K,"EM",{});var qe=n(j);fe=r(qe,"interpreter generator"),qe.forEach(a),he=r(K,`. A beta version of an interpreter included. More
documentation will follow.`),K.forEach(a),de=c(m),M=i(m,"LI",{});var N=n(M);ue=r(N,"Provide a coupling to a "),C=i(N,"EM",{});var ze=n(C);pe=r(ze,"model-to-model generator"),ze.forEach(a),ce=r(N,"."),N.forEach(a),ve=c(m),h=i(m,"LI",{});var E=n(h);_e=r(E,"Add an "),D=i(E,"EM",{});var Be=n(D);ge=r(Be,"importer"),Be.forEach(a),Ee=r(E," for "),k=i(E,"A",{href:!0,target:!0});var He=n(k);we=r(He,"Jetbrains MPS"),He.forEach(a),be=r(E,`
structure models.
(We already have a prototype based on
the `),I=i(E,"A",{href:!0,target:!0});var Ge=n(I);ye=r(Ge,"MPS Analyser"),Ge.forEach(a),Me=r(E,`
from Meinte Boersma.)`),E.forEach(a),ke=c(m),L=i(m,"LI",{});var O=n(L);Ie=r(O,"Improve the "),J=i(O,"EM",{});var Ue=n(J);Le=r(Ue,"diagrammatic view"),Ue.forEach(a),Ae=r(O," of the language definition and make the generation customizable."),O.forEach(a),xe=c(m),q=i(m,"LI",{});var Ke=n(q);Se=r(Ke,"\u2026"),Ke.forEach(a),m.forEach(a),H=c(l),x=i(l,"P",{});var Ne=n(x);Pe=r(Ne,"If you are using Freon, and are missing a specific feature, please let us know through info AT projectit.org."),Ne.forEach(a),this.h()},h(){Xe(g.src,Te="/images/smile.png")||w(g,"src",Te),w(g,"alt","SMILE"),w(g,"width","20"),w(g,"height","20"),w(k,"href","https://www.jetbrains.com/mps/"),w(k,"target","_blank"),w(I,"href","https://github.com/dslmeinte/mps-open-source/tree/master/mps-analyser"),w(I,"target","_blank")},m(l,d){A(l,v,d),e(v,Q),A(l,z,d),A(l,_,d),e(_,R),e(_,g),e(_,V),A(l,B,d),A(l,s,d),e(s,b),e(b,X),e(b,S),e(S,Y),e(b,Z),e(s,$),e(s,f),e(f,P),e(P,ee),e(f,te),e(f,F),e(F,re),e(f,ae),e(f,T),e(T,le),e(f,oe),e(f,W),e(W,ie),e(f,ne),e(s,se),e(s,y),e(y,me),e(y,j),e(j,fe),e(y,he),e(s,de),e(s,M),e(M,ue),e(M,C),e(C,pe),e(M,ce),e(s,ve),e(s,h),e(h,_e),e(h,D),e(D,ge),e(h,Ee),e(h,k),e(k,we),e(h,be),e(h,I),e(I,ye),e(h,Me),e(s,ke),e(s,L),e(L,Ie),e(L,J),e(J,Le),e(L,Ae),e(s,xe),e(s,q),e(q,Se),A(l,H,d),A(l,x,d),e(x,Pe)},p:Fe,i:Fe,o:Fe,d(l){l&&a(v),l&&a(z),l&&a(_),l&&a(B),l&&a(s),l&&a(H),l&&a(x)}}}class $e extends Qe{constructor(v){super();Re(this,v,null,Ye,Ve,{})}}export{$e as default};
