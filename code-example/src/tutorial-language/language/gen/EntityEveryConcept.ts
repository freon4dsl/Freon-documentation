// Generated by the Freon Language Generator.
import {
    AbsExpression,
    AndExpression,
    AppliedFeature,
    AttributeRef,
    AttributeType,
    AttributeWithEntityType,
    AttributeWithLimitedType,
    BaseType,
    BinaryExpression,
    BooleanLiteralExpression,
    ComparisonExpression,
    DivideExpression,
    Entity,
    EntityExpression,
    EntityFunction,
    EntityModel,
    EntityModelUnit,
    EqualsExpression,
    FunctionCallExpression,
    GreaterThenExpression,
    IfExpression,
    LessThenExpression,
    LiteralExpression,
    MockEnumeration,
    MultiplyExpression,
    NumberLiteralExpression,
    OrExpression,
    PlusExpression,
    SomeOtherModelUnit,
    StringLiteralExpression,
    Text,
    Text2,
    Text3,
    Text4,
    Type,
    Variable,
    VariableRef
} from "./internal";

/**
 * Type EntityEveryConcept is a union of all concepts and interfaces that are defined for language Entity.
 * This type is used instead of the more general FreNode interface or the MobxModelElementImpl class,
 * or even the type Object, to ensure that parts of the language environment work on the same set
 * of instances.
 */
export type EntityEveryConcept =
    | AbsExpression
    | AndExpression
    | AppliedFeature
    | AttributeRef
    | AttributeType
    | AttributeWithEntityType
    | AttributeWithLimitedType
    | BaseType
    | BinaryExpression
    | BooleanLiteralExpression
    | ComparisonExpression
    | DivideExpression
    | Entity
    | EntityExpression
    | EntityFunction
    | EntityModel
    | EntityModelUnit
    | EqualsExpression
    | FunctionCallExpression
    | GreaterThenExpression
    | IfExpression
    | LessThenExpression
    | LiteralExpression
    | MockEnumeration
    | MultiplyExpression
    | NumberLiteralExpression
    | OrExpression
    | PlusExpression
    | SomeOtherModelUnit
    | StringLiteralExpression
    | Text
    | Text2
    | Text3
    | Text4
    | Type
    | Variable
    | VariableRef;

/**
 * Type MODELUNIT combines the metatype of all possible modelunits of language Entity
 */
export type EntityModelUnitType = SomeOtherModelUnit | EntityModelUnit;
