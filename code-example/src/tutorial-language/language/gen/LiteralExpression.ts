// Generated by the ProjectIt Language Generator.
import { model, PiExpression, PiUtils } from "@projectit/core";
import { EntityExpression, EntityMetaType } from "./internal";

/**
 * Class LiteralExpression is the implementation of the concept with the same name in the language definition file.
 * It uses mobx decorators to enable parts of the language environment, e.g. the editor, to react
 * to changes in the state of its properties.
 */
@model
export abstract class LiteralExpression extends EntityExpression implements PiExpression {
    readonly $typename: EntityMetaType = "LiteralExpression"; // holds the metatype in the form of a string

    constructor(id?: string) {
        super(id);
    }

    /**
     * Returns the metatype of this instance in the form of a string.
     */
    piLanguageConcept(): EntityMetaType {
        return this.$typename;
    }

    /**
     * Returns true if this instance is a model concept.
     */
    piIsModel(): boolean {
        return false;
    }

    /**
     * Returns true if this instance is a model unit.
     */
    piIsUnit(): boolean {
        return false;
    }

    /**
     * Returns true if this instance is an expression concept.
     */
    piIsExpression(): boolean {
        return true;
    }

    /**
     * Returns true if this instance is a binary expression concept.
     */
    piIsBinaryExpression(): boolean {
        return false;
    }
}
