{
	"include": ["src", "src/**/*", "src/@types/svg.d.ts"],
	"compilerOptions": {
		/* Visit https://aka.ms/tsconfig.json to read more about this file */

		/* Basic Options */
		// "incremental": true,                         /* Enable incremental compilation */
		"target": "es2021" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', 'ES2021', or 'ESNEXT'. */,
		/* "module": "commonjs" must correspond with "type": "commonjs" in package.json */
		/* "module": "es*" must correspond with "type": "module" in package.json */
		"module": "esnext" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */,
		// "lib": [],                                   /* Specify library files to be included in the compilation. */
		"allowJs": false /* Allow javascript files to be compiled. */,
		// "checkJs": true,                             /* Report errors in .js files. */
		// "jsx": "preserve",                           /* Specify JSX code generation: 'preserve', 'react-native', 'react', 'react-jsx' or 'react-jsxdev'. */
		"declaration": true /* Generates corresponding '.d.ts' file. */,
		"declarationMap": true /* Generates a sourcemap for each corresponding '.d.ts' file. */,
		"sourceMap": true /* Generates corresponding '.map' file. */,
		// "outFile": "./",                             /* Concatenate and emit output to single file. */
		"outDir": "./dist" /* Redirect output structure to the directory. */,
		"rootDir": "./src" /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */,
		// "composite": true,                           /* Enable project compilation */
		// "tsBuildInfoFile": "./",                     /* Specify file to store incremental compilation information */
		"removeComments": true /* Do not emit comments to output. */,

		/* Strict Type-Checking Options */
		// "strict": true,                              /* Enable all strict type-checking options. */

		/* Additional Checks */
		"noImplicitReturns": true /* Report error when not all code paths in function return a value. */,
		"noFallthroughCasesInSwitch": true /* Report errors for fallthrough cases in switch statement. */,

		/* Module Resolution Options */
		"moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
		"esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,

		/* Experimental Options */
		"experimentalDecorators": true /* Enables experimental support for ES7 decorators. */,
		"emitDecoratorMetadata": true /* Enables experimental support for emitting type metadata for decorators. */,

		/* Advanced Options */
		"skipLibCheck": true /* Skip type checking of declaration files. */,
		"forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */,
		"verbatimModuleSyntax": false,
		"baseUrl": "./src",
		"lib": ["dom", "dom.iterable", "es6", "es2017" /* needed to use '.include()' for string[] array */, "es2019"]
	},
	"ts-node": {
		"esm": true,
		"experimentalSpecifierResolution": "node"
	},
	"exclude": ["node_modules", "public/*", "dist", "src/**/*.test.ts", "src/**/*.test.tsx", "src/**/*.story.tsx"]
}
