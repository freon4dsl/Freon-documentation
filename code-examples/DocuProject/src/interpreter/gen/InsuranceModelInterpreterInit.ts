// Generated by the Freon Language Generator.
import { IMainInterpreter } from "@freon4dsl/core";
import { InsuranceModelInterpreter } from "../InsuranceModelInterpreter.js";

/**
 * The class that registers all interpreter function with the main interpreter.
 */
export function InsuranceModelInterpreterInit(main: IMainInterpreter) {
    const interpreter = new InsuranceModelInterpreter(main);

    main.registerFunction("DocuExpression", interpreter.evalDocuExpression);
    main.registerFunction("Literal", interpreter.evalLiteral);
    main.registerFunction("EuroLiteral", interpreter.evalEuroLiteral);
    main.registerFunction("NumberLiteral", interpreter.evalNumberLiteral);
    main.registerFunction("PercentageLiteral", interpreter.evalPercentageLiteral);
    main.registerFunction("BooleanLiteral", interpreter.evalBooleanLiteral);
    main.registerFunction("BinaryExpression", interpreter.evalBinaryExpression);
    main.registerFunction("PlusExpression", interpreter.evalPlusExpression);
    main.registerFunction("MinusExpression", interpreter.evalMinusExpression);
    main.registerFunction("MultiplyExpression", interpreter.evalMultiplyExpression);
    main.registerFunction("DivideExpression", interpreter.evalDivideExpression);
    main.registerFunction("FunctionCallExpression", interpreter.evalFunctionCallExpression);
    main.registerFunction("InsurancePartRef", interpreter.evalInsurancePartRef);
    main.registerFunction("RiskAdjustmentRef", interpreter.evalRiskAdjustmentRef);
    main.registerFunction("ParameterRef", interpreter.evalParameterRef);
    main.registerFunction("AttributeRef", interpreter.evalAttributeRef);
    main.registerFunction("RiskRef", interpreter.evalRiskRef);
    main.registerFunction("PayoutRef", interpreter.evalPayoutRef);
    main.registerFunction("Text", interpreter.evalText);
    main.registerFunction("Text2", interpreter.evalText2);
    main.registerFunction("Text3", interpreter.evalText3);
    main.registerFunction("Text4", interpreter.evalText4);
    main.registerFunction("GenericKind", interpreter.evalGenericKind);
    main.registerFunction("GenericTypeDecl", interpreter.evalGenericTypeDecl);
    main.registerFunction("GenericLiteral", interpreter.evalGenericLiteral);
    main.registerFunction("Entity", interpreter.evalEntity);
    main.registerFunction("EntityAttribute", interpreter.evalEntityAttribute);
    main.registerFunction("BaseProduct", interpreter.evalBaseProduct);
    main.registerFunction("InsurancePart", interpreter.evalInsurancePart);
    main.registerFunction("InsuranceProduct", interpreter.evalInsuranceProduct);
    main.registerFunction("CalcFunction", interpreter.evalCalcFunction);
    main.registerFunction("Description", interpreter.evalDescription);
    main.registerFunction("Parameter", interpreter.evalParameter);
    main.registerFunction("DocuType", interpreter.evalDocuType);
    main.registerFunction("InsurancePartType", interpreter.evalInsurancePartType);
    main.registerFunction("PercentageType", interpreter.evalPercentageType);
    main.registerFunction("NumberType", interpreter.evalNumberType);
    main.registerFunction("BooleanType", interpreter.evalBooleanType);
    main.registerFunction("EuroType", interpreter.evalEuroType);
    main.registerFunction("TypeRef", interpreter.evalTypeRef);
    main.registerFunction("InsuranceTheme", interpreter.evalInsuranceTheme);
    main.registerFunction("PremiumDays", interpreter.evalPremiumDays);
    main.registerFunction("Part", interpreter.evalPart);
    main.registerFunction("Product", interpreter.evalProduct); // DONE
}
