// Generated by the Freon Language Generator.
import {
    Box,
    BoxUtil,
    FreBoxProvider,
    FreProjectionHandler,
    BoolDisplay,
    FreNodeReference,
    BoxFactory,
    TableUtil,
    NumberDisplay,
} from "@freon4dsl/core";

import { Entity } from "../../language/gen/index.js";

import { EntityModelEnvironment } from "../../config/gen/EntityModelEnvironment.js";

/**
 * This class implements the box provider for a single node of type Entity.
 * The box provider is able to create the (tree of) boxes for the node, based
 * on the projections that are currently selected by the user.
 * The top of the tree of boxes is always a box of type ElementBox, which is
 * a box that will never be rendered itself, only its content will. Thus, we
 * have a stable entry in the complete box tree for every FreNode node.
 */
export class EntityBoxProvider extends FreBoxProvider {
    constructor(mainHandler: FreProjectionHandler) {
        super(mainHandler);
        this.knownBoxProjections = ["StartEditor", "default"];
        this.knownTableProjections = ["default"];
        this.conceptName = "Entity";
    }

    protected getContent(projectionName: string): Box {
        // console.log("GET CONTENT " + this._node?.freId() + ' ' +  this._node?.freLanguageConcept() + ' ' + projectionName);
        // see if we need to use a custom projection
        if (!this.knownBoxProjections.includes(projectionName) && !this.knownTableProjections.includes(projectionName)) {
            const BOX: Box = this.mainHandler.executeCustomProjection(this._node, projectionName);
            if (!!BOX) {
                // found one, so return it
                return BOX;
            }
        } else {
            // select the box to return based on the projectionName
            if (projectionName === "StartEditor") {
                return this.getStartEditor();
            } else if (projectionName === "default") {
                return this.getDefault();
            }
        }
        // in all other cases, return the default
        return this.getDefault();
    }

    private getStartEditor(): Box {
        return BoxFactory.verticalLayout(this._node as Entity, "Entity-overall", "", [
            BoxUtil.booleanBox(this._node as Entity, "isCompany", { yes: "COMPANY", no: "undefined" }, BoolDisplay.SELECT),
            BoxFactory.horizontalLayout(
                this._node as Entity,
                "Entity-hlist-line-1",
                "",
                [
                    BoxUtil.labelBox(this._node as Entity, "entity", "top-1-line-1-item-0"),
                    BoxUtil.textBox(this._node as Entity, "name"),
                    BoxFactory.optional2(
                        this._node as Entity,
                        "optional-baseEntity",
                        () => !!(this._node as Entity).baseEntity,
                        BoxFactory.horizontalLayout(
                            this._node as Entity,
                            "Entity-optional-baseEntity-hlist-line-0",
                            "",
                            [
                                BoxUtil.labelBox(this._node as Entity, "base", "top-2-line-0-item-0"),
                                BoxUtil.referenceBox(
                                    this._node as Entity,
                                    "baseEntity",
                                    (selected: string) => {
                                        (this._node as Entity).baseEntity = FreNodeReference.create<Entity>(selected, "Entity");
                                    },
                                    EntityModelEnvironment.getInstance().scoper,
                                ),
                            ],
                            { selectable: false },
                        ),
                        false,
                        BoxFactory.action(this._node, "optional-baseEntity", "base"),
                    ),
                    BoxUtil.labelBox(this._node as Entity, "\{", "top-1-line-1-item-3"),
                ],
                { selectable: false },
            ),
            BoxUtil.indentBox(
                this._node as Entity,
                4,
                "2",
                BoxFactory.horizontalLayout(
                    this._node as Entity,
                    "Entity-hlist-line-2",
                    "",
                    [
                        BoxUtil.verticalPartListBox(
                            this._node as Entity,
                            (this._node as Entity).attributes,
                            "attributes",
                            null,
                            this.mainHandler,
                        ),
                        BoxUtil.labelBox(
                            this._node as Entity,
                            "\/\/ this list is projected as a vertical list without separator or terminator",
                            "top-1-line-2-item-1",
                        ),
                    ],
                    { selectable: false },
                ),
            ),
            BoxUtil.indentBox(
                this._node as Entity,
                4,
                "3",
                BoxFactory.horizontalLayout(
                    this._node as Entity,
                    "Entity-hlist-line-3",
                    "",
                    [
                        TableUtil.tableBoxColumnOriented(
                            this._node as Entity,
                            (this._node as Entity).functions,
                            "functions",
                            this.mainHandler,
                        ),
                        BoxUtil.labelBox(
                            this._node as Entity,
                            "\/\/ this list is projected as a column based table",
                            "top-1-line-3-item-1",
                        ),
                    ],
                    { selectable: false },
                ),
            ),
            BoxUtil.labelBox(this._node as Entity, "}", "top-1-line-4-item-0"),
        ]);
    }

    private getDefault(): Box {
        return BoxFactory.verticalLayout(this._node as Entity, "Entity-overall", "", [
            BoxFactory.horizontalLayout(
                this._node as Entity,
                "Entity-hlist-line-0",
                "",
                [
                    BoxUtil.labelBox(this._node as Entity, "Entity", "top-1-line-0-item-0"),
                    BoxUtil.textBox(this._node as Entity, "name"),
                    BoxUtil.labelBox(this._node as Entity, "\{", "top-1-line-0-item-2"),
                ],
                { selectable: false },
            ),
            BoxUtil.indentBox(
                this._node as Entity,
                4,
                "1",
                BoxFactory.horizontalLayout(
                    this._node as Entity,
                    "Entity-hlist-line-1",
                    "",
                    [
                        BoxUtil.labelBox(this._node as Entity, "isCompany", "top-1-line-1-item-0"),
                        BoxUtil.booleanBox(this._node as Entity, "isCompany", { yes: "true", no: "false" }, BoolDisplay.SELECT),
                    ],
                    { selectable: false },
                ),
            ),
            BoxUtil.indentBox(
                this._node as Entity,
                4,
                "2",
                BoxFactory.horizontalLayout(
                    this._node as Entity,
                    "Entity-hlist-line-2",
                    "",
                    [
                        BoxUtil.labelBox(this._node as Entity, "baseInterface_attr", "top-1-line-2-item-0"),
                        BoxUtil.numberBox(this._node as Entity, "baseInterface_attr", NumberDisplay.SELECT),
                    ],
                    { selectable: false },
                ),
            ),
            BoxUtil.indentBox(
                this._node as Entity,
                4,
                "3",
                BoxFactory.horizontalLayout(
                    this._node as Entity,
                    "Entity-hlist-line-3",
                    "",
                    [
                        BoxUtil.labelBox(this._node as Entity, "simpleprop", "top-1-line-3-item-0"),
                        BoxUtil.textBox(this._node as Entity, "simpleprop"),
                    ],
                    { selectable: false },
                ),
            ),
            BoxUtil.indentBox(this._node as Entity, 4, "4", BoxUtil.labelBox(this._node as Entity, "attributes", "top-1-line-4-item-0")),
            BoxUtil.indentBox(
                this._node as Entity,
                8,
                "5",
                BoxUtil.verticalPartListBox(this._node as Entity, (this._node as Entity).attributes, "attributes", null, this.mainHandler),
            ),
            BoxUtil.indentBox(this._node as Entity, 4, "6", BoxUtil.labelBox(this._node as Entity, "entAttributes", "top-1-line-6-item-0")),
            BoxUtil.indentBox(
                this._node as Entity,
                8,
                "7",
                BoxUtil.verticalPartListBox(
                    this._node as Entity,
                    (this._node as Entity).entAttributes,
                    "entAttributes",
                    null,
                    this.mainHandler,
                ),
            ),
            BoxUtil.indentBox(this._node as Entity, 4, "8", BoxUtil.labelBox(this._node as Entity, "functions", "top-1-line-8-item-0")),
            BoxUtil.indentBox(
                this._node as Entity,
                8,
                "9",
                BoxUtil.verticalPartListBox(this._node as Entity, (this._node as Entity).functions, "functions", null, this.mainHandler),
            ),
            BoxUtil.indentBox(this._node as Entity, 4, "10", BoxUtil.labelBox(this._node as Entity, "int_attrs", "top-1-line-10-item-0")),
            BoxUtil.indentBox(
                this._node as Entity,
                8,
                "11",
                BoxUtil.verticalPartListBox(this._node as Entity, (this._node as Entity).int_attrs, "int_attrs", null, this.mainHandler),
            ),
            BoxUtil.indentBox(
                this._node as Entity,
                4,
                "12",
                BoxUtil.labelBox(this._node as Entity, "int_functions", "top-1-line-12-item-0"),
            ),
            BoxUtil.indentBox(
                this._node as Entity,
                8,
                "13",
                BoxUtil.verticalPartListBox(
                    this._node as Entity,
                    (this._node as Entity).int_functions,
                    "int_functions",
                    null,
                    this.mainHandler,
                ),
            ),
            BoxFactory.optional2(
                this._node as Entity,
                "optional-baseEntity",
                () => !!(this._node as Entity).baseEntity,
                BoxUtil.indentBox(
                    this._node as Entity,
                    4,
                    "0",
                    BoxFactory.horizontalLayout(
                        this._node as Entity,
                        "Entity-optional-baseEntity-hlist-line-0",
                        "",
                        [
                            BoxUtil.labelBox(this._node as Entity, "baseEntity", "top-2-line-0-item-0"),
                            BoxUtil.referenceBox(
                                this._node as Entity,
                                "baseEntity",
                                (selected: string) => {
                                    (this._node as Entity).baseEntity = FreNodeReference.create<Entity>(selected, "Entity");
                                },
                                EntityModelEnvironment.getInstance().scoper,
                            ),
                        ],
                        { selectable: false },
                    ),
                ),
                false,
                BoxFactory.action(this._node, "optional-baseEntity", "baseEntity"),
            ),
            BoxUtil.indentBox(
                this._node as Entity,
                4,
                "15",
                BoxFactory.horizontalLayout(
                    this._node as Entity,
                    "Entity-hlist-line-15",
                    "",
                    [
                        BoxUtil.labelBox(this._node as Entity, "baseInterface", "top-1-line-15-item-0"),
                        BoxUtil.referenceBox(
                            this._node as Entity,
                            "baseInterface",
                            (selected: string) => {
                                (this._node as Entity).baseInterface = FreNodeReference.create<Entity>(selected, "Entity");
                            },
                            EntityModelEnvironment.getInstance().scoper,
                        ),
                    ],
                    { selectable: false },
                ),
            ),
            BoxUtil.labelBox(this._node as Entity, "}", "top-1-line-16-item-0"),
        ]);
    }
}
