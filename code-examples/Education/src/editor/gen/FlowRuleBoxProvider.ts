// Generated by the Freon Language Generator.
import { Box, BoxUtil, FreBoxProvider, FreProjectionHandler, BoxFactory, FreNodeReference, TableUtil } from "@freon4dsl/core";

import { FlowRule, Page } from "../../language/gen/index.js";

import { EducationEnvironment } from "../../config/gen/EducationEnvironment.js";

/**
 * This class implements the box provider for a single node of type FlowRule.
 * The box provider is able to create the (tree of) boxes for the node, based
 * on the projections that are currently selected by the user.
 * The top of the tree of boxes is always a box of type ElementBox, which is
 * a box that will never be rendered itself, only its content will. Thus, we
 * have a stable entry in the complete box tree for every FreNode node.
 */
export class FlowRuleBoxProvider extends FreBoxProvider {
    constructor(mainHandler: FreProjectionHandler) {
        super(mainHandler);
        this.knownBoxProjections = ["rules_as_table", "default"];
        this.knownTableProjections = ["default"];
        this.conceptName = "FlowRule";
    }

    protected getContent(projectionName: string): Box {
        // console.log("GET CONTENT " + this._node?.freId() + ' ' +  this._node?.freLanguageConcept() + ' ' + projectionName);
        // see if we need to use a custom projection
        if (!this.knownBoxProjections.includes(projectionName) && !this.knownTableProjections.includes(projectionName)) {
            const BOX: Box = this.mainHandler.executeCustomProjection(this._node, projectionName);
            if (!!BOX) {
                // found one, so return it
                return BOX;
            }
        } else {
            // select the box to return based on the projectionName
            if (projectionName === "rules_as_table") {
                return this.getRules_as_table();
            } else if (projectionName === "default") {
                return this.getDefault();
            }
        }
        // in all other cases, return the default
        return this.getDefault();
    }

    private getRules_as_table(): Box {
        return BoxFactory.verticalLayout(this._node as FlowRule, "FlowRule-overall", "", [
            BoxUtil.labelBox(this._node as FlowRule, "-------------------------------------", "top-1-line-0-item-0"),
            BoxFactory.horizontalLayout(
                this._node as FlowRule,
                "FlowRule-hlist-line-1",
                "",
                [BoxUtil.labelBox(this._node as FlowRule, "Name:", "top-1-line-1-item-0"), BoxUtil.textBox(this._node as FlowRule, "name")],
                { selectable: false },
            ),
            BoxUtil.indentBox(
                this._node as FlowRule,
                4,
                "2",
                BoxFactory.horizontalLayout(
                    this._node as FlowRule,
                    "FlowRule-hlist-line-2",
                    "",
                    [
                        BoxUtil.labelBox(this._node as FlowRule, "Description:", "top-1-line-2-item-0"),
                        BoxUtil.textBox(this._node as FlowRule, "description"),
                    ],
                    { selectable: false },
                ),
            ),
            BoxUtil.indentBox(
                this._node as FlowRule,
                4,
                "3",
                BoxFactory.horizontalLayout(
                    this._node as FlowRule,
                    "FlowRule-hlist-line-3",
                    "",
                    [
                        BoxUtil.labelBox(this._node as FlowRule, "For page", "top-1-line-3-item-0"),
                        BoxUtil.referenceBox(
                            this._node as FlowRule,
                            "page",
                            (selected: string) => {
                                (this._node as FlowRule).page = FreNodeReference.create<Page>(selected, "Page");
                            },
                            EducationEnvironment.getInstance().scoper,
                        ),
                    ],
                    { selectable: false },
                ),
            ),
            BoxUtil.emptyLineBox(this._node as FlowRule, "FlowRule-empty-line-4"),
            BoxUtil.indentBox(
                this._node as FlowRule,
                4,
                "5",
                TableUtil.tableBoxRowOriented(
                    this._node as FlowRule,
                    (this._node as FlowRule).transitions,
                    "transitions",
                    this.mainHandler,
                ),
            ),
        ]);
    }

    private getDefault(): Box {
        return BoxFactory.verticalLayout(this._node as FlowRule, "FlowRule-overall", "", [
            BoxUtil.labelBox(this._node as FlowRule, "-------------------------------------", "top-1-line-0-item-0"),
            BoxFactory.horizontalLayout(
                this._node as FlowRule,
                "FlowRule-hlist-line-1",
                "",
                [BoxUtil.labelBox(this._node as FlowRule, "Name:", "top-1-line-1-item-0"), BoxUtil.textBox(this._node as FlowRule, "name")],
                { selectable: false },
            ),
            BoxUtil.indentBox(
                this._node as FlowRule,
                4,
                "2",
                BoxFactory.horizontalLayout(
                    this._node as FlowRule,
                    "FlowRule-hlist-line-2",
                    "",
                    [
                        BoxUtil.labelBox(this._node as FlowRule, "Description:", "top-1-line-2-item-0"),
                        BoxUtil.textBox(this._node as FlowRule, "description"),
                    ],
                    { selectable: false },
                ),
            ),
            BoxUtil.indentBox(
                this._node as FlowRule,
                4,
                "3",
                BoxFactory.horizontalLayout(
                    this._node as FlowRule,
                    "FlowRule-hlist-line-3",
                    "",
                    [
                        BoxUtil.labelBox(this._node as FlowRule, "For page", "top-1-line-3-item-0"),
                        BoxUtil.referenceBox(
                            this._node as FlowRule,
                            "page",
                            (selected: string) => {
                                (this._node as FlowRule).page = FreNodeReference.create<Page>(selected, "Page");
                            },
                            EducationEnvironment.getInstance().scoper,
                        ),
                    ],
                    { selectable: false },
                ),
            ),
            BoxUtil.emptyLineBox(this._node as FlowRule, "FlowRule-empty-line-4"),
            BoxUtil.indentBox(
                this._node as FlowRule,
                4,
                "5",
                BoxUtil.verticalPartListBox(
                    this._node as FlowRule,
                    (this._node as FlowRule).transitions,
                    "transitions",
                    null,
                    this.mainHandler,
                ),
            ),
        ]);
    }
}
