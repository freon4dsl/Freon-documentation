// Generated by the Freon Language Generator.
import { net } from "net.akehurst.language-agl-processor";
import SPPTBranch = net.akehurst.language.api.sppt.SPPTBranch;
import { Grade } from "../../language/gen/index.js";
import { EducationSyntaxAnalyser } from "./EducationSyntaxAnalyser.js";
import { FreNodeReference } from "@freon4dsl/core";

export class EducationCommonSyntaxAnalyserPart {
    mainAnalyser: EducationSyntaxAnalyser;

    constructor(mainAnalyser: EducationSyntaxAnalyser) {
        this.mainAnalyser = mainAnalyser;
    }

    /**
     * Method to transform branches that match the following rule:
     * Grade = 'gradeA'
     *	| 'gradeB'
     *	| 'gradeC'
     *	| 'gradeD'
     *	| 'gradeE'
     *	| 'gradeF' ;
     * @param branch
     * @private
     */
    public transformGrade(branch: SPPTBranch): Grade {
        const choice = branch.nonSkipMatchedText;
        if (choice === "gradeA") {
            return Grade.gradeA;
        } else if (choice === "gradeB") {
            return Grade.gradeB;
        } else if (choice === "gradeC") {
            return Grade.gradeC;
        } else if (choice === "gradeD") {
            return Grade.gradeD;
        } else if (choice === "gradeE") {
            return Grade.gradeE;
        } else if (choice === "gradeF") {
            return Grade.gradeF;
        } else {
            return null;
        }
    }
}
