// Generated by the Freon Language Generator.
// Generated my Freon, will be overwritten with every generation.
import { InterpreterContext, RtObject, RtError } from "@freon4dsl/core";
import {
    FlowRule,
    PageTransition,
    Grade,
    PrimitiveType,
    GradeScore,
    ScoreExpression,
    QuestionReference,
    NrOfCorrectAnswers,
    NumberLiteralExpression,
    BinaryExpression,
    AndExpression,
    OrExpression,
    ComparisonExpression,
    LessOrEqualsExpression,
    GreaterOrEqualsExpression,
    LessThenExpression,
    GreaterThenExpression,
    EqualsExpression,
    Scenario,
    TestFlow,
    Step,
    LastStep,
    Answer,
    Page,
    Theory,
    Line,
    Video,
    WorkSheet,
    ExamplePage,
    InDepthMaterial,
    Question,
    NumberConcept,
    SimpleNumber,
    Fraction,
    Flow,
    SiteGroup,
    Test,
    Topic,
} from "../../language/gen/index.js";

/**
 * The base class containing all interpreter functions that should be defined.
 * All functions throw an error when called.
 */
export class EducationInterpreterBase {
    constructor() {}

    evalFlowRule(node: FlowRule, ctx: InterpreterContext): RtObject {
        throw new RtError("evalFlowRule is not defined");
    }

    evalPageTransition(node: PageTransition, ctx: InterpreterContext): RtObject {
        throw new RtError("evalPageTransition is not defined");
    }

    evalGrade(node: Grade, ctx: InterpreterContext): RtObject {
        throw new RtError("evalGrade is not defined");
    }

    evalPrimitiveType(node: PrimitiveType, ctx: InterpreterContext): RtObject {
        throw new RtError("evalPrimitiveType is not defined");
    }

    evalGradeScore(node: GradeScore, ctx: InterpreterContext): RtObject {
        throw new RtError("evalGradeScore is not defined");
    }

    evalScoreExpression(node: ScoreExpression, ctx: InterpreterContext): RtObject {
        throw new RtError("evalScoreExpression is not defined");
    }

    evalQuestionReference(node: QuestionReference, ctx: InterpreterContext): RtObject {
        throw new RtError("evalQuestionReference is not defined");
    }

    evalNrOfCorrectAnswers(node: NrOfCorrectAnswers, ctx: InterpreterContext): RtObject {
        throw new RtError("evalNrOfCorrectAnswers is not defined");
    }

    evalNumberLiteralExpression(node: NumberLiteralExpression, ctx: InterpreterContext): RtObject {
        throw new RtError("evalNumberLiteralExpression is not defined");
    }

    evalBinaryExpression(node: BinaryExpression, ctx: InterpreterContext): RtObject {
        throw new RtError("evalBinaryExpression is not defined");
    }

    evalAndExpression(node: AndExpression, ctx: InterpreterContext): RtObject {
        throw new RtError("evalAndExpression is not defined");
    }

    evalOrExpression(node: OrExpression, ctx: InterpreterContext): RtObject {
        throw new RtError("evalOrExpression is not defined");
    }

    evalComparisonExpression(node: ComparisonExpression, ctx: InterpreterContext): RtObject {
        throw new RtError("evalComparisonExpression is not defined");
    }

    evalLessOrEqualsExpression(node: LessOrEqualsExpression, ctx: InterpreterContext): RtObject {
        throw new RtError("evalLessOrEqualsExpression is not defined");
    }

    evalGreaterOrEqualsExpression(node: GreaterOrEqualsExpression, ctx: InterpreterContext): RtObject {
        throw new RtError("evalGreaterOrEqualsExpression is not defined");
    }

    evalLessThenExpression(node: LessThenExpression, ctx: InterpreterContext): RtObject {
        throw new RtError("evalLessThenExpression is not defined");
    }

    evalGreaterThenExpression(node: GreaterThenExpression, ctx: InterpreterContext): RtObject {
        throw new RtError("evalGreaterThenExpression is not defined");
    }

    evalEqualsExpression(node: EqualsExpression, ctx: InterpreterContext): RtObject {
        throw new RtError("evalEqualsExpression is not defined");
    }

    evalScenario(node: Scenario, ctx: InterpreterContext): RtObject {
        throw new RtError("evalScenario is not defined");
    }

    evalTestFlow(node: TestFlow, ctx: InterpreterContext): RtObject {
        throw new RtError("evalTestFlow is not defined");
    }

    evalStep(node: Step, ctx: InterpreterContext): RtObject {
        throw new RtError("evalStep is not defined");
    }

    evalLastStep(node: LastStep, ctx: InterpreterContext): RtObject {
        throw new RtError("evalLastStep is not defined");
    }

    evalAnswer(node: Answer, ctx: InterpreterContext): RtObject {
        throw new RtError("evalAnswer is not defined");
    }

    evalPage(node: Page, ctx: InterpreterContext): RtObject {
        throw new RtError("evalPage is not defined");
    }

    evalTheory(node: Theory, ctx: InterpreterContext): RtObject {
        throw new RtError("evalTheory is not defined");
    }

    evalLine(node: Line, ctx: InterpreterContext): RtObject {
        throw new RtError("evalLine is not defined");
    }

    evalVideo(node: Video, ctx: InterpreterContext): RtObject {
        throw new RtError("evalVideo is not defined");
    }

    evalWorkSheet(node: WorkSheet, ctx: InterpreterContext): RtObject {
        throw new RtError("evalWorkSheet is not defined");
    }

    evalExamplePage(node: ExamplePage, ctx: InterpreterContext): RtObject {
        throw new RtError("evalExamplePage is not defined");
    }

    evalInDepthMaterial(node: InDepthMaterial, ctx: InterpreterContext): RtObject {
        throw new RtError("evalInDepthMaterial is not defined");
    }

    evalQuestion(node: Question, ctx: InterpreterContext): RtObject {
        throw new RtError("evalQuestion is not defined");
    }

    evalNumberConcept(node: NumberConcept, ctx: InterpreterContext): RtObject {
        throw new RtError("evalNumberConcept is not defined");
    }

    evalSimpleNumber(node: SimpleNumber, ctx: InterpreterContext): RtObject {
        throw new RtError("evalSimpleNumber is not defined");
    }

    evalFraction(node: Fraction, ctx: InterpreterContext): RtObject {
        throw new RtError("evalFraction is not defined");
    }

    evalFlow(node: Flow, ctx: InterpreterContext): RtObject {
        throw new RtError("evalFlow is not defined");
    }

    evalSiteGroup(node: SiteGroup, ctx: InterpreterContext): RtObject {
        throw new RtError("evalSiteGroup is not defined");
    }

    evalTest(node: Test, ctx: InterpreterContext): RtObject {
        throw new RtError("evalTest is not defined");
    }

    evalTopic(node: Topic, ctx: InterpreterContext): RtObject {
        throw new RtError("evalTopic is not defined");
    }
}
